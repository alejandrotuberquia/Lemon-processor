

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 24 09:54:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.30
    45                           ; Generated 15/09/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F15244 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  0119                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011C                     	;# 
   114  011D                     	;# 
   115  011E                     	;# 
   116  011F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  018E                     	;# 
   120  018F                     	;# 
   121  0190                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  020C                     	;# 
   125  020D                     	;# 
   126  020E                     	;# 
   127  020E                     	;# 
   128  020F                     	;# 
   129  020F                     	;# 
   130  0210                     	;# 
   131  0210                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  028C                     	;# 
   135  028C                     	;# 
   136  028D                     	;# 
   137  028D                     	;# 
   138  028E                     	;# 
   139  028F                     	;# 
   140  0290                     	;# 
   141  0291                     	;# 
   142  030C                     	;# 
   143  030C                     	;# 
   144  030D                     	;# 
   145  030E                     	;# 
   146  030F                     	;# 
   147  0310                     	;# 
   148  0310                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0314                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  059C                     	;# 
   161  059C                     	;# 
   162  059D                     	;# 
   163  059D                     	;# 
   164  059E                     	;# 
   165  059F                     	;# 
   166  070C                     	;# 
   167  070D                     	;# 
   168  070E                     	;# 
   169  0716                     	;# 
   170  0717                     	;# 
   171  0718                     	;# 
   172  080C                     	;# 
   173  0811                     	;# 
   174  0813                     	;# 
   175  0814                     	;# 
   176  081A                     	;# 
   177  081A                     	;# 
   178  081B                     	;# 
   179  081C                     	;# 
   180  081C                     	;# 
   181  081D                     	;# 
   182  081E                     	;# 
   183  081F                     	;# 
   184  088E                     	;# 
   185  0890                     	;# 
   186  0891                     	;# 
   187  0892                     	;# 
   188  0893                     	;# 
   189  090C                     	;# 
   190  1E8F                     	;# 
   191  1E90                     	;# 
   192  1E91                     	;# 
   193  1E92                     	;# 
   194  1E93                     	;# 
   195  1E9C                     	;# 
   196  1EA1                     	;# 
   197  1EA2                     	;# 
   198  1EC3                     	;# 
   199  1EC5                     	;# 
   200  1EC6                     	;# 
   201  1EC7                     	;# 
   202  1ECB                     	;# 
   203  1ECB                     	;# 
   204  1ECB                     	;# 
   205  1ECC                     	;# 
   206  1ECC                     	;# 
   207  1ECC                     	;# 
   208  1F10                     	;# 
   209  1F11                     	;# 
   210  1F12                     	;# 
   211  1F14                     	;# 
   212  1F15                     	;# 
   213  1F1C                     	;# 
   214  1F1D                     	;# 
   215  1F1E                     	;# 
   216  1F1F                     	;# 
   217  1F20                     	;# 
   218  1F21                     	;# 
   219  1F22                     	;# 
   220  1F23                     	;# 
   221  1F24                     	;# 
   222  1F25                     	;# 
   223  1F26                     	;# 
   224  1F27                     	;# 
   225  1F38                     	;# 
   226  1F39                     	;# 
   227  1F3A                     	;# 
   228  1F3B                     	;# 
   229  1F3C                     	;# 
   230  1F3D                     	;# 
   231  1F3E                     	;# 
   232  1F3F                     	;# 
   233  1F43                     	;# 
   234  1F44                     	;# 
   235  1F45                     	;# 
   236  1F46                     	;# 
   237  1F47                     	;# 
   238  1F48                     	;# 
   239  1F49                     	;# 
   240  1F4A                     	;# 
   241  1F4E                     	;# 
   242  1F4F                     	;# 
   243  1F50                     	;# 
   244  1F51                     	;# 
   245  1F52                     	;# 
   246  1F53                     	;# 
   247  1F54                     	;# 
   248  1F55                     	;# 
   249  1FE4                     	;# 
   250  1FE5                     	;# 
   251  1FE6                     	;# 
   252  1FE7                     	;# 
   253  1FE8                     	;# 
   254  1FE8                     	;# 
   255  1FE9                     	;# 
   256  1FEA                     	;# 
   257  1FEB                     	;# 
   258  1FED                     	;# 
   259  1FEE                     	;# 
   260  1FEF                     	;# 
   261  0018                     _LATAbits	set	24
   262  0014                     _TRISC	set	20
   263  0013                     _TRISB	set	19
   264  0012                     _TRISA	set	18
   265  001A                     _LATC	set	26
   266  0019                     _LATB	set	25
   267  0018                     _LATA	set	24
   268  000D                     _PORTBbits	set	13
   269  000E                     _PORTCbits	set	14
   270  0013                     _TRISBbits	set	19
   271  0014                     _TRISCbits	set	20
   272  1F52                     _INLVLC	set	8018
   273  1F47                     _INLVLB	set	8007
   274  1F3C                     _INLVLA	set	7996
   275  1F51                     _SLRCONC	set	8017
   276  1F46                     _SLRCONB	set	8006
   277  1F3B                     _SLRCONA	set	7995
   278  1F50                     _ODCONC	set	8016
   279  1F45                     _ODCONB	set	8005
   280  1F3A                     _ODCONA	set	7994
   281  1F4F                     _WPUC	set	8015
   282  1F38                     _ANSELA	set	7992
   283  1F43                     _ANSELB	set	8003
   284  1F4E                     _ANSELC	set	8014
   285                           
   286                           	psect	stringtext1
   287  0800                     __pstringtext1:
   288  0800                     STR_1:
   289  0800  344E               	retlw	78	;'N'
   290  0801  3475               	retlw	117	;'u'
   291  0802  346D               	retlw	109	;'m'
   292  0803  344C               	retlw	76	;'L'
   293  0804  3469               	retlw	105	;'i'
   294  0805  346D               	retlw	109	;'m'
   295  0806  346F               	retlw	111	;'o'
   296  0807  346E               	retlw	110	;'n'
   297  0808  3465               	retlw	101	;'e'
   298  0809  3473               	retlw	115	;'s'
   299  080A  3420               	retlw	32	;' '
   300  080B  3425               	retlw	37	;'%'
   301  080C  3464               	retlw	100	;'d'
   302  080D  3400               	retlw	0
   303                           
   304                           	psect	stringtext2
   305  080E                     __pstringtext2:
   306  080E                     STR_11:
   307  080E  3450               	retlw	80	;'P'
   308  080F  3461               	retlw	97	;'a'
   309  0810  3463               	retlw	99	;'c'
   310  0811  3461               	retlw	97	;'a'
   311  0812  3473               	retlw	115	;'s'
   312  0813  3420               	retlw	32	;' '
   313  0814  3431               	retlw	49	;'1'
   314  0815  3430               	retlw	48	;'0'
   315  0816  3400               	retlw	0
   316                           
   317                           	psect	stringtext3
   318  0817                     __pstringtext3:
   319  0817                     STR_2:
   320  0817  3450               	retlw	80	;'P'
   321  0818  3461               	retlw	97	;'a'
   322  0819  3463               	retlw	99	;'c'
   323  081A  3461               	retlw	97	;'a'
   324  081B  3473               	retlw	115	;'s'
   325  081C  3420               	retlw	32	;' '
   326  081D  3431               	retlw	49	;'1'
   327  081E  3400               	retlw	0
   328                           
   329                           	psect	stringtext4
   330  081F                     __pstringtext4:
   331  081F                     STR_3:
   332  081F  3450               	retlw	80	;'P'
   333  0820  3461               	retlw	97	;'a'
   334  0821  3463               	retlw	99	;'c'
   335  0822  3461               	retlw	97	;'a'
   336  0823  3473               	retlw	115	;'s'
   337  0824  3420               	retlw	32	;' '
   338  0825  3432               	retlw	50	;'2'
   339  0826  3400               	retlw	0
   340                           
   341                           	psect	stringtext5
   342  0827                     __pstringtext5:
   343  0827                     STR_4:
   344  0827  3450               	retlw	80	;'P'
   345  0828  3461               	retlw	97	;'a'
   346  0829  3463               	retlw	99	;'c'
   347  082A  3461               	retlw	97	;'a'
   348  082B  3473               	retlw	115	;'s'
   349  082C  3420               	retlw	32	;' '
   350  082D  3433               	retlw	51	;'3'
   351  082E  3400               	retlw	0
   352                           
   353                           	psect	stringtext6
   354  082F                     __pstringtext6:
   355  082F                     STR_5:
   356  082F  3450               	retlw	80	;'P'
   357  0830  3461               	retlw	97	;'a'
   358  0831  3463               	retlw	99	;'c'
   359  0832  3461               	retlw	97	;'a'
   360  0833  3473               	retlw	115	;'s'
   361  0834  3420               	retlw	32	;' '
   362  0835  3434               	retlw	52	;'4'
   363  0836  3400               	retlw	0
   364                           
   365                           	psect	stringtext7
   366  0837                     __pstringtext7:
   367  0837                     STR_6:
   368  0837  3450               	retlw	80	;'P'
   369  0838  3461               	retlw	97	;'a'
   370  0839  3463               	retlw	99	;'c'
   371  083A  3461               	retlw	97	;'a'
   372  083B  3473               	retlw	115	;'s'
   373  083C  3420               	retlw	32	;' '
   374  083D  3435               	retlw	53	;'5'
   375  083E  3400               	retlw	0
   376                           
   377                           	psect	stringtext8
   378  083F                     __pstringtext8:
   379  083F                     STR_7:
   380  083F  3450               	retlw	80	;'P'
   381  0840  3461               	retlw	97	;'a'
   382  0841  3463               	retlw	99	;'c'
   383  0842  3461               	retlw	97	;'a'
   384  0843  3473               	retlw	115	;'s'
   385  0844  3420               	retlw	32	;' '
   386  0845  3436               	retlw	54	;'6'
   387  0846  3400               	retlw	0
   388                           
   389                           	psect	stringtext9
   390  0847                     __pstringtext9:
   391  0847                     STR_8:
   392  0847  3450               	retlw	80	;'P'
   393  0848  3461               	retlw	97	;'a'
   394  0849  3463               	retlw	99	;'c'
   395  084A  3461               	retlw	97	;'a'
   396  084B  3473               	retlw	115	;'s'
   397  084C  3420               	retlw	32	;' '
   398  084D  3437               	retlw	55	;'7'
   399  084E  3400               	retlw	0
   400                           
   401                           	psect	stringtext10
   402  084F                     __pstringtext10:
   403  084F                     STR_9:
   404  084F  3450               	retlw	80	;'P'
   405  0850  3461               	retlw	97	;'a'
   406  0851  3463               	retlw	99	;'c'
   407  0852  3461               	retlw	97	;'a'
   408  0853  3473               	retlw	115	;'s'
   409  0854  3420               	retlw	32	;' '
   410  0855  3438               	retlw	56	;'8'
   411  0856  3400               	retlw	0
   412                           
   413                           	psect	stringtext11
   414  0857                     __pstringtext11:
   415  0857                     STR_10:
   416  0857  3450               	retlw	80	;'P'
   417  0858  3461               	retlw	97	;'a'
   418  0859  3463               	retlw	99	;'c'
   419  085A  3461               	retlw	97	;'a'
   420  085B  3473               	retlw	115	;'s'
   421  085C  3420               	retlw	32	;' '
   422  085D  3439               	retlw	57	;'9'
   423  085E  3400               	retlw	0
   424                           
   425                           	psect	stringtext12
   426  0000                     __pstringtext12:
   427                           
   428                           	psect	cinit
   429  07F0                     start_initialization:	
   430                           ; #config settings
   431                           
   432  07F0                     __initialization:
   433                           
   434                           ; Clear objects allocated to BANK0
   435  07F0  0140               	movlb	0	; select bank0
   436  07F1  01EC               	clrf	__pbssBANK0& (0+127)
   437  07F2  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   438  07F3  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   439  07F4  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   440                           
   441                           ; Clear objects allocated to BANK1
   442  07F5  30A0               	movlw	low __pbssBANK1
   443  07F6  0084               	movwf	4
   444  07F7  3000               	movlw	high __pbssBANK1
   445  07F8  0085               	movwf	5
   446  07F9  303C               	movlw	60
   447  07FA  3180  200C  3187   	fcall	clear_ram0
   448  07FD                     end_of_initialization:	
   449                           ;End of C runtime variable initialization code
   450                           
   451  07FD                     __end_of__initialization:
   452  07FD  0140               	movlb	0
   453  07FE  3186  2E26         	ljmp	_main	;jump to C main() function
   454                           
   455                           	psect	bssBANK0
   456  006C                     __pbssBANK0:
   457  006C                     _flags:
   458  006C                     	ds	2
   459  006E                     _contador:
   460  006E                     	ds	2
   461                           
   462                           	psect	bssBANK1
   463  00A0                     __pbssBANK1:
   464  00A0                     _nout:
   465  00A0                     	ds	2
   466  00A2                     _width:
   467  00A2                     	ds	2
   468  00A4                     _prec:
   469  00A4                     	ds	2
   470  00A6                     _paca:
   471  00A6                     	ds	2
   472  00A8                     _dbuf:
   473  00A8                     	ds	32
   474  00C8                     _CONT:
   475  00C8                     	ds	20
   476                           
   477                           	psect	clrtext
   478  000C                     clear_ram0:	
   479                           ;	Called with FSR0 containing the base address, and
   480                           ;	WREG with the size to clear
   481                           
   482  000C  0064               	clrwdt	;clear the watchdog before getting into this loop
   483  000D                     clrloop0:
   484  000D  0180               	clrf	0	;clear RAM location pointed to by FSR
   485  000E  3101               	addfsr 0,1
   486  000F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   487  0010  280D               	goto	clrloop0	;have we reached the end yet?
   488  0011  3400               	retlw	0	;all done for this memory range, return
   489                           
   490                           	psect	cstackBANK1
   491  00DC                     __pcstackBANK1:
   492  00DC                     	ds	2
   493  00DE                     sprintf@ap:
   494                           
   495                           ; 1 bytes @ 0x2
   496  00DE                     	ds	1
   497  00DF                     sprintf@s:
   498                           
   499                           ; 1 bytes @ 0x3
   500  00DF                     	ds	1
   501  00E0                     sprintf@f:
   502                           
   503                           ; 5 bytes @ 0x4
   504  00E0                     	ds	5
   505                           
   506                           	psect	cstackCOMMON
   507  0070                     __pcstackCOMMON:
   508  0070                     ?_Lcd_Cmd:
   509  0070                     ??_Lcd_Cmd:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_Lcd_Chr_CP:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_Lcd_Chr_CP:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_putch:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_putch:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_Lcd_Init:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_PIN_MANAGER_Initialize:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_PIN_MANAGER_Initialize:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_main:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??___aodiv:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??___aomod:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_fputc:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_strlen:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0070                     putch@c:	
   549                           ; 2 bytes @ 0x0
   550                           
   551  0070                     fputc@c:	
   552                           ; 1 bytes @ 0x0
   553                           
   554                           
   555                           ; 2 bytes @ 0x0
   556  0070                     	ds	1
   557  0071                     ___aodiv@counter:
   558  0071                     ___aomod@counter:	
   559                           ; 1 bytes @ 0x1
   560                           
   561                           
   562                           ; 1 bytes @ 0x1
   563  0071                     	ds	1
   564  0072                     ??_strlen:
   565  0072                     Lcd_Chr_CP@data:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     Lcd_Cmd@data:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     ___aodiv@sign:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  0072                     ___aomod@sign:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     fputc@fp:	
   578                           ; 1 bytes @ 0x2
   579                           
   580                           
   581                           ; 1 bytes @ 0x2
   582  0072                     	ds	1
   583  0073                     ??_fputc:
   584  0073                     ??_Lcd_Init:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     ?_Lcd_Out2:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     ?_abs:	
   591                           ; 1 bytes @ 0x3
   592                           
   593  0073                     Lcd_Out2@x:	
   594                           ; 2 bytes @ 0x3
   595                           
   596  0073                     strlen@a:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0073                     abs@a:	
   600                           ; 1 bytes @ 0x3
   601                           
   602  0073                     ___aodiv@quotient:	
   603                           ; 2 bytes @ 0x3
   604                           
   605                           
   606                           ; 8 bytes @ 0x3
   607  0073                     	ds	1
   608  0074                     Lcd_Init@data:
   609  0074                     Lcd_Out2@buffer:	
   610                           ; 1 bytes @ 0x4
   611                           
   612  0074                     strlen@s:	
   613                           ; 1 bytes @ 0x4
   614                           
   615                           
   616                           ; 1 bytes @ 0x4
   617  0074                     	ds	1
   618  0075                     ??_abs:
   619  0075                     ??_Lcd_Out2:	
   620                           ; 1 bytes @ 0x5
   621                           
   622                           
   623                           ; 1 bytes @ 0x5
   624  0075                     	ds	2
   625  0077                     Lcd_Out2@y:
   626                           
   627                           ; 1 bytes @ 0x7
   628  0077                     	ds	1
   629  0078                     ?_fputs:
   630  0078                     Lcd_Out2@data:	
   631                           ; 2 bytes @ 0x8
   632                           
   633  0078                     fputs@fp:	
   634                           ; 1 bytes @ 0x8
   635                           
   636                           
   637                           ; 1 bytes @ 0x8
   638  0078                     	ds	1
   639  0079                     ??_fputs:
   640                           
   641                           ; 1 bytes @ 0x9
   642  0079                     	ds	3
   643  007C                     ??_pad:
   644                           
   645                           ; 1 bytes @ 0xC
   646  007C                     	ds	1
   647  007D                     ??_sprintf:
   648                           
   649                           ; 1 bytes @ 0xD
   650  007D                     	ds	1
   651                           
   652                           	psect	cstackBANK0
   653  0020                     __pcstackBANK0:
   654  0020                     ?___aodiv:
   655  0020                     ?___aomod:	
   656                           ; 8 bytes @ 0x0
   657                           
   658  0020                     fputs@c:	
   659                           ; 8 bytes @ 0x0
   660                           
   661  0020                     ___aodiv@divisor:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0020                     ___aomod@divisor:	
   665                           ; 8 bytes @ 0x0
   666                           
   667                           
   668                           ; 8 bytes @ 0x0
   669  0020                     	ds	1
   670  0021                     fputs@i:
   671                           
   672                           ; 2 bytes @ 0x1
   673  0021                     	ds	2
   674  0023                     fputs@s:
   675                           
   676                           ; 1 bytes @ 0x3
   677  0023                     	ds	1
   678  0024                     ?_pad:
   679  0024                     pad@buf:	
   680                           ; 2 bytes @ 0x4
   681                           
   682                           
   683                           ; 1 bytes @ 0x4
   684  0024                     	ds	1
   685  0025                     pad@p:
   686                           
   687                           ; 2 bytes @ 0x5
   688  0025                     	ds	2
   689  0027                     pad@i:
   690                           
   691                           ; 2 bytes @ 0x7
   692  0027                     	ds	1
   693  0028                     ___aodiv@dividend:
   694  0028                     ___aomod@dividend:	
   695                           ; 8 bytes @ 0x8
   696                           
   697                           
   698                           ; 8 bytes @ 0x8
   699  0028                     	ds	1
   700  0029                     pad@w:
   701                           
   702                           ; 2 bytes @ 0x9
   703  0029                     	ds	2
   704  002B                     pad@fp:
   705                           
   706                           ; 1 bytes @ 0xB
   707  002B                     	ds	5
   708  0030                     ?_dtoa:
   709  0030                     dtoa@d:	
   710                           ; 2 bytes @ 0x10
   711                           
   712                           
   713                           ; 8 bytes @ 0x10
   714  0030                     	ds	8
   715  0038                     ??_dtoa:
   716                           
   717                           ; 1 bytes @ 0x18
   718  0038                     	ds	3
   719  003B                     _dtoa$608:
   720                           
   721                           ; 2 bytes @ 0x1B
   722  003B                     	ds	2
   723  003D                     dtoa@fp:
   724                           
   725                           ; 1 bytes @ 0x1D
   726  003D                     	ds	1
   727  003E                     dtoa@p:
   728                           
   729                           ; 2 bytes @ 0x1E
   730  003E                     	ds	2
   731  0040                     dtoa@w:
   732                           
   733                           ; 2 bytes @ 0x20
   734  0040                     	ds	2
   735  0042                     dtoa@s:
   736                           
   737                           ; 2 bytes @ 0x22
   738  0042                     	ds	2
   739  0044                     dtoa@n:
   740                           
   741                           ; 8 bytes @ 0x24
   742  0044                     	ds	8
   743  004C                     dtoa@i:
   744                           
   745                           ; 2 bytes @ 0x2C
   746  004C                     	ds	2
   747  004E                     ?_vfpfcnvrt:
   748  004E                     vfpfcnvrt@fmt:	
   749                           ; 2 bytes @ 0x2E
   750                           
   751                           
   752                           ; 1 bytes @ 0x2E
   753  004E                     	ds	1
   754  004F                     vfpfcnvrt@ap:
   755                           
   756                           ; 1 bytes @ 0x2F
   757  004F                     	ds	1
   758  0050                     ??_vfpfcnvrt:
   759                           
   760                           ; 1 bytes @ 0x30
   761  0050                     	ds	5
   762  0055                     vfpfcnvrt@ll:
   763                           
   764                           ; 8 bytes @ 0x35
   765  0055                     	ds	8
   766  005D                     vfpfcnvrt@fp:
   767                           
   768                           ; 1 bytes @ 0x3D
   769  005D                     	ds	1
   770  005E                     ?_vfprintf:
   771  005E                     vfprintf@fmt:	
   772                           ; 2 bytes @ 0x3E
   773                           
   774                           
   775                           ; 2 bytes @ 0x3E
   776  005E                     	ds	2
   777  0060                     vfprintf@ap:
   778                           
   779                           ; 1 bytes @ 0x40
   780  0060                     	ds	1
   781  0061                     ??_vfprintf:
   782                           
   783                           ; 1 bytes @ 0x41
   784  0061                     	ds	2
   785  0063                     vfprintf@fp:
   786                           
   787                           ; 1 bytes @ 0x43
   788  0063                     	ds	1
   789  0064                     vfprintf@cfmt:
   790                           
   791                           ; 2 bytes @ 0x44
   792  0064                     	ds	2
   793  0066                     ?_sprintf:
   794  0066                     sprintf@fmt:	
   795                           ; 2 bytes @ 0x46
   796                           
   797                           
   798                           ; 2 bytes @ 0x46
   799  0066                     	ds	4
   800  006A                     ??_main:
   801                           
   802                           ; 1 bytes @ 0x4A
   803  006A                     	ds	2
   804                           
   805                           	psect	maintext
   806  0626                     __pmaintext:	
   807 ;;
   808 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   809 ;;
   810 ;; *************** function _main *****************
   811 ;; Defined at:
   812 ;;		line 106 in file "Proyecto.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : B3F/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   826 ;;      Params:         0       0       0       0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0
   828 ;;      Temps:          0       2       0       0       0       0       0       0
   829 ;;      Totals:         0       2       0       0       0       0       0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels required when called:    8
   832 ;; This function calls:
   833 ;;		_Lcd_Cmd
   834 ;;		_Lcd_Init
   835 ;;		_Lcd_Out2
   836 ;;		_PIN_MANAGER_Initialize
   837 ;;		_sprintf
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  0626                     _main:
   846  0626                     l1685:	
   847                           ;incstack = 0
   848                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   849                           
   850                           
   851                           ;Proyecto.c: 108:     PIN_MANAGER_Initialize();
   852  0626  318E  26A5  3186   	fcall	_PIN_MANAGER_Initialize
   853  0629                     l1687:
   854                           
   855                           ;Proyecto.c: 109:     LATAbits.LATA2=1;
   856  0629  0140               	movlb	0	; select bank0
   857  062A  1518               	bsf	24,2	;volatile
   858                           
   859                           ;Proyecto.c: 112:     Lcd_Init();
   860  062B  3180  2043  3186   	fcall	_Lcd_Init
   861                           
   862                           ;Proyecto.c: 113:     Lcd_Cmd(12);
   863  062E  300C               	movlw	12
   864  062F  3180  20CF  3186   	fcall	_Lcd_Cmd
   865  0632                     l1689:
   866                           
   867                           ;Proyecto.c: 114:     _delay((unsigned long)((1000)*(1000000/4000.0)));
   868  0632  3002               	movlw	2
   869  0633  0140               	movlb	0	; select bank0
   870  0634  00EB               	movwf	??_main+1
   871  0635  3045               	movlw	69
   872  0636  00EA               	movwf	??_main
   873  0637  30A9               	movlw	169
   874  0638                     u1617:
   875  0638  0B89               	decfsz	9,f
   876  0639  2E38               	goto	u1617
   877  063A  0BEA               	decfsz	??_main,f
   878  063B  2E38               	goto	u1617
   879  063C  0BEB               	decfsz	??_main+1,f
   880  063D  2E38               	goto	u1617
   881  063E  3200               	nop2
   882  063F                     l1691:
   883                           
   884                           ;Proyecto.c: 116:     if(PORTBbits.RB5==1){
   885  063F  0140               	movlb	0	; select bank0
   886  0640  1E8D               	btfss	13,5	;volatile
   887  0641  2E43               	goto	u1491
   888  0642  2E44               	goto	u1490
   889  0643                     u1491:
   890  0643  2E4C               	goto	l1695
   891  0644                     u1490:
   892  0644                     l1693:
   893                           
   894                           ;Proyecto.c: 117:     _delay((unsigned long)((20)*(1000000/4000.0)));
   895  0644  3007               	movlw	7
   896  0645  0140               	movlb	0	; select bank0
   897  0646  00EA               	movwf	??_main
   898  0647  307D               	movlw	125
   899  0648                     u1627:
   900  0648  0B89               	decfsz	9,f
   901  0649  2E48               	goto	u1627
   902  064A  0BEA               	decfsz	??_main,f
   903  064B  2E48               	goto	u1627
   904  064C                     l1695:
   905                           
   906                           ;Proyecto.c: 119:     if(PORTBbits.RB5==0){
   907  064C  0140               	movlb	0	; select bank0
   908  064D  1A8D               	btfsc	13,5	;volatile
   909  064E  2E50               	goto	u1501
   910  064F  2E51               	goto	u1500
   911  0650                     u1501:
   912  0650  2E7B               	goto	l1703
   913  0651                     u1500:
   914  0651                     l1697:
   915                           
   916                           ;Proyecto.c: 120:         contador++;
   917  0651  3001               	movlw	1
   918  0652  07EE               	addwf	_contador,f
   919  0653  3000               	movlw	0
   920  0654  3DEF               	addwfc	_contador+1,f
   921  0655                     l1699:
   922                           
   923                           ;Proyecto.c: 121:          sprintf(CONT, "NumLimones %d",contador);
   924  0655  3000               	movlw	low (STR_1| (0+32768))
   925  0656  00E6               	movwf	sprintf@fmt
   926  0657  3088               	movlw	high (STR_1| (0+32768))
   927  0658  00E7               	movwf	sprintf@fmt+1
   928  0659  086F               	movf	_contador+1,w
   929  065A  00E9               	movwf	?_sprintf+3
   930  065B  086E               	movf	_contador,w
   931  065C  00E8               	movwf	?_sprintf+2
   932  065D  30C8               	movlw	(low (_CONT| 0))& (0+255)
   933  065E  318E  26C6  3186   	fcall	_sprintf
   934  0661                     l1701:
   935                           
   936                           ;Proyecto.c: 122:         Lcd_Out2(1,2,CONT);
   937  0661  3002               	movlw	2
   938  0662  0140               	movlb	0	; select bank0
   939  0663  00EA               	movwf	??_main
   940  0664  086A               	movf	??_main,w
   941  0665  00F3               	movwf	Lcd_Out2@x
   942  0666  30C8               	movlw	(low (_CONT| 0))& (0+255)
   943  0667  00EB               	movwf	??_main+1
   944  0668  086B               	movf	??_main+1,w
   945  0669  00F4               	movwf	Lcd_Out2@buffer
   946  066A  3001               	movlw	1
   947  066B  318F  2712  3186   	fcall	_Lcd_Out2
   948                           
   949                           ;Proyecto.c: 123:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   950  066E  3002               	movlw	2
   951  066F  0140               	movlb	0	; select bank0
   952  0670  00EB               	movwf	??_main+1
   953  0671  3045               	movlw	69
   954  0672  00EA               	movwf	??_main
   955  0673  30A9               	movlw	169
   956  0674                     u1637:
   957  0674  0B89               	decfsz	9,f
   958  0675  2E74               	goto	u1637
   959  0676  0BEA               	decfsz	??_main,f
   960  0677  2E74               	goto	u1637
   961  0678  0BEB               	decfsz	??_main+1,f
   962  0679  2E74               	goto	u1637
   963  067A  3200               	nop2
   964  067B                     l1703:
   965                           
   966                           ;Proyecto.c: 126:     if (contador==10){
   967  067B  300A               	movlw	10
   968  067C  0140               	movlb	0	; select bank0
   969  067D  066E               	xorwf	_contador,w
   970  067E  046F               	iorwf	_contador+1,w
   971  067F  1D03               	btfss	3,2
   972  0680  2E82               	goto	u1511
   973  0681  2E83               	goto	u1510
   974  0682                     u1511:
   975  0682  2EA0               	goto	l1709
   976  0683                     u1510:
   977  0683                     l1705:
   978                           
   979                           ;Proyecto.c: 128:         sprintf(CONT, "Pacas 1");
   980  0683  3017               	movlw	low (STR_2| (0+32768))
   981  0684  00E6               	movwf	sprintf@fmt
   982  0685  3088               	movlw	high (STR_2| (0+32768))
   983  0686  00E7               	movwf	sprintf@fmt+1
   984  0687  30C8               	movlw	(low (_CONT| 0))& (0+255)
   985  0688  318E  26C6  3186   	fcall	_sprintf
   986                           
   987                           ;Proyecto.c: 129:         Lcd_Out2(2,2,CONT);
   988  068B  3002               	movlw	2
   989  068C  0140               	movlb	0	; select bank0
   990  068D  00EA               	movwf	??_main
   991  068E  086A               	movf	??_main,w
   992  068F  00F3               	movwf	Lcd_Out2@x
   993  0690  30C8               	movlw	(low (_CONT| 0))& (0+255)
   994  0691  00EB               	movwf	??_main+1
   995  0692  086B               	movf	??_main+1,w
   996  0693  00F4               	movwf	Lcd_Out2@buffer
   997  0694  3002               	movlw	2
   998  0695  318F  2712  3186   	fcall	_Lcd_Out2
   999  0698                     l1707:
  1000                           
  1001                           ;Proyecto.c: 130:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1002  0698  30A3               	movlw	163
  1003  0699  0140               	movlb	0	; select bank0
  1004  069A  00EA               	movwf	??_main
  1005  069B  3055               	movlw	85
  1006  069C                     u1647:
  1007  069C  0B89               	decfsz	9,f
  1008  069D  2E9C               	goto	u1647
  1009  069E  0BEA               	decfsz	??_main,f
  1010  069F  2E9C               	goto	u1647
  1011  06A0                     l1709:
  1012                           
  1013                           ;Proyecto.c: 133:     if (contador==20){
  1014  06A0  3014               	movlw	20
  1015  06A1  0140               	movlb	0	; select bank0
  1016  06A2  066E               	xorwf	_contador,w
  1017  06A3  046F               	iorwf	_contador+1,w
  1018  06A4  1D03               	btfss	3,2
  1019  06A5  2EA7               	goto	u1521
  1020  06A6  2EA8               	goto	u1520
  1021  06A7                     u1521:
  1022  06A7  2EC5               	goto	l1715
  1023  06A8                     u1520:
  1024  06A8                     l1711:
  1025                           
  1026                           ;Proyecto.c: 135:         sprintf(CONT, "Pacas 2");
  1027  06A8  301F               	movlw	low (STR_3| (0+32768))
  1028  06A9  00E6               	movwf	sprintf@fmt
  1029  06AA  3088               	movlw	high (STR_3| (0+32768))
  1030  06AB  00E7               	movwf	sprintf@fmt+1
  1031  06AC  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1032  06AD  318E  26C6  3186   	fcall	_sprintf
  1033                           
  1034                           ;Proyecto.c: 136:         Lcd_Out2(2,2,CONT);
  1035  06B0  3002               	movlw	2
  1036  06B1  0140               	movlb	0	; select bank0
  1037  06B2  00EA               	movwf	??_main
  1038  06B3  086A               	movf	??_main,w
  1039  06B4  00F3               	movwf	Lcd_Out2@x
  1040  06B5  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1041  06B6  00EB               	movwf	??_main+1
  1042  06B7  086B               	movf	??_main+1,w
  1043  06B8  00F4               	movwf	Lcd_Out2@buffer
  1044  06B9  3002               	movlw	2
  1045  06BA  318F  2712  3186   	fcall	_Lcd_Out2
  1046  06BD                     l1713:
  1047                           
  1048                           ;Proyecto.c: 137:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1049  06BD  30A3               	movlw	163
  1050  06BE  0140               	movlb	0	; select bank0
  1051  06BF  00EA               	movwf	??_main
  1052  06C0  3055               	movlw	85
  1053  06C1                     u1657:
  1054  06C1  0B89               	decfsz	9,f
  1055  06C2  2EC1               	goto	u1657
  1056  06C3  0BEA               	decfsz	??_main,f
  1057  06C4  2EC1               	goto	u1657
  1058  06C5                     l1715:
  1059                           
  1060                           ;Proyecto.c: 140:     if (contador==30){
  1061  06C5  301E               	movlw	30
  1062  06C6  0140               	movlb	0	; select bank0
  1063  06C7  066E               	xorwf	_contador,w
  1064  06C8  046F               	iorwf	_contador+1,w
  1065  06C9  1D03               	btfss	3,2
  1066  06CA  2ECC               	goto	u1531
  1067  06CB  2ECD               	goto	u1530
  1068  06CC                     u1531:
  1069  06CC  2EEA               	goto	l1721
  1070  06CD                     u1530:
  1071  06CD                     l1717:
  1072                           
  1073                           ;Proyecto.c: 142:         sprintf(CONT, "Pacas 3");
  1074  06CD  3027               	movlw	low (STR_4| (0+32768))
  1075  06CE  00E6               	movwf	sprintf@fmt
  1076  06CF  3088               	movlw	high (STR_4| (0+32768))
  1077  06D0  00E7               	movwf	sprintf@fmt+1
  1078  06D1  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1079  06D2  318E  26C6  3186   	fcall	_sprintf
  1080                           
  1081                           ;Proyecto.c: 143:         Lcd_Out2(2,2,CONT);
  1082  06D5  3002               	movlw	2
  1083  06D6  0140               	movlb	0	; select bank0
  1084  06D7  00EA               	movwf	??_main
  1085  06D8  086A               	movf	??_main,w
  1086  06D9  00F3               	movwf	Lcd_Out2@x
  1087  06DA  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1088  06DB  00EB               	movwf	??_main+1
  1089  06DC  086B               	movf	??_main+1,w
  1090  06DD  00F4               	movwf	Lcd_Out2@buffer
  1091  06DE  3002               	movlw	2
  1092  06DF  318F  2712  3186   	fcall	_Lcd_Out2
  1093  06E2                     l1719:
  1094                           
  1095                           ;Proyecto.c: 144:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1096  06E2  30A3               	movlw	163
  1097  06E3  0140               	movlb	0	; select bank0
  1098  06E4  00EA               	movwf	??_main
  1099  06E5  3055               	movlw	85
  1100  06E6                     u1667:
  1101  06E6  0B89               	decfsz	9,f
  1102  06E7  2EE6               	goto	u1667
  1103  06E8  0BEA               	decfsz	??_main,f
  1104  06E9  2EE6               	goto	u1667
  1105  06EA                     l1721:
  1106                           
  1107                           ;Proyecto.c: 147:     if (contador==40){
  1108  06EA  3028               	movlw	40
  1109  06EB  0140               	movlb	0	; select bank0
  1110  06EC  066E               	xorwf	_contador,w
  1111  06ED  046F               	iorwf	_contador+1,w
  1112  06EE  1D03               	btfss	3,2
  1113  06EF  2EF1               	goto	u1541
  1114  06F0  2EF2               	goto	u1540
  1115  06F1                     u1541:
  1116  06F1  2F0F               	goto	l1727
  1117  06F2                     u1540:
  1118  06F2                     l1723:
  1119                           
  1120                           ;Proyecto.c: 149:         sprintf(CONT, "Pacas 4");
  1121  06F2  302F               	movlw	low (STR_5| (0+32768))
  1122  06F3  00E6               	movwf	sprintf@fmt
  1123  06F4  3088               	movlw	high (STR_5| (0+32768))
  1124  06F5  00E7               	movwf	sprintf@fmt+1
  1125  06F6  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1126  06F7  318E  26C6  3186   	fcall	_sprintf
  1127                           
  1128                           ;Proyecto.c: 150:         Lcd_Out2(2,2,CONT);
  1129  06FA  3002               	movlw	2
  1130  06FB  0140               	movlb	0	; select bank0
  1131  06FC  00EA               	movwf	??_main
  1132  06FD  086A               	movf	??_main,w
  1133  06FE  00F3               	movwf	Lcd_Out2@x
  1134  06FF  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1135  0700  00EB               	movwf	??_main+1
  1136  0701  086B               	movf	??_main+1,w
  1137  0702  00F4               	movwf	Lcd_Out2@buffer
  1138  0703  3002               	movlw	2
  1139  0704  318F  2712  3186   	fcall	_Lcd_Out2
  1140  0707                     l1725:
  1141                           
  1142                           ;Proyecto.c: 151:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1143  0707  30A3               	movlw	163
  1144  0708  0140               	movlb	0	; select bank0
  1145  0709  00EA               	movwf	??_main
  1146  070A  3055               	movlw	85
  1147  070B                     u1677:
  1148  070B  0B89               	decfsz	9,f
  1149  070C  2F0B               	goto	u1677
  1150  070D  0BEA               	decfsz	??_main,f
  1151  070E  2F0B               	goto	u1677
  1152  070F                     l1727:
  1153                           
  1154                           ;Proyecto.c: 154:     if (contador==50){
  1155  070F  3032               	movlw	50
  1156  0710  0140               	movlb	0	; select bank0
  1157  0711  066E               	xorwf	_contador,w
  1158  0712  046F               	iorwf	_contador+1,w
  1159  0713  1D03               	btfss	3,2
  1160  0714  2F16               	goto	u1551
  1161  0715  2F17               	goto	u1550
  1162  0716                     u1551:
  1163  0716  2F34               	goto	l1733
  1164  0717                     u1550:
  1165  0717                     l1729:
  1166                           
  1167                           ;Proyecto.c: 156:         sprintf(CONT, "Pacas 5");
  1168  0717  3037               	movlw	low (STR_6| (0+32768))
  1169  0718  00E6               	movwf	sprintf@fmt
  1170  0719  3088               	movlw	high (STR_6| (0+32768))
  1171  071A  00E7               	movwf	sprintf@fmt+1
  1172  071B  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1173  071C  318E  26C6  3186   	fcall	_sprintf
  1174                           
  1175                           ;Proyecto.c: 157:         Lcd_Out2(2,2,CONT);
  1176  071F  3002               	movlw	2
  1177  0720  0140               	movlb	0	; select bank0
  1178  0721  00EA               	movwf	??_main
  1179  0722  086A               	movf	??_main,w
  1180  0723  00F3               	movwf	Lcd_Out2@x
  1181  0724  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1182  0725  00EB               	movwf	??_main+1
  1183  0726  086B               	movf	??_main+1,w
  1184  0727  00F4               	movwf	Lcd_Out2@buffer
  1185  0728  3002               	movlw	2
  1186  0729  318F  2712  3186   	fcall	_Lcd_Out2
  1187  072C                     l1731:
  1188                           
  1189                           ;Proyecto.c: 158:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1190  072C  30A3               	movlw	163
  1191  072D  0140               	movlb	0	; select bank0
  1192  072E  00EA               	movwf	??_main
  1193  072F  3055               	movlw	85
  1194  0730                     u1687:
  1195  0730  0B89               	decfsz	9,f
  1196  0731  2F30               	goto	u1687
  1197  0732  0BEA               	decfsz	??_main,f
  1198  0733  2F30               	goto	u1687
  1199  0734                     l1733:
  1200                           
  1201                           ;Proyecto.c: 161:       if (contador==60){
  1202  0734  303C               	movlw	60
  1203  0735  0140               	movlb	0	; select bank0
  1204  0736  066E               	xorwf	_contador,w
  1205  0737  046F               	iorwf	_contador+1,w
  1206  0738  1D03               	btfss	3,2
  1207  0739  2F3B               	goto	u1561
  1208  073A  2F3C               	goto	u1560
  1209  073B                     u1561:
  1210  073B  2F59               	goto	l1739
  1211  073C                     u1560:
  1212  073C                     l1735:
  1213                           
  1214                           ;Proyecto.c: 163:         sprintf(CONT, "Pacas 6");
  1215  073C  303F               	movlw	low (STR_7| (0+32768))
  1216  073D  00E6               	movwf	sprintf@fmt
  1217  073E  3088               	movlw	high (STR_7| (0+32768))
  1218  073F  00E7               	movwf	sprintf@fmt+1
  1219  0740  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1220  0741  318E  26C6  3186   	fcall	_sprintf
  1221                           
  1222                           ;Proyecto.c: 164:         Lcd_Out2(2,2,CONT);
  1223  0744  3002               	movlw	2
  1224  0745  0140               	movlb	0	; select bank0
  1225  0746  00EA               	movwf	??_main
  1226  0747  086A               	movf	??_main,w
  1227  0748  00F3               	movwf	Lcd_Out2@x
  1228  0749  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1229  074A  00EB               	movwf	??_main+1
  1230  074B  086B               	movf	??_main+1,w
  1231  074C  00F4               	movwf	Lcd_Out2@buffer
  1232  074D  3002               	movlw	2
  1233  074E  318F  2712  3186   	fcall	_Lcd_Out2
  1234  0751                     l1737:
  1235                           
  1236                           ;Proyecto.c: 165:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1237  0751  30A3               	movlw	163
  1238  0752  0140               	movlb	0	; select bank0
  1239  0753  00EA               	movwf	??_main
  1240  0754  3055               	movlw	85
  1241  0755                     u1697:
  1242  0755  0B89               	decfsz	9,f
  1243  0756  2F55               	goto	u1697
  1244  0757  0BEA               	decfsz	??_main,f
  1245  0758  2F55               	goto	u1697
  1246  0759                     l1739:
  1247                           
  1248                           ;Proyecto.c: 168:     if (contador==70){
  1249  0759  3046               	movlw	70
  1250  075A  0140               	movlb	0	; select bank0
  1251  075B  066E               	xorwf	_contador,w
  1252  075C  046F               	iorwf	_contador+1,w
  1253  075D  1D03               	btfss	3,2
  1254  075E  2F60               	goto	u1571
  1255  075F  2F61               	goto	u1570
  1256  0760                     u1571:
  1257  0760  2F7E               	goto	l1745
  1258  0761                     u1570:
  1259  0761                     l1741:
  1260                           
  1261                           ;Proyecto.c: 170:         sprintf(CONT, "Pacas 7");
  1262  0761  3047               	movlw	low (STR_8| (0+32768))
  1263  0762  00E6               	movwf	sprintf@fmt
  1264  0763  3088               	movlw	high (STR_8| (0+32768))
  1265  0764  00E7               	movwf	sprintf@fmt+1
  1266  0765  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1267  0766  318E  26C6  3186   	fcall	_sprintf
  1268                           
  1269                           ;Proyecto.c: 171:         Lcd_Out2(2,2,CONT);
  1270  0769  3002               	movlw	2
  1271  076A  0140               	movlb	0	; select bank0
  1272  076B  00EA               	movwf	??_main
  1273  076C  086A               	movf	??_main,w
  1274  076D  00F3               	movwf	Lcd_Out2@x
  1275  076E  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1276  076F  00EB               	movwf	??_main+1
  1277  0770  086B               	movf	??_main+1,w
  1278  0771  00F4               	movwf	Lcd_Out2@buffer
  1279  0772  3002               	movlw	2
  1280  0773  318F  2712  3186   	fcall	_Lcd_Out2
  1281  0776                     l1743:
  1282                           
  1283                           ;Proyecto.c: 172:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1284  0776  30A3               	movlw	163
  1285  0777  0140               	movlb	0	; select bank0
  1286  0778  00EA               	movwf	??_main
  1287  0779  3055               	movlw	85
  1288  077A                     u1707:
  1289  077A  0B89               	decfsz	9,f
  1290  077B  2F7A               	goto	u1707
  1291  077C  0BEA               	decfsz	??_main,f
  1292  077D  2F7A               	goto	u1707
  1293  077E                     l1745:
  1294                           
  1295                           ;Proyecto.c: 175:     if (contador==80){
  1296  077E  3050               	movlw	80
  1297  077F  0140               	movlb	0	; select bank0
  1298  0780  066E               	xorwf	_contador,w
  1299  0781  046F               	iorwf	_contador+1,w
  1300  0782  1D03               	btfss	3,2
  1301  0783  2F85               	goto	u1581
  1302  0784  2F86               	goto	u1580
  1303  0785                     u1581:
  1304  0785  2FA3               	goto	l1751
  1305  0786                     u1580:
  1306  0786                     l1747:
  1307                           
  1308                           ;Proyecto.c: 177:         sprintf(CONT, "Pacas 8");
  1309  0786  304F               	movlw	low (STR_9| (0+32768))
  1310  0787  00E6               	movwf	sprintf@fmt
  1311  0788  3088               	movlw	high (STR_9| (0+32768))
  1312  0789  00E7               	movwf	sprintf@fmt+1
  1313  078A  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1314  078B  318E  26C6  3186   	fcall	_sprintf
  1315                           
  1316                           ;Proyecto.c: 178:         Lcd_Out2(2,2,CONT);
  1317  078E  3002               	movlw	2
  1318  078F  0140               	movlb	0	; select bank0
  1319  0790  00EA               	movwf	??_main
  1320  0791  086A               	movf	??_main,w
  1321  0792  00F3               	movwf	Lcd_Out2@x
  1322  0793  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1323  0794  00EB               	movwf	??_main+1
  1324  0795  086B               	movf	??_main+1,w
  1325  0796  00F4               	movwf	Lcd_Out2@buffer
  1326  0797  3002               	movlw	2
  1327  0798  318F  2712  3186   	fcall	_Lcd_Out2
  1328  079B                     l1749:
  1329                           
  1330                           ;Proyecto.c: 179:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1331  079B  30A3               	movlw	163
  1332  079C  0140               	movlb	0	; select bank0
  1333  079D  00EA               	movwf	??_main
  1334  079E  3055               	movlw	85
  1335  079F                     u1717:
  1336  079F  0B89               	decfsz	9,f
  1337  07A0  2F9F               	goto	u1717
  1338  07A1  0BEA               	decfsz	??_main,f
  1339  07A2  2F9F               	goto	u1717
  1340  07A3                     l1751:
  1341                           
  1342                           ;Proyecto.c: 182:     if (contador==90){
  1343  07A3  305A               	movlw	90
  1344  07A4  0140               	movlb	0	; select bank0
  1345  07A5  066E               	xorwf	_contador,w
  1346  07A6  046F               	iorwf	_contador+1,w
  1347  07A7  1D03               	btfss	3,2
  1348  07A8  2FAA               	goto	u1591
  1349  07A9  2FAB               	goto	u1590
  1350  07AA                     u1591:
  1351  07AA  2FC8               	goto	l1757
  1352  07AB                     u1590:
  1353  07AB                     l1753:
  1354                           
  1355                           ;Proyecto.c: 184:         sprintf(CONT, "Pacas 9");
  1356  07AB  3057               	movlw	low (STR_10| (0+32768))
  1357  07AC  00E6               	movwf	sprintf@fmt
  1358  07AD  3088               	movlw	high (STR_10| (0+32768))
  1359  07AE  00E7               	movwf	sprintf@fmt+1
  1360  07AF  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1361  07B0  318E  26C6  3186   	fcall	_sprintf
  1362                           
  1363                           ;Proyecto.c: 185:         Lcd_Out2(2,2,CONT);
  1364  07B3  3002               	movlw	2
  1365  07B4  0140               	movlb	0	; select bank0
  1366  07B5  00EA               	movwf	??_main
  1367  07B6  086A               	movf	??_main,w
  1368  07B7  00F3               	movwf	Lcd_Out2@x
  1369  07B8  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1370  07B9  00EB               	movwf	??_main+1
  1371  07BA  086B               	movf	??_main+1,w
  1372  07BB  00F4               	movwf	Lcd_Out2@buffer
  1373  07BC  3002               	movlw	2
  1374  07BD  318F  2712  3186   	fcall	_Lcd_Out2
  1375  07C0                     l1755:
  1376                           
  1377                           ;Proyecto.c: 186:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1378  07C0  30A3               	movlw	163
  1379  07C1  0140               	movlb	0	; select bank0
  1380  07C2  00EA               	movwf	??_main
  1381  07C3  3055               	movlw	85
  1382  07C4                     u1727:
  1383  07C4  0B89               	decfsz	9,f
  1384  07C5  2FC4               	goto	u1727
  1385  07C6  0BEA               	decfsz	??_main,f
  1386  07C7  2FC4               	goto	u1727
  1387  07C8                     l1757:
  1388                           
  1389                           ;Proyecto.c: 189:     if (contador==100){
  1390  07C8  3064               	movlw	100
  1391  07C9  0140               	movlb	0	; select bank0
  1392  07CA  066E               	xorwf	_contador,w
  1393  07CB  046F               	iorwf	_contador+1,w
  1394  07CC  1D03               	btfss	3,2
  1395  07CD  2FCF               	goto	u1601
  1396  07CE  2FD0               	goto	u1600
  1397  07CF                     u1601:
  1398  07CF  2E3F               	goto	l1691
  1399  07D0                     u1600:
  1400  07D0                     l1759:
  1401                           
  1402                           ;Proyecto.c: 191:         sprintf(CONT, "Pacas 10");
  1403  07D0  300E               	movlw	low (STR_11| (0+32768))
  1404  07D1  00E6               	movwf	sprintf@fmt
  1405  07D2  3088               	movlw	high (STR_11| (0+32768))
  1406  07D3  00E7               	movwf	sprintf@fmt+1
  1407  07D4  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1408  07D5  318E  26C6  3186   	fcall	_sprintf
  1409                           
  1410                           ;Proyecto.c: 192:         Lcd_Out2(2,2,CONT);
  1411  07D8  3002               	movlw	2
  1412  07D9  0140               	movlb	0	; select bank0
  1413  07DA  00EA               	movwf	??_main
  1414  07DB  086A               	movf	??_main,w
  1415  07DC  00F3               	movwf	Lcd_Out2@x
  1416  07DD  30C8               	movlw	(low (_CONT| 0))& (0+255)
  1417  07DE  00EB               	movwf	??_main+1
  1418  07DF  086B               	movf	??_main+1,w
  1419  07E0  00F4               	movwf	Lcd_Out2@buffer
  1420  07E1  3002               	movlw	2
  1421  07E2  318F  2712  3186   	fcall	_Lcd_Out2
  1422  07E5                     l1761:
  1423                           
  1424                           ;Proyecto.c: 193:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1425  07E5  30A3               	movlw	163
  1426  07E6  0140               	movlb	0	; select bank0
  1427  07E7  00EA               	movwf	??_main
  1428  07E8  3055               	movlw	85
  1429  07E9                     u1737:
  1430  07E9  0B89               	decfsz	9,f
  1431  07EA  2FE9               	goto	u1737
  1432  07EB  0BEA               	decfsz	??_main,f
  1433  07EC  2FE9               	goto	u1737
  1434  07ED  2E3F               	goto	l1691
  1435  07EE  3180  2802         	ljmp	start
  1436  07F0                     __end_of_main:
  1437                           
  1438                           	psect	text1
  1439  0EC6                     __ptext1:	
  1440 ;; *************** function _sprintf *****************
  1441 ;; Defined at:
  1442 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  s               1    wreg     PTR unsigned char 
  1445 ;;		 -> CONT(20), 
  1446 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1447 ;;		 -> STR_11(9), STR_10(8), STR_9(8), STR_8(8), 
  1448 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  1449 ;;		 -> STR_3(8), STR_2(8), STR_1(14), 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  s               1    3[BANK1 ] PTR unsigned char 
  1452 ;;		 -> CONT(20), 
  1453 ;;  f               5    4[BANK1 ] struct _IO_FILE
  1454 ;;  ret             2    0        int 
  1455 ;;  ap              1    2[BANK1 ] PTR void [1]
  1456 ;;		 -> ?_sprintf(2), 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2   70[BANK0 ] int 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1466 ;;      Params:         0       4       0       0       0       0       0       0
  1467 ;;      Locals:         0       0       9       0       0       0       0       0
  1468 ;;      Temps:          1       0       0       0       0       0       0       0
  1469 ;;      Totals:         1       4       9       0       0       0       0       0
  1470 ;;Total ram usage:       14 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    7
  1473 ;; This function calls:
  1474 ;;		_vfprintf
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _sprintf
  1482  0EC6                     _sprintf:
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1486                           ;sprintf@s stored from wreg
  1487  0EC6  0141               	movlb	1	; select bank1
  1488  0EC7  00DF               	movwf	sprintf@s^(0+128)
  1489  0EC8                     l1647:
  1490  0EC8  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1491  0EC9  00FD               	movwf	??_sprintf
  1492  0ECA  087D               	movf	??_sprintf,w
  1493  0ECB  00DE               	movwf	sprintf@ap^(0+128)
  1494  0ECC  085F               	movf	sprintf@s^(0+128),w
  1495  0ECD  00FD               	movwf	??_sprintf
  1496  0ECE  087D               	movf	??_sprintf,w
  1497  0ECF  00E0               	movwf	sprintf@f^(0+128)
  1498  0ED0                     l1649:
  1499  0ED0  01E1               	clrf	(sprintf@f^(0+128)+1)
  1500  0ED1  01E2               	clrf	((sprintf@f+1)^(0+128)+1)
  1501  0ED2                     l1651:
  1502  0ED2  01E3               	clrf	(sprintf@f^(0+128)+3)
  1503  0ED3  01E4               	clrf	((sprintf@f+1)^(0+128)+3)
  1504  0ED4                     l1653:
  1505  0ED4  0140               	movlb	0	; select bank0
  1506  0ED5  0867               	movf	sprintf@fmt+1,w
  1507  0ED6  00DF               	movwf	vfprintf@fmt+1
  1508  0ED7  0866               	movf	sprintf@fmt,w
  1509  0ED8  00DE               	movwf	vfprintf@fmt
  1510  0ED9  30DE               	movlw	(low (sprintf@ap| 0))& (0+255)
  1511  0EDA  00FD               	movwf	??_sprintf
  1512  0EDB  087D               	movf	??_sprintf,w
  1513  0EDC  00E0               	movwf	vfprintf@ap
  1514  0EDD  30E0               	movlw	(low (sprintf@f| 0))& (0+255)
  1515  0EDE  3180  2012  318E   	fcall	_vfprintf
  1516  0EE1                     l1655:
  1517  0EE1  0141               	movlb	1	; select bank1
  1518  0EE2  0861               	movf	(sprintf@f^(0+128)+1),w
  1519  0EE3  075F               	addwf	sprintf@s^(0+128),w
  1520  0EE4  00FD               	movwf	??_sprintf
  1521  0EE5  087D               	movf	??_sprintf,w
  1522  0EE6  0086               	movwf	6
  1523  0EE7  0187               	clrf	7
  1524  0EE8  0181               	clrf	1
  1525  0EE9                     l653:
  1526  0EE9  0008               	return
  1527  0EEA                     __end_of_sprintf:
  1528                           
  1529                           	psect	text2
  1530  0012                     __ptext2:	
  1531 ;; *************** function _vfprintf *****************
  1532 ;; Defined at:
  1533 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  fp              1    wreg     PTR struct _IO_FILE
  1536 ;;		 -> sprintf@f(5), 
  1537 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1538 ;;		 -> STR_11(9), STR_10(8), STR_9(8), STR_8(8), 
  1539 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  1540 ;;		 -> STR_3(8), STR_2(8), STR_1(14), 
  1541 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1542 ;;		 -> sprintf@ap(1), 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1545 ;;		 -> sprintf@f(5), 
  1546 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1547 ;;		 -> STR_11(9), STR_10(8), STR_9(8), STR_8(8), 
  1548 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  1549 ;;		 -> STR_3(8), STR_2(8), STR_1(14), 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2   62[BANK0 ] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1559 ;;      Params:         0       3       0       0       0       0       0       0
  1560 ;;      Locals:         0       3       0       0       0       0       0       0
  1561 ;;      Temps:          0       2       0       0       0       0       0       0
  1562 ;;      Totals:         0       8       0       0       0       0       0       0
  1563 ;;Total ram usage:        8 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    6
  1566 ;; This function calls:
  1567 ;;		_vfpfcnvrt
  1568 ;; This function is called by:
  1569 ;;		_sprintf
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _vfprintf
  1575  0012                     _vfprintf:
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1579                           ;vfprintf@fp stored from wreg
  1580  0012  0140               	movlb	0	; select bank0
  1581  0013  00E3               	movwf	vfprintf@fp
  1582  0014                     l1565:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1585  0014  085F               	movf	vfprintf@fmt+1,w
  1586  0015  00E5               	movwf	vfprintf@cfmt+1
  1587  0016  085E               	movf	vfprintf@fmt,w
  1588  0017  00E4               	movwf	vfprintf@cfmt
  1589  0018                     l1567:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1592  0018  0141               	movlb	1	; select bank1
  1593  0019  01A0               	clrf	_nout^(0+128)
  1594  001A  01A1               	clrf	(_nout+1)^(0+128)
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1597  001B  2830               	goto	l1571
  1598  001C                     l1569:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1601  001C  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1602  001D  00E1               	movwf	??_vfprintf
  1603  001E  0861               	movf	??_vfprintf,w
  1604  001F  00CE               	movwf	vfpfcnvrt@fmt
  1605  0020  0860               	movf	vfprintf@ap,w
  1606  0021  00E2               	movwf	??_vfprintf+1
  1607  0022  0862               	movf	??_vfprintf+1,w
  1608  0023  00CF               	movwf	vfpfcnvrt@ap
  1609  0024  0863               	movf	vfprintf@fp,w
  1610  0025  3181  21F4  3180   	fcall	_vfpfcnvrt
  1611  0028  0140               	movlb	0	; select bank0
  1612  0029  084E               	movf	?_vfpfcnvrt,w
  1613  002A  0141               	movlb	1	; select bank1
  1614  002B  07A0               	addwf	_nout^(0+128),f
  1615  002C  0140               	movlb	0	; select bank0
  1616  002D  084F               	movf	?_vfpfcnvrt+1,w
  1617  002E  0141               	movlb	1	; select bank1
  1618  002F  3DA1               	addwfc	(_nout+1)^(0+128),f
  1619  0030                     l1571:
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1622  0030  0140               	movlb	0	; select bank0
  1623  0031  0864               	movf	vfprintf@cfmt,w
  1624  0032  0084               	movwf	4
  1625  0033  0865               	movf	vfprintf@cfmt+1,w
  1626  0034  0085               	movwf	5
  1627  0035  0012               	moviw fsr0++
  1628  0036  1D03               	btfss	3,2
  1629  0037  2839               	goto	u1451
  1630  0038  283A               	goto	u1450
  1631  0039                     u1451:
  1632  0039  281C               	goto	l1569
  1633  003A                     u1450:
  1634  003A                     l1573:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1637  003A  0141               	movlb	1	; select bank1
  1638  003B  0821               	movf	(_nout+1)^(0+128),w
  1639  003C  0140               	movlb	0	; select bank0
  1640  003D  00DF               	movwf	?_vfprintf+1
  1641  003E  0141               	movlb	1	; select bank1
  1642  003F  0820               	movf	_nout^(0+128),w
  1643  0040  0140               	movlb	0	; select bank0
  1644  0041  00DE               	movwf	?_vfprintf
  1645  0042                     l725:
  1646  0042  0008               	return
  1647  0043                     __end_of_vfprintf:
  1648                           
  1649                           	psect	text3
  1650  01F4                     __ptext3:	
  1651 ;; *************** function _vfpfcnvrt *****************
  1652 ;; Defined at:
  1653 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  fp              1    wreg     PTR struct _IO_FILE
  1656 ;;		 -> sprintf@f(5), 
  1657 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1658 ;;		 -> vfprintf@cfmt(2), 
  1659 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1660 ;;		 -> sprintf@ap(1), 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1663 ;;		 -> sprintf@f(5), 
  1664 ;;  ll              8   53[BANK0 ] long long 
  1665 ;;  llu             8    0        unsigned long long 
  1666 ;;  f               4    0        unsigned long long 
  1667 ;;  ct              3    0        unsigned char [3]
  1668 ;;  vp              2    0        PTR void 
  1669 ;;  i               2    0        int 
  1670 ;;  done            2    0        int 
  1671 ;;  cp              2    0        PTR unsigned char 
  1672 ;;  c               1    0        unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2   46[BANK0 ] int 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1682 ;;      Params:         0       2       0       0       0       0       0       0
  1683 ;;      Locals:         0       9       0       0       0       0       0       0
  1684 ;;      Temps:          0       5       0       0       0       0       0       0
  1685 ;;      Totals:         0      16       0       0       0       0       0       0
  1686 ;;Total ram usage:       16 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    5
  1689 ;; This function calls:
  1690 ;;		_dtoa
  1691 ;;		_fputc
  1692 ;; This function is called by:
  1693 ;;		_vfprintf
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _vfpfcnvrt
  1699  01F4                     _vfpfcnvrt:
  1700                           
  1701                           ;incstack = 0
  1702                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1703                           ;vfpfcnvrt@fp stored from wreg
  1704  01F4  0140               	movlb	0	; select bank0
  1705  01F5  00DD               	movwf	vfpfcnvrt@fp
  1706  01F6                     l1459:
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1709  01F6  084E               	movf	vfpfcnvrt@fmt,w
  1710  01F7  0086               	movwf	6
  1711  01F8  0187               	clrf	7
  1712  01F9  3F40               	moviw [0]fsr1
  1713  01FA  00D0               	movwf	??_vfpfcnvrt
  1714  01FB  3F41               	moviw [1]fsr1
  1715  01FC  00D1               	movwf	??_vfpfcnvrt+1
  1716  01FD  0850               	movf	??_vfpfcnvrt,w
  1717  01FE  0084               	movwf	4
  1718  01FF  0851               	movf	??_vfpfcnvrt+1,w
  1719  0200  0085               	movwf	5
  1720  0201  0012               	moviw fsr0++
  1721  0202  3A25               	xorlw	37
  1722  0203  1D03               	btfss	3,2
  1723  0204  2A06               	goto	u1291
  1724  0205  2A07               	goto	u1290
  1725  0206                     u1291:
  1726  0206  2AAD               	goto	l1495
  1727  0207                     u1290:
  1728  0207                     l1461:
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1731  0207  084E               	movf	vfpfcnvrt@fmt,w
  1732  0208  0086               	movwf	6
  1733  0209  0187               	clrf	7
  1734  020A  3001               	movlw	1
  1735  020B  0781               	addwf	1,f
  1736  020C  3141               	addfsr 1,1
  1737  020D  1803               	skipnc
  1738  020E  0A81               	incf	1,f
  1739  020F                     l1463:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1742  020F  0141               	movlb	1	; select bank1
  1743  0210  01A2               	clrf	_width^(0+128)
  1744  0211  01A3               	clrf	(_width+1)^(0+128)
  1745  0212  0140               	movlb	0	; select bank0
  1746  0213  01EC               	clrf	_flags
  1747  0214  01ED               	clrf	_flags+1
  1748  0215                     l1465:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1751  0215  30FF               	movlw	255
  1752  0216  0141               	movlb	1	; select bank1
  1753  0217  00A4               	movwf	_prec^(0+128)
  1754  0218  30FF               	movlw	255
  1755  0219  00A5               	movwf	(_prec^(0+128)+1)
  1756  021A                     l1467:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1759  021A  0140               	movlb	0	; select bank0
  1760  021B  084E               	movf	vfpfcnvrt@fmt,w
  1761  021C  0086               	movwf	6
  1762  021D  0187               	clrf	7
  1763  021E  3F40               	moviw [0]fsr1
  1764  021F  00D0               	movwf	??_vfpfcnvrt
  1765  0220  3F41               	moviw [1]fsr1
  1766  0221  00D1               	movwf	??_vfpfcnvrt+1
  1767  0222  0850               	movf	??_vfpfcnvrt,w
  1768  0223  0084               	movwf	4
  1769  0224  0851               	movf	??_vfpfcnvrt+1,w
  1770  0225  0085               	movwf	5
  1771  0226  0012               	moviw fsr0++
  1772  0227  3A64               	xorlw	100
  1773  0228  1903               	btfsc	3,2
  1774  0229  2A2B               	goto	u1301
  1775  022A  2A2C               	goto	u1300
  1776  022B                     u1301:
  1777  022B  2A3D               	goto	l1471
  1778  022C                     u1300:
  1779  022C                     l1469:
  1780  022C  084E               	movf	vfpfcnvrt@fmt,w
  1781  022D  0086               	movwf	6
  1782  022E  0187               	clrf	7
  1783  022F  3F40               	moviw [0]fsr1
  1784  0230  00D0               	movwf	??_vfpfcnvrt
  1785  0231  3F41               	moviw [1]fsr1
  1786  0232  00D1               	movwf	??_vfpfcnvrt+1
  1787  0233  0850               	movf	??_vfpfcnvrt,w
  1788  0234  0084               	movwf	4
  1789  0235  0851               	movf	??_vfpfcnvrt+1,w
  1790  0236  0085               	movwf	5
  1791  0237  0012               	moviw fsr0++
  1792  0238  3A69               	xorlw	105
  1793  0239  1D03               	btfss	3,2
  1794  023A  2A3C               	goto	u1311
  1795  023B  2A3D               	goto	u1310
  1796  023C                     u1311:
  1797  023C  2A78               	goto	l1479
  1798  023D                     u1310:
  1799  023D                     l1471:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1802  023D  084E               	movf	vfpfcnvrt@fmt,w
  1803  023E  0086               	movwf	6
  1804  023F  0187               	clrf	7
  1805  0240  3001               	movlw	1
  1806  0241  0781               	addwf	1,f
  1807  0242  3141               	addfsr 1,1
  1808  0243  1803               	skipnc
  1809  0244  0A81               	incf	1,f
  1810  0245                     l1473:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1813  0245  084F               	movf	vfpfcnvrt@ap,w
  1814  0246  0086               	movwf	6
  1815  0247  0187               	clrf	7
  1816  0248  0801               	movf	1,w
  1817  0249  0084               	movwf	4
  1818  024A  0185               	clrf	5
  1819  024B  3002               	movlw	2
  1820  024C  0781               	addwf	1,f
  1821  024D  3F00               	moviw [0]fsr0
  1822  024E  00D0               	movwf	??_vfpfcnvrt
  1823  024F  3F01               	moviw [1]fsr0
  1824  0250  00D1               	movwf	??_vfpfcnvrt+1
  1825  0251  0850               	movf	??_vfpfcnvrt,w
  1826  0252  00D5               	movwf	vfpfcnvrt@ll
  1827  0253  0851               	movf	??_vfpfcnvrt+1,w
  1828  0254  00D6               	movwf	vfpfcnvrt@ll+1
  1829  0255  0D89               	rlf	9,f
  1830  0256  3B89               	subwfb	9,f
  1831  0257  0989               	comf	9,f
  1832  0258  00D7               	movwf	vfpfcnvrt@ll+2
  1833  0259  00D8               	movwf	vfpfcnvrt@ll+3
  1834  025A  00D9               	movwf	vfpfcnvrt@ll+4
  1835  025B  00DA               	movwf	vfpfcnvrt@ll+5
  1836  025C  00DB               	movwf	vfpfcnvrt@ll+6
  1837  025D  00DC               	movwf	vfpfcnvrt@ll+7
  1838  025E                     l1475:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1841  025E  0855               	movf	vfpfcnvrt@ll,w
  1842  025F  00B0               	movwf	dtoa@d
  1843  0260  0856               	movf	vfpfcnvrt@ll+1,w
  1844  0261  00B1               	movwf	dtoa@d+1
  1845  0262  0857               	movf	vfpfcnvrt@ll+2,w
  1846  0263  00B2               	movwf	dtoa@d+2
  1847  0264  0858               	movf	vfpfcnvrt@ll+3,w
  1848  0265  00B3               	movwf	dtoa@d+3
  1849  0266  0859               	movf	vfpfcnvrt@ll+4,w
  1850  0267  00B4               	movwf	dtoa@d+4
  1851  0268  085A               	movf	vfpfcnvrt@ll+5,w
  1852  0269  00B5               	movwf	dtoa@d+5
  1853  026A  085B               	movf	vfpfcnvrt@ll+6,w
  1854  026B  00B6               	movwf	dtoa@d+6
  1855  026C  085C               	movf	vfpfcnvrt@ll+7,w
  1856  026D  00B7               	movwf	dtoa@d+7
  1857  026E  085D               	movf	vfpfcnvrt@fp,w
  1858  026F  3184  24BC  3181   	fcall	_dtoa
  1859  0272  0140               	movlb	0	; select bank0
  1860  0273  0831               	movf	?_dtoa+1,w
  1861  0274  00CF               	movwf	?_vfpfcnvrt+1
  1862  0275  0830               	movf	?_dtoa,w
  1863  0276  00CE               	movwf	?_vfpfcnvrt
  1864  0277  2AD0               	goto	l718
  1865  0278                     l1479:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1868  0278  084E               	movf	vfpfcnvrt@fmt,w
  1869  0279  0086               	movwf	6
  1870  027A  0187               	clrf	7
  1871  027B  3F40               	moviw [0]fsr1
  1872  027C  00D0               	movwf	??_vfpfcnvrt
  1873  027D  3F41               	moviw [1]fsr1
  1874  027E  00D1               	movwf	??_vfpfcnvrt+1
  1875  027F  0850               	movf	??_vfpfcnvrt,w
  1876  0280  0084               	movwf	4
  1877  0281  0851               	movf	??_vfpfcnvrt+1,w
  1878  0282  0085               	movwf	5
  1879  0283  0012               	moviw fsr0++
  1880  0284  3A25               	xorlw	37
  1881  0285  1D03               	btfss	3,2
  1882  0286  2A88               	goto	u1321
  1883  0287  2A89               	goto	u1320
  1884  0288                     u1321:
  1885  0288  2AA2               	goto	l1489
  1886  0289                     u1320:
  1887  0289                     l1481:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1890  0289  084E               	movf	vfpfcnvrt@fmt,w
  1891  028A  0086               	movwf	6
  1892  028B  0187               	clrf	7
  1893  028C  3001               	movlw	1
  1894  028D  0781               	addwf	1,f
  1895  028E  3141               	addfsr 1,1
  1896  028F  1803               	skipnc
  1897  0290  0A81               	incf	1,f
  1898  0291                     l1483:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1901  0291  3025               	movlw	37
  1902  0292  00F0               	movwf	fputc@c
  1903  0293  3000               	movlw	0
  1904  0294  00F1               	movwf	fputc@c+1
  1905  0295  085D               	movf	vfpfcnvrt@fp,w
  1906  0296  00D0               	movwf	??_vfpfcnvrt
  1907  0297  0850               	movf	??_vfpfcnvrt,w
  1908  0298  00F2               	movwf	fputc@fp
  1909  0299  318F  275B  3181   	fcall	_fputc
  1910  029C                     l1485:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1913  029C  3001               	movlw	1
  1914  029D  0140               	movlb	0	; select bank0
  1915  029E  00CE               	movwf	?_vfpfcnvrt
  1916  029F  3000               	movlw	0
  1917  02A0  00CF               	movwf	?_vfpfcnvrt+1
  1918  02A1  2AD0               	goto	l718
  1919  02A2                     l1489:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1922  02A2  084E               	movf	vfpfcnvrt@fmt,w
  1923  02A3  0086               	movwf	6
  1924  02A4  0187               	clrf	7
  1925  02A5  3001               	movlw	1
  1926  02A6  0781               	addwf	1,f
  1927  02A7  3141               	addfsr 1,1
  1928  02A8  1803               	skipnc
  1929  02A9  0A81               	incf	1,f
  1930  02AA                     l1491:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1933  02AA  01CE               	clrf	?_vfpfcnvrt
  1934  02AB  01CF               	clrf	?_vfpfcnvrt+1
  1935  02AC  2AD0               	goto	l718
  1936  02AD                     l1495:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1939  02AD  084E               	movf	vfpfcnvrt@fmt,w
  1940  02AE  0086               	movwf	6
  1941  02AF  0187               	clrf	7
  1942  02B0  3F40               	moviw [0]fsr1
  1943  02B1  00D0               	movwf	??_vfpfcnvrt
  1944  02B2  3F41               	moviw [1]fsr1
  1945  02B3  00D1               	movwf	??_vfpfcnvrt+1
  1946  02B4  0850               	movf	??_vfpfcnvrt,w
  1947  02B5  0084               	movwf	4
  1948  02B6  0851               	movf	??_vfpfcnvrt+1,w
  1949  02B7  0085               	movwf	5
  1950  02B8  0800               	movf	0,w	;code access
  1951  02B9  00D2               	movwf	??_vfpfcnvrt+2
  1952  02BA  01D3               	clrf	??_vfpfcnvrt+3
  1953  02BB  0852               	movf	??_vfpfcnvrt+2,w
  1954  02BC  00F0               	movwf	fputc@c
  1955  02BD  0853               	movf	??_vfpfcnvrt+3,w
  1956  02BE  00F1               	movwf	fputc@c+1
  1957  02BF  085D               	movf	vfpfcnvrt@fp,w
  1958  02C0  00D4               	movwf	??_vfpfcnvrt+4
  1959  02C1  0854               	movf	??_vfpfcnvrt+4,w
  1960  02C2  00F2               	movwf	fputc@fp
  1961  02C3  318F  275B  3181   	fcall	_fputc
  1962  02C6                     l1497:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1965  02C6  0140               	movlb	0	; select bank0
  1966  02C7  084E               	movf	vfpfcnvrt@fmt,w
  1967  02C8  0086               	movwf	6
  1968  02C9  0187               	clrf	7
  1969  02CA  3001               	movlw	1
  1970  02CB  0781               	addwf	1,f
  1971  02CC  3141               	addfsr 1,1
  1972  02CD  1803               	skipnc
  1973  02CE  0A81               	incf	1,f
  1974  02CF  2A9C               	goto	l1485
  1975  02D0                     l718:
  1976  02D0  0008               	return
  1977  02D1                     __end_of_vfpfcnvrt:
  1978                           
  1979                           	psect	text4
  1980  04BC                     __ptext4:	
  1981 ;; *************** function _dtoa *****************
  1982 ;; Defined at:
  1983 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  fp              1    wreg     PTR struct _IO_FILE
  1986 ;;		 -> sprintf@f(5), 
  1987 ;;  d               8   16[BANK0 ] long long 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  1990 ;;		 -> sprintf@f(5), 
  1991 ;;  n               8   36[BANK0 ] long long 
  1992 ;;  i               2   44[BANK0 ] int 
  1993 ;;  s               2   34[BANK0 ] int 
  1994 ;;  w               2   32[BANK0 ] int 
  1995 ;;  p               2   30[BANK0 ] int 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2   16[BANK0 ] int 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2005 ;;      Params:         0       8       0       0       0       0       0       0
  2006 ;;      Locals:         0      19       0       0       0       0       0       0
  2007 ;;      Temps:          0       3       0       0       0       0       0       0
  2008 ;;      Totals:         0      30       0       0       0       0       0       0
  2009 ;;Total ram usage:       30 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    4
  2012 ;; This function calls:
  2013 ;;		___aodiv
  2014 ;;		___aomod
  2015 ;;		_abs
  2016 ;;		_pad
  2017 ;; This function is called by:
  2018 ;;		_vfpfcnvrt
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _dtoa
  2024  04BC                     _dtoa:
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2028                           ;dtoa@fp stored from wreg
  2029  04BC  0140               	movlb	0	; select bank0
  2030  04BD  00BD               	movwf	dtoa@fp
  2031  04BE                     l1401:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2034  04BE  0830               	movf	dtoa@d,w
  2035  04BF  00C4               	movwf	dtoa@n
  2036  04C0  0831               	movf	dtoa@d+1,w
  2037  04C1  00C5               	movwf	dtoa@n+1
  2038  04C2  0832               	movf	dtoa@d+2,w
  2039  04C3  00C6               	movwf	dtoa@n+2
  2040  04C4  0833               	movf	dtoa@d+3,w
  2041  04C5  00C7               	movwf	dtoa@n+3
  2042  04C6  0834               	movf	dtoa@d+4,w
  2043  04C7  00C8               	movwf	dtoa@n+4
  2044  04C8  0835               	movf	dtoa@d+5,w
  2045  04C9  00C9               	movwf	dtoa@n+5
  2046  04CA  0836               	movf	dtoa@d+6,w
  2047  04CB  00CA               	movwf	dtoa@n+6
  2048  04CC  0837               	movf	dtoa@d+7,w
  2049  04CD  00CB               	movwf	dtoa@n+7
  2050  04CE                     l1403:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2053  04CE  3044               	movlw	low dtoa@n
  2054  04CF  0086               	movwf	6
  2055  04D0  3000               	movlw	high dtoa@n
  2056  04D1  0087               	movwf	7
  2057  04D2  3F47               	moviw [7]fsr1
  2058  04D3  00B8               	movwf	??_dtoa
  2059  04D4  1BB8               	btfsc	??_dtoa,7
  2060  04D5  2CD7               	goto	u1131
  2061  04D6  2CD9               	goto	u1130
  2062  04D7                     u1131:
  2063  04D7  3001               	movlw	1
  2064  04D8  2CDA               	goto	u1140
  2065  04D9                     u1130:
  2066  04D9  3000               	movlw	0
  2067  04DA                     u1140:
  2068  04DA  0140               	movlb	0	; select bank0
  2069  04DB  00B9               	movwf	??_dtoa+1
  2070  04DC  01BA               	clrf	??_dtoa+2
  2071  04DD  0839               	movf	??_dtoa+1,w
  2072  04DE  00C2               	movwf	dtoa@s
  2073  04DF  083A               	movf	??_dtoa+2,w
  2074  04E0  00C3               	movwf	dtoa@s+1
  2075  04E1                     l1405:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2078  04E1  0842               	movf	dtoa@s,w
  2079  04E2  0443               	iorwf	dtoa@s+1,w
  2080  04E3  1903               	btfsc	3,2
  2081  04E4  2CE6               	goto	u1151
  2082  04E5  2CE7               	goto	u1150
  2083  04E6                     u1151:
  2084  04E6  2D05               	goto	l688
  2085  04E7                     u1150:
  2086  04E7                     l1407:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2089  04E7  09C4               	comf	dtoa@n,f
  2090  04E8  09C5               	comf	dtoa@n+1,f
  2091  04E9  09C6               	comf	dtoa@n+2,f
  2092  04EA  09C7               	comf	dtoa@n+3,f
  2093  04EB  09C8               	comf	dtoa@n+4,f
  2094  04EC  09C9               	comf	dtoa@n+5,f
  2095  04ED  09CA               	comf	dtoa@n+6,f
  2096  04EE  09CB               	comf	dtoa@n+7,f
  2097  04EF  0AC4               	incf	dtoa@n,f
  2098  04F0  1D03               	skipz
  2099  04F1  2D05               	goto	u116lld
  2100  04F2  0AC5               	incf	dtoa@n+1,f
  2101  04F3  1D03               	skipz
  2102  04F4  2D05               	goto	u116lld
  2103  04F5  0AC6               	incf	dtoa@n+2,f
  2104  04F6  1D03               	skipz
  2105  04F7  2D05               	goto	u116lld
  2106  04F8  0AC7               	incf	dtoa@n+3,f
  2107  04F9  1D03               	skipz
  2108  04FA  2D05               	goto	u116lld
  2109  04FB  0AC8               	incf	dtoa@n+4,f
  2110  04FC  1D03               	skipz
  2111  04FD  2D05               	goto	u116lld
  2112  04FE  0AC9               	incf	dtoa@n+5,f
  2113  04FF  1D03               	skipz
  2114  0500  2D05               	goto	u116lld
  2115  0501  0ACA               	incf	dtoa@n+6,f
  2116  0502  1D03               	skipz
  2117  0503  2D05               	goto	u116lld
  2118  0504  0ACB               	incf	dtoa@n+7,f
  2119  0505                     u116lld:
  2120  0505                     l688:	
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  2122                           
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2125  0505  0141               	movlb	1	; select bank1
  2126  0506  1BA5               	btfsc	(_prec+1)^(0+128),7
  2127  0507  2D09               	goto	u1171
  2128  0508  2D0A               	goto	u1170
  2129  0509                     u1171:
  2130  0509  2D0F               	goto	l689
  2131  050A                     u1170:
  2132  050A                     l1409:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2135  050A  30FD               	movlw	253
  2136  050B  0140               	movlb	0	; select bank0
  2137  050C  05EC               	andwf	_flags,f
  2138  050D  30FF               	movlw	255
  2139  050E  05ED               	andwf	_flags+1,f
  2140  050F                     l689:	
  2141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  2142                           
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2145  050F  0141               	movlb	1	; select bank1
  2146  0510  0825               	movf	(_prec+1)^(0+128),w
  2147  0511  3A80               	xorlw	128
  2148  0512  0140               	movlb	0	; select bank0
  2149  0513  00B8               	movwf	??_dtoa
  2150  0514  3080               	movlw	128
  2151  0515  0238               	subwf	??_dtoa,w
  2152  0516  1D03               	skipz
  2153  0517  2D1B               	goto	u1185
  2154  0518  3001               	movlw	1
  2155  0519  0141               	movlb	1	; select bank1
  2156  051A  0224               	subwf	_prec^(0+128),w
  2157  051B                     u1185:
  2158  051B  1803               	skipnc
  2159  051C  2D1E               	goto	u1181
  2160  051D  2D1F               	goto	u1180
  2161  051E                     u1181:
  2162  051E  2D25               	goto	l1413
  2163  051F                     u1180:
  2164  051F                     l1411:
  2165  051F  3001               	movlw	1
  2166  0520  0140               	movlb	0	; select bank0
  2167  0521  00BE               	movwf	dtoa@p
  2168  0522  3000               	movlw	0
  2169  0523  00BF               	movwf	dtoa@p+1
  2170  0524  2D2D               	goto	l693
  2171  0525                     l1413:
  2172  0525  0141               	movlb	1	; select bank1
  2173  0526  0825               	movf	(_prec+1)^(0+128),w
  2174  0527  0140               	movlb	0	; select bank0
  2175  0528  00BF               	movwf	dtoa@p+1
  2176  0529  0141               	movlb	1	; select bank1
  2177  052A  0824               	movf	_prec^(0+128),w
  2178  052B  0140               	movlb	0	; select bank0
  2179  052C  00BE               	movwf	dtoa@p
  2180  052D                     l693:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2183  052D  0141               	movlb	1	; select bank1
  2184  052E  0823               	movf	(_width+1)^(0+128),w
  2185  052F  0140               	movlb	0	; select bank0
  2186  0530  00C1               	movwf	dtoa@w+1
  2187  0531  0141               	movlb	1	; select bank1
  2188  0532  0822               	movf	_width^(0+128),w
  2189  0533  0140               	movlb	0	; select bank0
  2190  0534  00C0               	movwf	dtoa@w
  2191  0535                     l1415:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2194  0535  0842               	movf	dtoa@s,w
  2195  0536  0443               	iorwf	dtoa@s+1,w
  2196  0537  1D03               	btfss	3,2
  2197  0538  2D3A               	goto	u1191
  2198  0539  2D3B               	goto	u1190
  2199  053A                     u1191:
  2200  053A  2D3F               	goto	l1419
  2201  053B                     u1190:
  2202  053B                     l1417:
  2203  053B  1D6C               	btfss	_flags,2
  2204  053C  2D3E               	goto	u1201
  2205  053D  2D3F               	goto	u1200
  2206  053E                     u1201:
  2207  053E  2D43               	goto	l694
  2208  053F                     u1200:
  2209  053F                     l1419:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2212  053F  30FF               	movlw	255
  2213  0540  07C0               	addwf	dtoa@w,f
  2214  0541  30FF               	movlw	255
  2215  0542  3DC1               	addwfc	dtoa@w+1,f
  2216  0543                     l694:	
  2217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  2218                           
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2221  0543  301F               	movlw	31
  2222  0544  00CC               	movwf	dtoa@i
  2223  0545  3000               	movlw	0
  2224  0546  00CD               	movwf	dtoa@i+1
  2225  0547                     l1421:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2228  0547  0141               	movlb	1	; select bank1
  2229  0548  01C7               	clrf	(_dbuf^(0+128)+31)
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2232  0549  2DB2               	goto	l697
  2233  054A                     l1423:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2236  054A  30FF               	movlw	255
  2237  054B  0140               	movlb	0	; select bank0
  2238  054C  07CC               	addwf	dtoa@i,f
  2239  054D  30FF               	movlw	255
  2240  054E  3DCD               	addwfc	dtoa@i+1,f
  2241  054F                     l1425:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2244  054F  300A               	movlw	10
  2245  0550  00A0               	movwf	___aomod@divisor
  2246  0551  01A1               	clrf	___aomod@divisor+1
  2247  0552  01A2               	clrf	___aomod@divisor+2
  2248  0553  01A3               	clrf	___aomod@divisor+3
  2249  0554  01A4               	clrf	___aomod@divisor+4
  2250  0555  01A5               	clrf	___aomod@divisor+5
  2251  0556  01A6               	clrf	___aomod@divisor+6
  2252  0557  01A7               	clrf	___aomod@divisor+7
  2253  0558  0844               	movf	dtoa@n,w
  2254  0559  00A8               	movwf	___aomod@dividend
  2255  055A  0845               	movf	dtoa@n+1,w
  2256  055B  00A9               	movwf	___aomod@dividend+1
  2257  055C  0846               	movf	dtoa@n+2,w
  2258  055D  00AA               	movwf	___aomod@dividend+2
  2259  055E  0847               	movf	dtoa@n+3,w
  2260  055F  00AB               	movwf	___aomod@dividend+3
  2261  0560  0848               	movf	dtoa@n+4,w
  2262  0561  00AC               	movwf	___aomod@dividend+4
  2263  0562  0849               	movf	dtoa@n+5,w
  2264  0563  00AD               	movwf	___aomod@dividend+5
  2265  0564  084A               	movf	dtoa@n+6,w
  2266  0565  00AE               	movwf	___aomod@dividend+6
  2267  0566  084B               	movf	dtoa@n+7,w
  2268  0567  00AF               	movwf	___aomod@dividend+7
  2269  0568  3182  22D1  3184   	fcall	___aomod
  2270  056B  0140               	movlb	0	; select bank0
  2271  056C  0821               	movf	?___aomod+1,w
  2272  056D  00F4               	movwf	abs@a+1
  2273  056E  0820               	movf	?___aomod,w
  2274  056F  00F3               	movwf	abs@a
  2275  0570  318E  268B  3184   	fcall	_abs
  2276  0573  0873               	movf	?_abs,w
  2277  0574  3E30               	addlw	48
  2278  0575  0140               	movlb	0	; select bank0
  2279  0576  00B8               	movwf	??_dtoa
  2280  0577  084C               	movf	dtoa@i,w
  2281  0578  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2282  0579  0086               	movwf	6
  2283  057A  0187               	clrf	7
  2284  057B  0838               	movf	??_dtoa,w
  2285  057C  0081               	movwf	1
  2286  057D                     l1427:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2289  057D  30FF               	movlw	255
  2290  057E  07BE               	addwf	dtoa@p,f
  2291  057F  30FF               	movlw	255
  2292  0580  3DBF               	addwfc	dtoa@p+1,f
  2293  0581                     l1429:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2296  0581  30FF               	movlw	255
  2297  0582  07C0               	addwf	dtoa@w,f
  2298  0583  30FF               	movlw	255
  2299  0584  3DC1               	addwfc	dtoa@w+1,f
  2300  0585                     l1431:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2303  0585  300A               	movlw	10
  2304  0586  00A0               	movwf	___aodiv@divisor
  2305  0587  01A1               	clrf	___aodiv@divisor+1
  2306  0588  01A2               	clrf	___aodiv@divisor+2
  2307  0589  01A3               	clrf	___aodiv@divisor+3
  2308  058A  01A4               	clrf	___aodiv@divisor+4
  2309  058B  01A5               	clrf	___aodiv@divisor+5
  2310  058C  01A6               	clrf	___aodiv@divisor+6
  2311  058D  01A7               	clrf	___aodiv@divisor+7
  2312  058E  0844               	movf	dtoa@n,w
  2313  058F  00A8               	movwf	___aodiv@dividend
  2314  0590  0845               	movf	dtoa@n+1,w
  2315  0591  00A9               	movwf	___aodiv@dividend+1
  2316  0592  0846               	movf	dtoa@n+2,w
  2317  0593  00AA               	movwf	___aodiv@dividend+2
  2318  0594  0847               	movf	dtoa@n+3,w
  2319  0595  00AB               	movwf	___aodiv@dividend+3
  2320  0596  0848               	movf	dtoa@n+4,w
  2321  0597  00AC               	movwf	___aodiv@dividend+4
  2322  0598  0849               	movf	dtoa@n+5,w
  2323  0599  00AD               	movwf	___aodiv@dividend+5
  2324  059A  084A               	movf	dtoa@n+6,w
  2325  059B  00AE               	movwf	___aodiv@dividend+6
  2326  059C  084B               	movf	dtoa@n+7,w
  2327  059D  00AF               	movwf	___aodiv@dividend+7
  2328  059E  3183  23BB  3184   	fcall	___aodiv
  2329  05A1  0140               	movlb	0	; select bank0
  2330  05A2  0820               	movf	?___aodiv,w
  2331  05A3  00C4               	movwf	dtoa@n
  2332  05A4  0821               	movf	?___aodiv+1,w
  2333  05A5  00C5               	movwf	dtoa@n+1
  2334  05A6  0822               	movf	?___aodiv+2,w
  2335  05A7  00C6               	movwf	dtoa@n+2
  2336  05A8  0823               	movf	?___aodiv+3,w
  2337  05A9  00C7               	movwf	dtoa@n+3
  2338  05AA  0824               	movf	?___aodiv+4,w
  2339  05AB  00C8               	movwf	dtoa@n+4
  2340  05AC  0825               	movf	?___aodiv+5,w
  2341  05AD  00C9               	movwf	dtoa@n+5
  2342  05AE  0826               	movf	?___aodiv+6,w
  2343  05AF  00CA               	movwf	dtoa@n+6
  2344  05B0  0827               	movf	?___aodiv+7,w
  2345  05B1  00CB               	movwf	dtoa@n+7
  2346  05B2                     l697:	
  2347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  2348                           
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2351  05B2  0140               	movlb	0	; select bank0
  2352  05B3  084D               	movf	dtoa@i+1,w
  2353  05B4  3A80               	xorlw	128
  2354  05B5  00B8               	movwf	??_dtoa
  2355  05B6  3080               	movlw	128
  2356  05B7  0238               	subwf	??_dtoa,w
  2357  05B8  1D03               	skipz
  2358  05B9  2DBC               	goto	u1215
  2359  05BA  3001               	movlw	1
  2360  05BB  024C               	subwf	dtoa@i,w
  2361  05BC                     u1215:
  2362  05BC  1C03               	skipc
  2363  05BD  2DBF               	goto	u1211
  2364  05BE  2DC0               	goto	u1210
  2365  05BF                     u1211:
  2366  05BF  2DED               	goto	l1441
  2367  05C0                     u1210:
  2368  05C0                     l1433:
  2369  05C0  0140               	movlb	0	; select bank0
  2370  05C1  0844               	movf	dtoa@n,w
  2371  05C2  0445               	iorwf	dtoa@n+1,w
  2372  05C3  0446               	iorwf	dtoa@n+2,w
  2373  05C4  0447               	iorwf	dtoa@n+3,w
  2374  05C5  0448               	iorwf	dtoa@n+4,w
  2375  05C6  0449               	iorwf	dtoa@n+5,w
  2376  05C7  044A               	iorwf	dtoa@n+6,w
  2377  05C8  044B               	iorwf	dtoa@n+7,w
  2378  05C9  1D03               	skipz
  2379  05CA  2DCC               	goto	u1221
  2380  05CB  2DCD               	goto	u1220
  2381  05CC                     u1221:
  2382  05CC  2D4A               	goto	l1423
  2383  05CD                     u1220:
  2384  05CD                     l1435:
  2385  05CD  083F               	movf	dtoa@p+1,w
  2386  05CE  3A80               	xorlw	128
  2387  05CF  00B8               	movwf	??_dtoa
  2388  05D0  3080               	movlw	128
  2389  05D1  0238               	subwf	??_dtoa,w
  2390  05D2  1D03               	skipz
  2391  05D3  2DD6               	goto	u1235
  2392  05D4  3001               	movlw	1
  2393  05D5  023E               	subwf	dtoa@p,w
  2394  05D6                     u1235:
  2395  05D6  1803               	skipnc
  2396  05D7  2DD9               	goto	u1231
  2397  05D8  2DDA               	goto	u1230
  2398  05D9                     u1231:
  2399  05D9  2D4A               	goto	l1423
  2400  05DA                     u1230:
  2401  05DA                     l1437:
  2402  05DA  0140               	movlb	0	; select bank0
  2403  05DB  0841               	movf	dtoa@w+1,w
  2404  05DC  3A80               	xorlw	128
  2405  05DD  00B8               	movwf	??_dtoa
  2406  05DE  3080               	movlw	128
  2407  05DF  0238               	subwf	??_dtoa,w
  2408  05E0  1D03               	skipz
  2409  05E1  2DE4               	goto	u1245
  2410  05E2  3001               	movlw	1
  2411  05E3  0240               	subwf	dtoa@w,w
  2412  05E4                     u1245:
  2413  05E4  1C03               	skipc
  2414  05E5  2DE7               	goto	u1241
  2415  05E6  2DE8               	goto	u1240
  2416  05E7                     u1241:
  2417  05E7  2DED               	goto	l1441
  2418  05E8                     u1240:
  2419  05E8                     l1439:
  2420  05E8  0140               	movlb	0	; select bank0
  2421  05E9  18EC               	btfsc	_flags,1
  2422  05EA  2DEC               	goto	u1251
  2423  05EB  2DED               	goto	u1250
  2424  05EC                     u1251:
  2425  05EC  2D4A               	goto	l1423
  2426  05ED                     u1250:
  2427  05ED                     l1441:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2430  05ED  0140               	movlb	0	; select bank0
  2431  05EE  0842               	movf	dtoa@s,w
  2432  05EF  0443               	iorwf	dtoa@s+1,w
  2433  05F0  1D03               	btfss	3,2
  2434  05F1  2DF3               	goto	u1261
  2435  05F2  2DF4               	goto	u1260
  2436  05F3                     u1261:
  2437  05F3  2DF8               	goto	l1445
  2438  05F4                     u1260:
  2439  05F4                     l1443:
  2440  05F4  1D6C               	btfss	_flags,2
  2441  05F5  2DF7               	goto	u1271
  2442  05F6  2DF8               	goto	u1270
  2443  05F7                     u1271:
  2444  05F7  2E13               	goto	l1455
  2445  05F8                     u1270:
  2446  05F8                     l1445:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2449  05F8  30FF               	movlw	255
  2450  05F9  07CC               	addwf	dtoa@i,f
  2451  05FA  30FF               	movlw	255
  2452  05FB  3DCD               	addwfc	dtoa@i+1,f
  2453  05FC                     l1447:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2456  05FC  0842               	movf	dtoa@s,w
  2457  05FD  0443               	iorwf	dtoa@s+1,w
  2458  05FE  1D03               	btfss	3,2
  2459  05FF  2E01               	goto	u1281
  2460  0600  2E02               	goto	u1280
  2461  0601                     u1281:
  2462  0601  2E07               	goto	l1451
  2463  0602                     u1280:
  2464  0602                     l1449:
  2465  0602  302B               	movlw	43
  2466  0603  00BB               	movwf	_dtoa$608
  2467  0604  3000               	movlw	0
  2468  0605  00BC               	movwf	_dtoa$608+1
  2469  0606  2E0B               	goto	l1453
  2470  0607                     l1451:
  2471  0607  302D               	movlw	45
  2472  0608  00BB               	movwf	_dtoa$608
  2473  0609  3000               	movlw	0
  2474  060A  00BC               	movwf	_dtoa$608+1
  2475  060B                     l1453:
  2476  060B  083B               	movf	_dtoa$608,w
  2477  060C  00B8               	movwf	??_dtoa
  2478  060D  084C               	movf	dtoa@i,w
  2479  060E  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2480  060F  0086               	movwf	6
  2481  0610  0187               	clrf	7
  2482  0611  0838               	movf	??_dtoa,w
  2483  0612  0081               	movwf	1
  2484  0613                     l1455:
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2487  0613  084C               	movf	dtoa@i,w
  2488  0614  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2489  0615  00B8               	movwf	??_dtoa
  2490  0616  0838               	movf	??_dtoa,w
  2491  0617  00A4               	movwf	pad@buf
  2492  0618  0841               	movf	dtoa@w+1,w
  2493  0619  00A6               	movwf	pad@p+1
  2494  061A  0840               	movf	dtoa@w,w
  2495  061B  00A5               	movwf	pad@p
  2496  061C  083D               	movf	dtoa@fp,w
  2497  061D  318F  27AA  3184   	fcall	_pad
  2498  0620  0140               	movlb	0	; select bank0
  2499  0621  0825               	movf	?_pad+1,w
  2500  0622  00B1               	movwf	?_dtoa+1
  2501  0623  0824               	movf	?_pad,w
  2502  0624  00B0               	movwf	?_dtoa
  2503  0625                     l711:
  2504  0625  0008               	return
  2505  0626                     __end_of_dtoa:
  2506                           
  2507                           	psect	text5
  2508  0FAA                     __ptext5:	
  2509 ;; *************** function _pad *****************
  2510 ;; Defined at:
  2511 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  fp              1    wreg     PTR struct _IO_FILE
  2514 ;;		 -> sprintf@f(5), 
  2515 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2516 ;;		 -> dbuf(32), 
  2517 ;;  p               2    5[BANK0 ] int 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2520 ;;		 -> sprintf@f(5), 
  2521 ;;  w               2    9[BANK0 ] int 
  2522 ;;  i               2    7[BANK0 ] int 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2    4[BANK0 ] int 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2532 ;;      Params:         0       3       0       0       0       0       0       0
  2533 ;;      Locals:         0       5       0       0       0       0       0       0
  2534 ;;      Temps:          1       0       0       0       0       0       0       0
  2535 ;;      Totals:         1       8       0       0       0       0       0       0
  2536 ;;Total ram usage:        9 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    3
  2539 ;; This function calls:
  2540 ;;		_fputc
  2541 ;;		_fputs
  2542 ;;		_strlen
  2543 ;; This function is called by:
  2544 ;;		_dtoa
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _pad
  2550  0FAA                     _pad:
  2551                           
  2552                           ;incstack = 0
  2553                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2554                           ;pad@fp stored from wreg
  2555  0FAA  0140               	movlb	0	; select bank0
  2556  0FAB  00AB               	movwf	pad@fp
  2557  0FAC                     l1375:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2560  0FAC  1C6C               	btfss	_flags,0
  2561  0FAD  2FAF               	goto	u1081
  2562  0FAE  2FB0               	goto	u1080
  2563  0FAF                     u1081:
  2564  0FAF  2FB8               	goto	l1379
  2565  0FB0                     u1080:
  2566  0FB0                     l1377:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2569  0FB0  082B               	movf	pad@fp,w
  2570  0FB1  00FC               	movwf	??_pad
  2571  0FB2  087C               	movf	??_pad,w
  2572  0FB3  00F8               	movwf	fputs@fp
  2573  0FB4  0824               	movf	pad@buf,w
  2574  0FB5  318E  26EA  318F   	fcall	_fputs
  2575  0FB8                     l1379:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2578  0FB8  0140               	movlb	0	; select bank0
  2579  0FB9  1BA6               	btfsc	pad@p+1,7
  2580  0FBA  2FBC               	goto	u1091
  2581  0FBB  2FBD               	goto	u1090
  2582  0FBC                     u1091:
  2583  0FBC  2FC2               	goto	l1383
  2584  0FBD                     u1090:
  2585  0FBD                     l1381:
  2586  0FBD  0826               	movf	pad@p+1,w
  2587  0FBE  00AA               	movwf	pad@w+1
  2588  0FBF  0825               	movf	pad@p,w
  2589  0FC0  00A9               	movwf	pad@w
  2590  0FC1  2FC4               	goto	l680
  2591  0FC2                     l1383:
  2592  0FC2  01A9               	clrf	pad@w
  2593  0FC3  01AA               	clrf	pad@w+1
  2594  0FC4                     l680:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2597  0FC4  01A7               	clrf	pad@i
  2598  0FC5  01A8               	clrf	pad@i+1
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2601  0FC6  2FD8               	goto	l1389
  2602  0FC7                     l1385:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2605  0FC7  3020               	movlw	32
  2606  0FC8  00F0               	movwf	fputc@c
  2607  0FC9  3000               	movlw	0
  2608  0FCA  00F1               	movwf	fputc@c+1
  2609  0FCB  0140               	movlb	0	; select bank0
  2610  0FCC  082B               	movf	pad@fp,w
  2611  0FCD  00FC               	movwf	??_pad
  2612  0FCE  087C               	movf	??_pad,w
  2613  0FCF  00F2               	movwf	fputc@fp
  2614  0FD0  318F  275B  318F   	fcall	_fputc
  2615  0FD3                     l1387:
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2618  0FD3  3001               	movlw	1
  2619  0FD4  0140               	movlb	0	; select bank0
  2620  0FD5  07A7               	addwf	pad@i,f
  2621  0FD6  3000               	movlw	0
  2622  0FD7  3DA8               	addwfc	pad@i+1,f
  2623  0FD8                     l1389:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2626  0FD8  0828               	movf	pad@i+1,w
  2627  0FD9  3A80               	xorlw	128
  2628  0FDA  00FC               	movwf	??_pad
  2629  0FDB  082A               	movf	pad@w+1,w
  2630  0FDC  3A80               	xorlw	128
  2631  0FDD  027C               	subwf	??_pad,w
  2632  0FDE  1D03               	skipz
  2633  0FDF  2FE2               	goto	u1105
  2634  0FE0  0829               	movf	pad@w,w
  2635  0FE1  0227               	subwf	pad@i,w
  2636  0FE2                     u1105:
  2637  0FE2  1C03               	skipc
  2638  0FE3  2FE5               	goto	u1101
  2639  0FE4  2FE6               	goto	u1100
  2640  0FE5                     u1101:
  2641  0FE5  2FC7               	goto	l1385
  2642  0FE6                     u1100:
  2643  0FE6                     l683:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2646  0FE6  0140               	movlb	0	; select bank0
  2647  0FE7  186C               	btfsc	_flags,0
  2648  0FE8  2FEA               	goto	u1111
  2649  0FE9  2FEB               	goto	u1110
  2650  0FEA                     u1111:
  2651  0FEA  2FF3               	goto	l1393
  2652  0FEB                     u1110:
  2653  0FEB                     l1391:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2656  0FEB  082B               	movf	pad@fp,w
  2657  0FEC  00FC               	movwf	??_pad
  2658  0FED  087C               	movf	??_pad,w
  2659  0FEE  00F8               	movwf	fputs@fp
  2660  0FEF  0824               	movf	pad@buf,w
  2661  0FF0  318E  26EA  318F   	fcall	_fputs
  2662  0FF3                     l1393:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2665  0FF3  0140               	movlb	0	; select bank0
  2666  0FF4  0824               	movf	pad@buf,w
  2667  0FF5  318E  2672  318F   	fcall	_strlen
  2668  0FF8  0140               	movlb	0	; select bank0
  2669  0FF9  0829               	movf	pad@w,w
  2670  0FFA  0770               	addwf	?_strlen,w
  2671  0FFB  00A4               	movwf	?_pad
  2672  0FFC  082A               	movf	pad@w+1,w
  2673  0FFD  3D71               	addwfc	?_strlen+1,w
  2674  0FFE  00A5               	movwf	?_pad+1
  2675  0FFF                     l685:
  2676  0FFF  0008               	return
  2677  1000                     __end_of_pad:
  2678                           
  2679                           	psect	text6
  2680  0E72                     __ptext6:	
  2681 ;; *************** function _strlen *****************
  2682 ;; Defined at:
  2683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  s               1    wreg     PTR const unsigned char 
  2686 ;;		 -> dbuf(32), 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  s               1    4[COMMON] PTR const unsigned char 
  2689 ;;		 -> dbuf(32), 
  2690 ;;  a               1    3[COMMON] PTR const unsigned char 
  2691 ;;		 -> dbuf(32), 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  2    0[COMMON] unsigned int 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2701 ;;      Params:         2       0       0       0       0       0       0       0
  2702 ;;      Locals:         2       0       0       0       0       0       0       0
  2703 ;;      Temps:          1       0       0       0       0       0       0       0
  2704 ;;      Totals:         5       0       0       0       0       0       0       0
  2705 ;;Total ram usage:        5 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_pad
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           
  2715                           ;psect for function _strlen
  2716  0E72                     _strlen:
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2720                           ;strlen@s stored from wreg
  2721  0E72  00F4               	movwf	strlen@s
  2722  0E73                     l1297:
  2723  0E73  0874               	movf	strlen@s,w
  2724  0E74  00F2               	movwf	??_strlen
  2725  0E75  0872               	movf	??_strlen,w
  2726  0E76  00F3               	movwf	strlen@a
  2727  0E77  2E7C               	goto	l1301
  2728  0E78                     l1299:
  2729  0E78  3001               	movlw	1
  2730  0E79  00F2               	movwf	??_strlen
  2731  0E7A  0872               	movf	??_strlen,w
  2732  0E7B  07F4               	addwf	strlen@s,f
  2733  0E7C                     l1301:
  2734  0E7C  0874               	movf	strlen@s,w
  2735  0E7D  0086               	movwf	6
  2736  0E7E  0187               	clrf	7
  2737  0E7F  0801               	movf	1,w
  2738  0E80  1D03               	btfss	3,2
  2739  0E81  2E83               	goto	u861
  2740  0E82  2E84               	goto	u860
  2741  0E83                     u861:
  2742  0E83  2E78               	goto	l1299
  2743  0E84                     u860:
  2744  0E84                     l1303:
  2745  0E84  0873               	movf	strlen@a,w
  2746  0E85  0274               	subwf	strlen@s,w
  2747  0E86  00F0               	movwf	?_strlen
  2748  0E87  01F1               	clrf	?_strlen+1
  2749  0E88  1BF0               	btfsc	?_strlen,7
  2750  0E89  03F1               	decf	?_strlen+1,f
  2751  0E8A                     l761:
  2752  0E8A  0008               	return
  2753  0E8B                     __end_of_strlen:
  2754                           
  2755                           	psect	text7
  2756  0EEA                     __ptext7:	
  2757 ;; *************** function _fputs *****************
  2758 ;; Defined at:
  2759 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  s               1    wreg     PTR const unsigned char 
  2762 ;;		 -> dbuf(32), 
  2763 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2764 ;;		 -> sprintf@f(5), 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2767 ;;		 -> dbuf(32), 
  2768 ;;  i               2    1[BANK0 ] int 
  2769 ;;  c               1    0[BANK0 ] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    8[COMMON] int 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2779 ;;      Params:         1       0       0       0       0       0       0       0
  2780 ;;      Locals:         0       4       0       0       0       0       0       0
  2781 ;;      Temps:          3       0       0       0       0       0       0       0
  2782 ;;      Totals:         4       4       0       0       0       0       0       0
  2783 ;;Total ram usage:        8 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    2
  2786 ;; This function calls:
  2787 ;;		_fputc
  2788 ;; This function is called by:
  2789 ;;		_pad
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _fputs
  2795  0EEA                     _fputs:
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2799                           ;fputs@s stored from wreg
  2800  0EEA  0140               	movlb	0	; select bank0
  2801  0EEB  00A3               	movwf	fputs@s
  2802  0EEC                     l1289:
  2803  0EEC  01A1               	clrf	fputs@i
  2804  0EED  01A2               	clrf	fputs@i+1
  2805  0EEE  2F02               	goto	l1295
  2806  0EEF                     l1291:
  2807  0EEF  0820               	movf	fputs@c,w
  2808  0EF0  00F9               	movwf	??_fputs
  2809  0EF1  01FA               	clrf	??_fputs+1
  2810  0EF2  0879               	movf	??_fputs,w
  2811  0EF3  00F0               	movwf	fputc@c
  2812  0EF4  087A               	movf	??_fputs+1,w
  2813  0EF5  00F1               	movwf	fputc@c+1
  2814  0EF6  0878               	movf	fputs@fp,w
  2815  0EF7  00FB               	movwf	??_fputs+2
  2816  0EF8  087B               	movf	??_fputs+2,w
  2817  0EF9  00F2               	movwf	fputc@fp
  2818  0EFA  318F  275B  318E   	fcall	_fputc
  2819  0EFD                     l1293:
  2820  0EFD  3001               	movlw	1
  2821  0EFE  0140               	movlb	0	; select bank0
  2822  0EFF  07A1               	addwf	fputs@i,f
  2823  0F00  3000               	movlw	0
  2824  0F01  3DA2               	addwfc	fputs@i+1,f
  2825  0F02                     l1295:
  2826  0F02  0821               	movf	fputs@i,w
  2827  0F03  0723               	addwf	fputs@s,w
  2828  0F04  00F9               	movwf	??_fputs
  2829  0F05  0879               	movf	??_fputs,w
  2830  0F06  0086               	movwf	6
  2831  0F07  0187               	clrf	7
  2832  0F08  0801               	movf	1,w
  2833  0F09  00FA               	movwf	??_fputs+1
  2834  0F0A  087A               	movf	??_fputs+1,w
  2835  0F0B  00A0               	movwf	fputs@c
  2836  0F0C  0820               	movf	fputs@c,w
  2837  0F0D  1D03               	btfss	3,2
  2838  0F0E  2F10               	goto	u851
  2839  0F0F  2F11               	goto	u850
  2840  0F10                     u851:
  2841  0F10  2EEF               	goto	l1291
  2842  0F11                     u850:
  2843  0F11                     l752:
  2844  0F11  0008               	return
  2845  0F12                     __end_of_fputs:
  2846                           
  2847                           	psect	text8
  2848  0F5B                     __ptext8:	
  2849 ;; *************** function _fputc *****************
  2850 ;; Defined at:
  2851 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  c               2    0[COMMON] int 
  2854 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2855 ;;		 -> sprintf@f(5), 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  2    0[COMMON] int 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2867 ;;      Params:         3       0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0
  2869 ;;      Temps:          5       0       0       0       0       0       0       0
  2870 ;;      Totals:         8       0       0       0       0       0       0       0
  2871 ;;Total ram usage:        8 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    1
  2874 ;; This function calls:
  2875 ;;		_putch
  2876 ;; This function is called by:
  2877 ;;		_pad
  2878 ;;		_vfpfcnvrt
  2879 ;;		_fputs
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _fputc
  2885  0F5B                     _fputc:
  2886  0F5B                     l1273:	
  2887                           ;incstack = 0
  2888                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2889                           
  2890  0F5B  0872               	movf	fputc@fp,w
  2891  0F5C  1903               	btfsc	3,2
  2892  0F5D  2F5F               	goto	u811
  2893  0F5E  2F60               	goto	u810
  2894  0F5F                     u811:
  2895  0F5F  2F65               	goto	l1277
  2896  0F60                     u810:
  2897  0F60                     l1275:
  2898  0F60  0872               	movf	fputc@fp,w
  2899  0F61  1D03               	btfss	3,2
  2900  0F62  2F64               	goto	u821
  2901  0F63  2F65               	goto	u820
  2902  0F64                     u821:
  2903  0F64  2F6A               	goto	l1279
  2904  0F65                     u820:
  2905  0F65                     l1277:
  2906  0F65  0870               	movf	fputc@c,w
  2907  0F66  3180  200B  318F   	fcall	_putch
  2908  0F69  2FA9               	goto	l744
  2909  0F6A                     l1279:
  2910  0F6A  0872               	movf	fputc@fp,w
  2911  0F6B  3E03               	addlw	3
  2912  0F6C  0086               	movwf	6
  2913  0F6D  0187               	clrf	7
  2914  0F6E  0016               	moviw fsr1++
  2915  0F6F  0401               	iorwf	1,w
  2916  0F70  1903               	btfsc	3,2
  2917  0F71  2F73               	goto	u831
  2918  0F72  2F74               	goto	u830
  2919  0F73                     u831:
  2920  0F73  2F91               	goto	l1283
  2921  0F74                     u830:
  2922  0F74                     l1281:
  2923  0F74  0872               	movf	fputc@fp,w
  2924  0F75  3E03               	addlw	3
  2925  0F76  0086               	movwf	6
  2926  0F77  0187               	clrf	7
  2927  0F78  3F40               	moviw [0]fsr1
  2928  0F79  00F3               	movwf	??_fputc
  2929  0F7A  3F41               	moviw [1]fsr1
  2930  0F7B  00F4               	movwf	??_fputc+1
  2931  0F7C  0A72               	incf	fputc@fp,w
  2932  0F7D  0086               	movwf	6
  2933  0F7E  0187               	clrf	7
  2934  0F7F  3F40               	moviw [0]fsr1
  2935  0F80  00F5               	movwf	??_fputc+2
  2936  0F81  3F41               	moviw [1]fsr1
  2937  0F82  00F6               	movwf	??_fputc+3
  2938  0F83  0876               	movf	??_fputc+3,w
  2939  0F84  3A80               	xorlw	128
  2940  0F85  00F7               	movwf	??_fputc+4
  2941  0F86  0874               	movf	??_fputc+1,w
  2942  0F87  3A80               	xorlw	128
  2943  0F88  0277               	subwf	??_fputc+4,w
  2944  0F89  1D03               	skipz
  2945  0F8A  2F8D               	goto	u845
  2946  0F8B  0873               	movf	??_fputc,w
  2947  0F8C  0275               	subwf	??_fputc+2,w
  2948  0F8D                     u845:
  2949  0F8D  1803               	skipnc
  2950  0F8E  2F90               	goto	u841
  2951  0F8F  2F91               	goto	u840
  2952  0F90                     u841:
  2953  0F90  2FA9               	goto	l744
  2954  0F91                     u840:
  2955  0F91                     l1283:
  2956  0F91  0870               	movf	fputc@c,w
  2957  0F92  00F3               	movwf	??_fputc
  2958  0F93  0872               	movf	fputc@fp,w
  2959  0F94  0086               	movwf	6
  2960  0F95  0187               	clrf	7
  2961  0F96  0A72               	incf	fputc@fp,w
  2962  0F97  0084               	movwf	4
  2963  0F98  0185               	clrf	5
  2964  0F99  0800               	movf	0,w
  2965  0F9A  0701               	addwf	1,w
  2966  0F9B  00F4               	movwf	??_fputc+1
  2967  0F9C  0874               	movf	??_fputc+1,w
  2968  0F9D  0086               	movwf	6
  2969  0F9E  0187               	clrf	7
  2970  0F9F  0873               	movf	??_fputc,w
  2971  0FA0  0081               	movwf	1
  2972  0FA1                     l1285:
  2973  0FA1  0A72               	incf	fputc@fp,w
  2974  0FA2  0086               	movwf	6
  2975  0FA3  0187               	clrf	7
  2976  0FA4  3001               	movlw	1
  2977  0FA5  0781               	addwf	1,f
  2978  0FA6  3141               	addfsr 1,1
  2979  0FA7  1803               	skipnc
  2980  0FA8  0A81               	incf	1,f
  2981  0FA9                     l744:
  2982  0FA9  0008               	return
  2983  0FAA                     __end_of_fputc:
  2984                           
  2985                           	psect	text9
  2986  000B                     __ptext9:	
  2987 ;; *************** function _putch *****************
  2988 ;; Defined at:
  2989 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  c               1    wreg     unsigned char 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  c               1    0[COMMON] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3003 ;;      Params:         0       0       0       0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_fputc
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _putch
  3018  000B                     _putch:
  3019  000B                     l755:	
  3020                           ;incstack = 0
  3021                           ; Regs used in _putch: [wreg]
  3022                           
  3023  000B  0008               	return
  3024  000C                     __end_of_putch:
  3025                           
  3026                           	psect	text10
  3027  0E8B                     __ptext10:	
  3028 ;; *************** function _abs *****************
  3029 ;; Defined at:
  3030 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  a               2    3[COMMON] int 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  2    3[COMMON] int 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3044 ;;      Params:         2       0       0       0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0
  3046 ;;      Temps:          2       0       0       0       0       0       0       0
  3047 ;;      Totals:         4       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        4 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_dtoa
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _abs
  3059  0E8B                     _abs:
  3060  0E8B                     l1397:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _abs: [wreg+status,2+status,0]
  3063                           
  3064  0E8B  0874               	movf	abs@a+1,w
  3065  0E8C  3A80               	xorlw	128
  3066  0E8D  00F5               	movwf	??_abs
  3067  0E8E  3080               	movlw	128
  3068  0E8F  0275               	subwf	??_abs,w
  3069  0E90  1D03               	skipz
  3070  0E91  2E94               	goto	u1125
  3071  0E92  3001               	movlw	1
  3072  0E93  0273               	subwf	abs@a,w
  3073  0E94                     u1125:
  3074  0E94  1803               	skipnc
  3075  0E95  2E97               	goto	u1121
  3076  0E96  2E98               	goto	u1120
  3077  0E97                     u1121:
  3078  0E97  2EA4               	goto	l729
  3079  0E98                     u1120:
  3080  0E98                     l1399:
  3081  0E98  0973               	comf	abs@a,w
  3082  0E99  00F5               	movwf	??_abs
  3083  0E9A  0974               	comf	abs@a+1,w
  3084  0E9B  00F6               	movwf	??_abs+1
  3085  0E9C  0AF5               	incf	??_abs,f
  3086  0E9D  1903               	skipnz
  3087  0E9E  0AF6               	incf	??_abs+1,f
  3088  0E9F  0875               	movf	??_abs,w
  3089  0EA0  00F3               	movwf	?_abs
  3090  0EA1  0876               	movf	??_abs+1,w
  3091  0EA2  00F4               	movwf	?_abs+1
  3092  0EA3  2EA4               	goto	l732
  3093  0EA4                     l729:
  3094  0EA4                     l732:
  3095  0EA4  0008               	return
  3096  0EA5                     __end_of_abs:
  3097                           
  3098                           	psect	text11
  3099  02D1                     __ptext11:	
  3100 ;; *************** function ___aomod *****************
  3101 ;; Defined at:
  3102 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  divisor         8    0[BANK0 ] long long 
  3105 ;;  dividend        8    8[BANK0 ] long long 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  sign            1    2[COMMON] unsigned char 
  3108 ;;  counter         1    1[COMMON] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  8    0[BANK0 ] long long 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3118 ;;      Params:         0      16       0       0       0       0       0       0
  3119 ;;      Locals:         2       0       0       0       0       0       0       0
  3120 ;;      Temps:          1       0       0       0       0       0       0       0
  3121 ;;      Totals:         3      16       0       0       0       0       0       0
  3122 ;;Total ram usage:       19 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_dtoa
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           
  3132                           ;psect for function ___aomod
  3133  02D1                     ___aomod:
  3134  02D1                     l1345:	
  3135                           ;incstack = 0
  3136                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3137                           
  3138  02D1  01F2               	clrf	___aomod@sign
  3139  02D2                     l1347:
  3140  02D2  3028               	movlw	low ___aomod@dividend
  3141  02D3  0086               	movwf	6
  3142  02D4  3000               	movlw	high ___aomod@dividend
  3143  02D5  0087               	movwf	7
  3144  02D6  3F47               	moviw [7]fsr1
  3145  02D7  00F0               	movwf	??___aomod
  3146  02D8  1FF0               	btfss	??___aomod,7
  3147  02D9  2ADB               	goto	u981
  3148  02DA  2ADC               	goto	u980
  3149  02DB                     u981:
  3150  02DB  2AFD               	goto	l1351
  3151  02DC                     u980:
  3152  02DC                     l1349:
  3153  02DC  0140               	movlb	0	; select bank0
  3154  02DD  09A8               	comf	___aomod@dividend,f
  3155  02DE  09A9               	comf	___aomod@dividend+1,f
  3156  02DF  09AA               	comf	___aomod@dividend+2,f
  3157  02E0  09AB               	comf	___aomod@dividend+3,f
  3158  02E1  09AC               	comf	___aomod@dividend+4,f
  3159  02E2  09AD               	comf	___aomod@dividend+5,f
  3160  02E3  09AE               	comf	___aomod@dividend+6,f
  3161  02E4  09AF               	comf	___aomod@dividend+7,f
  3162  02E5  0AA8               	incf	___aomod@dividend,f
  3163  02E6  1D03               	skipz
  3164  02E7  2AFB               	goto	u99lld
  3165  02E8  0AA9               	incf	___aomod@dividend+1,f
  3166  02E9  1D03               	skipz
  3167  02EA  2AFB               	goto	u99lld
  3168  02EB  0AAA               	incf	___aomod@dividend+2,f
  3169  02EC  1D03               	skipz
  3170  02ED  2AFB               	goto	u99lld
  3171  02EE  0AAB               	incf	___aomod@dividend+3,f
  3172  02EF  1D03               	skipz
  3173  02F0  2AFB               	goto	u99lld
  3174  02F1  0AAC               	incf	___aomod@dividend+4,f
  3175  02F2  1D03               	skipz
  3176  02F3  2AFB               	goto	u99lld
  3177  02F4  0AAD               	incf	___aomod@dividend+5,f
  3178  02F5  1D03               	skipz
  3179  02F6  2AFB               	goto	u99lld
  3180  02F7  0AAE               	incf	___aomod@dividend+6,f
  3181  02F8  1D03               	skipz
  3182  02F9  2AFB               	goto	u99lld
  3183  02FA  0AAF               	incf	___aomod@dividend+7,f
  3184  02FB                     u99lld:
  3185  02FB  01F2               	clrf	___aomod@sign
  3186  02FC  0AF2               	incf	___aomod@sign,f
  3187  02FD                     l1351:
  3188  02FD  3020               	movlw	low ___aomod@divisor
  3189  02FE  0086               	movwf	6
  3190  02FF  3000               	movlw	high ___aomod@divisor
  3191  0300  0087               	movwf	7
  3192  0301  3F47               	moviw [7]fsr1
  3193  0302  00F0               	movwf	??___aomod
  3194  0303  1FF0               	btfss	??___aomod,7
  3195  0304  2B06               	goto	u1001
  3196  0305  2B07               	goto	u1000
  3197  0306                     u1001:
  3198  0306  2B26               	goto	l1355
  3199  0307                     u1000:
  3200  0307                     l1353:
  3201  0307  0140               	movlb	0	; select bank0
  3202  0308  09A0               	comf	___aomod@divisor,f
  3203  0309  09A1               	comf	___aomod@divisor+1,f
  3204  030A  09A2               	comf	___aomod@divisor+2,f
  3205  030B  09A3               	comf	___aomod@divisor+3,f
  3206  030C  09A4               	comf	___aomod@divisor+4,f
  3207  030D  09A5               	comf	___aomod@divisor+5,f
  3208  030E  09A6               	comf	___aomod@divisor+6,f
  3209  030F  09A7               	comf	___aomod@divisor+7,f
  3210  0310  0AA0               	incf	___aomod@divisor,f
  3211  0311  1D03               	skipz
  3212  0312  2B26               	goto	u101lld
  3213  0313  0AA1               	incf	___aomod@divisor+1,f
  3214  0314  1D03               	skipz
  3215  0315  2B26               	goto	u101lld
  3216  0316  0AA2               	incf	___aomod@divisor+2,f
  3217  0317  1D03               	skipz
  3218  0318  2B26               	goto	u101lld
  3219  0319  0AA3               	incf	___aomod@divisor+3,f
  3220  031A  1D03               	skipz
  3221  031B  2B26               	goto	u101lld
  3222  031C  0AA4               	incf	___aomod@divisor+4,f
  3223  031D  1D03               	skipz
  3224  031E  2B26               	goto	u101lld
  3225  031F  0AA5               	incf	___aomod@divisor+5,f
  3226  0320  1D03               	skipz
  3227  0321  2B26               	goto	u101lld
  3228  0322  0AA6               	incf	___aomod@divisor+6,f
  3229  0323  1D03               	skipz
  3230  0324  2B26               	goto	u101lld
  3231  0325  0AA7               	incf	___aomod@divisor+7,f
  3232  0326                     u101lld:
  3233  0326                     l1355:
  3234  0326  0140               	movlb	0	; select bank0
  3235  0327  0820               	movf	___aomod@divisor,w
  3236  0328  0421               	iorwf	___aomod@divisor+1,w
  3237  0329  0422               	iorwf	___aomod@divisor+2,w
  3238  032A  0423               	iorwf	___aomod@divisor+3,w
  3239  032B  0424               	iorwf	___aomod@divisor+4,w
  3240  032C  0425               	iorwf	___aomod@divisor+5,w
  3241  032D  0426               	iorwf	___aomod@divisor+6,w
  3242  032E  0427               	iorwf	___aomod@divisor+7,w
  3243  032F  1903               	skipnz
  3244  0330  2B32               	goto	u1021
  3245  0331  2B33               	goto	u1020
  3246  0332                     u1021:
  3247  0332  2B86               	goto	l1371
  3248  0333                     u1020:
  3249  0333                     l1357:
  3250  0333  01F1               	clrf	___aomod@counter
  3251  0334  0AF1               	incf	___aomod@counter,f
  3252  0335  2B42               	goto	l1363
  3253  0336                     l1359:
  3254  0336  35A0               	lslf	___aomod@divisor,f
  3255  0337  0DA1               	rlf	___aomod@divisor+1,f
  3256  0338  0DA2               	rlf	___aomod@divisor+2,f
  3257  0339  0DA3               	rlf	___aomod@divisor+3,f
  3258  033A  0DA4               	rlf	___aomod@divisor+4,f
  3259  033B  0DA5               	rlf	___aomod@divisor+5,f
  3260  033C  0DA6               	rlf	___aomod@divisor+6,f
  3261  033D  0DA7               	rlf	___aomod@divisor+7,f
  3262  033E                     l1361:
  3263  033E  3001               	movlw	1
  3264  033F  00F0               	movwf	??___aomod
  3265  0340  0870               	movf	??___aomod,w
  3266  0341  07F1               	addwf	___aomod@counter,f
  3267  0342                     l1363:
  3268  0342  1FA7               	btfss	___aomod@divisor+7,7
  3269  0343  2B45               	goto	u1031
  3270  0344  2B46               	goto	u1030
  3271  0345                     u1031:
  3272  0345  2B36               	goto	l1359
  3273  0346                     u1030:
  3274  0346                     l1365:
  3275  0346  0827               	movf	___aomod@divisor+7,w
  3276  0347  022F               	subwf	___aomod@dividend+7,w
  3277  0348  1D03               	skipz
  3278  0349  2B64               	goto	u1045
  3279  034A  0826               	movf	___aomod@divisor+6,w
  3280  034B  022E               	subwf	___aomod@dividend+6,w
  3281  034C  1D03               	skipz
  3282  034D  2B64               	goto	u1045
  3283  034E  0825               	movf	___aomod@divisor+5,w
  3284  034F  022D               	subwf	___aomod@dividend+5,w
  3285  0350  1D03               	skipz
  3286  0351  2B64               	goto	u1045
  3287  0352  0824               	movf	___aomod@divisor+4,w
  3288  0353  022C               	subwf	___aomod@dividend+4,w
  3289  0354  1D03               	skipz
  3290  0355  2B64               	goto	u1045
  3291  0356  0823               	movf	___aomod@divisor+3,w
  3292  0357  022B               	subwf	___aomod@dividend+3,w
  3293  0358  1D03               	skipz
  3294  0359  2B64               	goto	u1045
  3295  035A  0822               	movf	___aomod@divisor+2,w
  3296  035B  022A               	subwf	___aomod@dividend+2,w
  3297  035C  1D03               	skipz
  3298  035D  2B64               	goto	u1045
  3299  035E  0821               	movf	___aomod@divisor+1,w
  3300  035F  0229               	subwf	___aomod@dividend+1,w
  3301  0360  1D03               	skipz
  3302  0361  2B64               	goto	u1045
  3303  0362  0820               	movf	___aomod@divisor,w
  3304  0363  0228               	subwf	___aomod@dividend,w
  3305  0364                     u1045:
  3306  0364  1C03               	skipc
  3307  0365  2B67               	goto	u1041
  3308  0366  2B68               	goto	u1040
  3309  0367                     u1041:
  3310  0367  2B78               	goto	l1369
  3311  0368                     u1040:
  3312  0368                     l1367:
  3313  0368  0820               	movf	___aomod@divisor,w
  3314  0369  02A8               	subwf	___aomod@dividend,f
  3315  036A  0821               	movf	___aomod@divisor+1,w
  3316  036B  3BA9               	subwfb	___aomod@dividend+1,f
  3317  036C  0822               	movf	___aomod@divisor+2,w
  3318  036D  3BAA               	subwfb	___aomod@dividend+2,f
  3319  036E  0823               	movf	___aomod@divisor+3,w
  3320  036F  3BAB               	subwfb	___aomod@dividend+3,f
  3321  0370  0824               	movf	___aomod@divisor+4,w
  3322  0371  3BAC               	subwfb	___aomod@dividend+4,f
  3323  0372  0825               	movf	___aomod@divisor+5,w
  3324  0373  3BAD               	subwfb	___aomod@dividend+5,f
  3325  0374  0826               	movf	___aomod@divisor+6,w
  3326  0375  3BAE               	subwfb	___aomod@dividend+6,f
  3327  0376  0827               	movf	___aomod@divisor+7,w
  3328  0377  3BAF               	subwfb	___aomod@dividend+7,f
  3329  0378                     l1369:
  3330  0378  36A7               	lsrf	___aomod@divisor+7,f
  3331  0379  0CA6               	rrf	___aomod@divisor+6,f
  3332  037A  0CA5               	rrf	___aomod@divisor+5,f
  3333  037B  0CA4               	rrf	___aomod@divisor+4,f
  3334  037C  0CA3               	rrf	___aomod@divisor+3,f
  3335  037D  0CA2               	rrf	___aomod@divisor+2,f
  3336  037E  0CA1               	rrf	___aomod@divisor+1,f
  3337  037F  0CA0               	rrf	___aomod@divisor,f
  3338  0380  3001               	movlw	1
  3339  0381  02F1               	subwf	___aomod@counter,f
  3340  0382  1D03               	btfss	3,2
  3341  0383  2B85               	goto	u1051
  3342  0384  2B86               	goto	u1050
  3343  0385                     u1051:
  3344  0385  2B46               	goto	l1365
  3345  0386                     u1050:
  3346  0386                     l1371:
  3347  0386  0872               	movf	___aomod@sign,w
  3348  0387  1903               	btfsc	3,2
  3349  0388  2B8A               	goto	u1061
  3350  0389  2B8B               	goto	u1060
  3351  038A                     u1061:
  3352  038A  2BA9               	goto	l303
  3353  038B                     u1060:
  3354  038B                     l1373:
  3355  038B  09A8               	comf	___aomod@dividend,f
  3356  038C  09A9               	comf	___aomod@dividend+1,f
  3357  038D  09AA               	comf	___aomod@dividend+2,f
  3358  038E  09AB               	comf	___aomod@dividend+3,f
  3359  038F  09AC               	comf	___aomod@dividend+4,f
  3360  0390  09AD               	comf	___aomod@dividend+5,f
  3361  0391  09AE               	comf	___aomod@dividend+6,f
  3362  0392  09AF               	comf	___aomod@dividend+7,f
  3363  0393  0AA8               	incf	___aomod@dividend,f
  3364  0394  1D03               	skipz
  3365  0395  2BA9               	goto	u107lld
  3366  0396  0AA9               	incf	___aomod@dividend+1,f
  3367  0397  1D03               	skipz
  3368  0398  2BA9               	goto	u107lld
  3369  0399  0AAA               	incf	___aomod@dividend+2,f
  3370  039A  1D03               	skipz
  3371  039B  2BA9               	goto	u107lld
  3372  039C  0AAB               	incf	___aomod@dividend+3,f
  3373  039D  1D03               	skipz
  3374  039E  2BA9               	goto	u107lld
  3375  039F  0AAC               	incf	___aomod@dividend+4,f
  3376  03A0  1D03               	skipz
  3377  03A1  2BA9               	goto	u107lld
  3378  03A2  0AAD               	incf	___aomod@dividend+5,f
  3379  03A3  1D03               	skipz
  3380  03A4  2BA9               	goto	u107lld
  3381  03A5  0AAE               	incf	___aomod@dividend+6,f
  3382  03A6  1D03               	skipz
  3383  03A7  2BA9               	goto	u107lld
  3384  03A8  0AAF               	incf	___aomod@dividend+7,f
  3385  03A9                     u107lld:
  3386  03A9                     l303:
  3387  03A9  0140               	movlb	0	; select bank0
  3388  03AA  0828               	movf	___aomod@dividend,w
  3389  03AB  00A0               	movwf	?___aomod
  3390  03AC  0829               	movf	___aomod@dividend+1,w
  3391  03AD  00A1               	movwf	?___aomod+1
  3392  03AE  082A               	movf	___aomod@dividend+2,w
  3393  03AF  00A2               	movwf	?___aomod+2
  3394  03B0  082B               	movf	___aomod@dividend+3,w
  3395  03B1  00A3               	movwf	?___aomod+3
  3396  03B2  082C               	movf	___aomod@dividend+4,w
  3397  03B3  00A4               	movwf	?___aomod+4
  3398  03B4  082D               	movf	___aomod@dividend+5,w
  3399  03B5  00A5               	movwf	?___aomod+5
  3400  03B6  082E               	movf	___aomod@dividend+6,w
  3401  03B7  00A6               	movwf	?___aomod+6
  3402  03B8  082F               	movf	___aomod@dividend+7,w
  3403  03B9  00A7               	movwf	?___aomod+7
  3404  03BA                     l304:
  3405  03BA  0008               	return
  3406  03BB                     __end_of___aomod:
  3407                           
  3408                           	psect	text12
  3409  03BB                     __ptext12:	
  3410 ;; *************** function ___aodiv *****************
  3411 ;; Defined at:
  3412 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  divisor         8    0[BANK0 ] long long 
  3415 ;;  dividend        8    8[BANK0 ] long long 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  quotient        8    3[COMMON] long long 
  3418 ;;  sign            1    2[COMMON] unsigned char 
  3419 ;;  counter         1    1[COMMON] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  8    0[BANK0 ] long long 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3429 ;;      Params:         0      16       0       0       0       0       0       0
  3430 ;;      Locals:        10       0       0       0       0       0       0       0
  3431 ;;      Temps:          1       0       0       0       0       0       0       0
  3432 ;;      Totals:        11      16       0       0       0       0       0       0
  3433 ;;Total ram usage:       27 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_dtoa
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function ___aodiv
  3444  03BB                     ___aodiv:
  3445  03BB                     l1307:	
  3446                           ;incstack = 0
  3447                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3448                           
  3449  03BB  01F2               	clrf	___aodiv@sign
  3450  03BC                     l1309:
  3451  03BC  3020               	movlw	low ___aodiv@divisor
  3452  03BD  0086               	movwf	6
  3453  03BE  3000               	movlw	high ___aodiv@divisor
  3454  03BF  0087               	movwf	7
  3455  03C0  3F47               	moviw [7]fsr1
  3456  03C1  00F0               	movwf	??___aodiv
  3457  03C2  1FF0               	btfss	??___aodiv,7
  3458  03C3  2BC5               	goto	u871
  3459  03C4  2BC6               	goto	u870
  3460  03C5                     u871:
  3461  03C5  2BE7               	goto	l1313
  3462  03C6                     u870:
  3463  03C6                     l1311:
  3464  03C6  0140               	movlb	0	; select bank0
  3465  03C7  09A0               	comf	___aodiv@divisor,f
  3466  03C8  09A1               	comf	___aodiv@divisor+1,f
  3467  03C9  09A2               	comf	___aodiv@divisor+2,f
  3468  03CA  09A3               	comf	___aodiv@divisor+3,f
  3469  03CB  09A4               	comf	___aodiv@divisor+4,f
  3470  03CC  09A5               	comf	___aodiv@divisor+5,f
  3471  03CD  09A6               	comf	___aodiv@divisor+6,f
  3472  03CE  09A7               	comf	___aodiv@divisor+7,f
  3473  03CF  0AA0               	incf	___aodiv@divisor,f
  3474  03D0  1D03               	skipz
  3475  03D1  2BE5               	goto	u88lld
  3476  03D2  0AA1               	incf	___aodiv@divisor+1,f
  3477  03D3  1D03               	skipz
  3478  03D4  2BE5               	goto	u88lld
  3479  03D5  0AA2               	incf	___aodiv@divisor+2,f
  3480  03D6  1D03               	skipz
  3481  03D7  2BE5               	goto	u88lld
  3482  03D8  0AA3               	incf	___aodiv@divisor+3,f
  3483  03D9  1D03               	skipz
  3484  03DA  2BE5               	goto	u88lld
  3485  03DB  0AA4               	incf	___aodiv@divisor+4,f
  3486  03DC  1D03               	skipz
  3487  03DD  2BE5               	goto	u88lld
  3488  03DE  0AA5               	incf	___aodiv@divisor+5,f
  3489  03DF  1D03               	skipz
  3490  03E0  2BE5               	goto	u88lld
  3491  03E1  0AA6               	incf	___aodiv@divisor+6,f
  3492  03E2  1D03               	skipz
  3493  03E3  2BE5               	goto	u88lld
  3494  03E4  0AA7               	incf	___aodiv@divisor+7,f
  3495  03E5                     u88lld:
  3496  03E5  01F2               	clrf	___aodiv@sign
  3497  03E6  0AF2               	incf	___aodiv@sign,f
  3498  03E7                     l1313:
  3499  03E7  3028               	movlw	low ___aodiv@dividend
  3500  03E8  0086               	movwf	6
  3501  03E9  3000               	movlw	high ___aodiv@dividend
  3502  03EA  0087               	movwf	7
  3503  03EB  3F47               	moviw [7]fsr1
  3504  03EC  00F0               	movwf	??___aodiv
  3505  03ED  1FF0               	btfss	??___aodiv,7
  3506  03EE  2BF0               	goto	u891
  3507  03EF  2BF1               	goto	u890
  3508  03F0                     u891:
  3509  03F0  2C14               	goto	l1319
  3510  03F1                     u890:
  3511  03F1                     l1315:
  3512  03F1  0140               	movlb	0	; select bank0
  3513  03F2  09A8               	comf	___aodiv@dividend,f
  3514  03F3  09A9               	comf	___aodiv@dividend+1,f
  3515  03F4  09AA               	comf	___aodiv@dividend+2,f
  3516  03F5  09AB               	comf	___aodiv@dividend+3,f
  3517  03F6  09AC               	comf	___aodiv@dividend+4,f
  3518  03F7  09AD               	comf	___aodiv@dividend+5,f
  3519  03F8  09AE               	comf	___aodiv@dividend+6,f
  3520  03F9  09AF               	comf	___aodiv@dividend+7,f
  3521  03FA  0AA8               	incf	___aodiv@dividend,f
  3522  03FB  1D03               	skipz
  3523  03FC  2C10               	goto	u90lld
  3524  03FD  0AA9               	incf	___aodiv@dividend+1,f
  3525  03FE  1D03               	skipz
  3526  03FF  2C10               	goto	u90lld
  3527  0400  0AAA               	incf	___aodiv@dividend+2,f
  3528  0401  1D03               	skipz
  3529  0402  2C10               	goto	u90lld
  3530  0403  0AAB               	incf	___aodiv@dividend+3,f
  3531  0404  1D03               	skipz
  3532  0405  2C10               	goto	u90lld
  3533  0406  0AAC               	incf	___aodiv@dividend+4,f
  3534  0407  1D03               	skipz
  3535  0408  2C10               	goto	u90lld
  3536  0409  0AAD               	incf	___aodiv@dividend+5,f
  3537  040A  1D03               	skipz
  3538  040B  2C10               	goto	u90lld
  3539  040C  0AAE               	incf	___aodiv@dividend+6,f
  3540  040D  1D03               	skipz
  3541  040E  2C10               	goto	u90lld
  3542  040F  0AAF               	incf	___aodiv@dividend+7,f
  3543  0410                     u90lld:
  3544  0410                     l1317:
  3545  0410  3001               	movlw	1
  3546  0411  00F0               	movwf	??___aodiv
  3547  0412  0870               	movf	??___aodiv,w
  3548  0413  06F2               	xorwf	___aodiv@sign,f
  3549  0414                     l1319:
  3550  0414  3073               	movlw	low ___aodiv@quotient
  3551  0415  0086               	movwf	6
  3552  0416  3000               	movlw	high ___aodiv@quotient
  3553  0417  0087               	movwf	7
  3554  0418  3008               	movlw	8
  3555  0419  00F0               	movwf	??___aodiv
  3556  041A  3000               	movlw	0
  3557  041B                     u910:
  3558  041B  001E               	movwi fsr1++
  3559  041C  0BF0               	decfsz	??___aodiv,f
  3560  041D  2C1B               	goto	u910
  3561  041E                     l1321:
  3562  041E  0140               	movlb	0	; select bank0
  3563  041F  0820               	movf	___aodiv@divisor,w
  3564  0420  0421               	iorwf	___aodiv@divisor+1,w
  3565  0421  0422               	iorwf	___aodiv@divisor+2,w
  3566  0422  0423               	iorwf	___aodiv@divisor+3,w
  3567  0423  0424               	iorwf	___aodiv@divisor+4,w
  3568  0424  0425               	iorwf	___aodiv@divisor+5,w
  3569  0425  0426               	iorwf	___aodiv@divisor+6,w
  3570  0426  0427               	iorwf	___aodiv@divisor+7,w
  3571  0427  1903               	skipnz
  3572  0428  2C2A               	goto	u921
  3573  0429  2C2B               	goto	u920
  3574  042A                     u921:
  3575  042A  2C87               	goto	l1341
  3576  042B                     u920:
  3577  042B                     l1323:
  3578  042B  01F1               	clrf	___aodiv@counter
  3579  042C  0AF1               	incf	___aodiv@counter,f
  3580  042D  2C3A               	goto	l1329
  3581  042E                     l1325:
  3582  042E  35A0               	lslf	___aodiv@divisor,f
  3583  042F  0DA1               	rlf	___aodiv@divisor+1,f
  3584  0430  0DA2               	rlf	___aodiv@divisor+2,f
  3585  0431  0DA3               	rlf	___aodiv@divisor+3,f
  3586  0432  0DA4               	rlf	___aodiv@divisor+4,f
  3587  0433  0DA5               	rlf	___aodiv@divisor+5,f
  3588  0434  0DA6               	rlf	___aodiv@divisor+6,f
  3589  0435  0DA7               	rlf	___aodiv@divisor+7,f
  3590  0436                     l1327:
  3591  0436  3001               	movlw	1
  3592  0437  00F0               	movwf	??___aodiv
  3593  0438  0870               	movf	??___aodiv,w
  3594  0439  07F1               	addwf	___aodiv@counter,f
  3595  043A                     l1329:
  3596  043A  1FA7               	btfss	___aodiv@divisor+7,7
  3597  043B  2C3D               	goto	u931
  3598  043C  2C3E               	goto	u930
  3599  043D                     u931:
  3600  043D  2C2E               	goto	l1325
  3601  043E                     u930:
  3602  043E                     l1331:
  3603  043E  35F3               	lslf	___aodiv@quotient,f
  3604  043F  0DF4               	rlf	___aodiv@quotient+1,f
  3605  0440  0DF5               	rlf	___aodiv@quotient+2,f
  3606  0441  0DF6               	rlf	___aodiv@quotient+3,f
  3607  0442  0DF7               	rlf	___aodiv@quotient+4,f
  3608  0443  0DF8               	rlf	___aodiv@quotient+5,f
  3609  0444  0DF9               	rlf	___aodiv@quotient+6,f
  3610  0445  0DFA               	rlf	___aodiv@quotient+7,f
  3611  0446                     l1333:
  3612  0446  0827               	movf	___aodiv@divisor+7,w
  3613  0447  022F               	subwf	___aodiv@dividend+7,w
  3614  0448  1D03               	skipz
  3615  0449  2C64               	goto	u945
  3616  044A  0826               	movf	___aodiv@divisor+6,w
  3617  044B  022E               	subwf	___aodiv@dividend+6,w
  3618  044C  1D03               	skipz
  3619  044D  2C64               	goto	u945
  3620  044E  0825               	movf	___aodiv@divisor+5,w
  3621  044F  022D               	subwf	___aodiv@dividend+5,w
  3622  0450  1D03               	skipz
  3623  0451  2C64               	goto	u945
  3624  0452  0824               	movf	___aodiv@divisor+4,w
  3625  0453  022C               	subwf	___aodiv@dividend+4,w
  3626  0454  1D03               	skipz
  3627  0455  2C64               	goto	u945
  3628  0456  0823               	movf	___aodiv@divisor+3,w
  3629  0457  022B               	subwf	___aodiv@dividend+3,w
  3630  0458  1D03               	skipz
  3631  0459  2C64               	goto	u945
  3632  045A  0822               	movf	___aodiv@divisor+2,w
  3633  045B  022A               	subwf	___aodiv@dividend+2,w
  3634  045C  1D03               	skipz
  3635  045D  2C64               	goto	u945
  3636  045E  0821               	movf	___aodiv@divisor+1,w
  3637  045F  0229               	subwf	___aodiv@dividend+1,w
  3638  0460  1D03               	skipz
  3639  0461  2C64               	goto	u945
  3640  0462  0820               	movf	___aodiv@divisor,w
  3641  0463  0228               	subwf	___aodiv@dividend,w
  3642  0464                     u945:
  3643  0464  1C03               	skipc
  3644  0465  2C67               	goto	u941
  3645  0466  2C68               	goto	u940
  3646  0467                     u941:
  3647  0467  2C79               	goto	l1339
  3648  0468                     u940:
  3649  0468                     l1335:
  3650  0468  0820               	movf	___aodiv@divisor,w
  3651  0469  02A8               	subwf	___aodiv@dividend,f
  3652  046A  0821               	movf	___aodiv@divisor+1,w
  3653  046B  3BA9               	subwfb	___aodiv@dividend+1,f
  3654  046C  0822               	movf	___aodiv@divisor+2,w
  3655  046D  3BAA               	subwfb	___aodiv@dividend+2,f
  3656  046E  0823               	movf	___aodiv@divisor+3,w
  3657  046F  3BAB               	subwfb	___aodiv@dividend+3,f
  3658  0470  0824               	movf	___aodiv@divisor+4,w
  3659  0471  3BAC               	subwfb	___aodiv@dividend+4,f
  3660  0472  0825               	movf	___aodiv@divisor+5,w
  3661  0473  3BAD               	subwfb	___aodiv@dividend+5,f
  3662  0474  0826               	movf	___aodiv@divisor+6,w
  3663  0475  3BAE               	subwfb	___aodiv@dividend+6,f
  3664  0476  0827               	movf	___aodiv@divisor+7,w
  3665  0477  3BAF               	subwfb	___aodiv@dividend+7,f
  3666  0478                     l1337:
  3667  0478  1473               	bsf	___aodiv@quotient,0
  3668  0479                     l1339:
  3669  0479  36A7               	lsrf	___aodiv@divisor+7,f
  3670  047A  0CA6               	rrf	___aodiv@divisor+6,f
  3671  047B  0CA5               	rrf	___aodiv@divisor+5,f
  3672  047C  0CA4               	rrf	___aodiv@divisor+4,f
  3673  047D  0CA3               	rrf	___aodiv@divisor+3,f
  3674  047E  0CA2               	rrf	___aodiv@divisor+2,f
  3675  047F  0CA1               	rrf	___aodiv@divisor+1,f
  3676  0480  0CA0               	rrf	___aodiv@divisor,f
  3677  0481  3001               	movlw	1
  3678  0482  02F1               	subwf	___aodiv@counter,f
  3679  0483  1D03               	btfss	3,2
  3680  0484  2C86               	goto	u951
  3681  0485  2C87               	goto	u950
  3682  0486                     u951:
  3683  0486  2C3E               	goto	l1331
  3684  0487                     u950:
  3685  0487                     l1341:
  3686  0487  0872               	movf	___aodiv@sign,w
  3687  0488  1903               	btfsc	3,2
  3688  0489  2C8B               	goto	u961
  3689  048A  2C8C               	goto	u960
  3690  048B                     u961:
  3691  048B  2CAA               	goto	l290
  3692  048C                     u960:
  3693  048C                     l1343:
  3694  048C  09F3               	comf	___aodiv@quotient,f
  3695  048D  09F4               	comf	___aodiv@quotient+1,f
  3696  048E  09F5               	comf	___aodiv@quotient+2,f
  3697  048F  09F6               	comf	___aodiv@quotient+3,f
  3698  0490  09F7               	comf	___aodiv@quotient+4,f
  3699  0491  09F8               	comf	___aodiv@quotient+5,f
  3700  0492  09F9               	comf	___aodiv@quotient+6,f
  3701  0493  09FA               	comf	___aodiv@quotient+7,f
  3702  0494  0AF3               	incf	___aodiv@quotient,f
  3703  0495  1D03               	skipz
  3704  0496  2CAA               	goto	u97lld
  3705  0497  0AF4               	incf	___aodiv@quotient+1,f
  3706  0498  1D03               	skipz
  3707  0499  2CAA               	goto	u97lld
  3708  049A  0AF5               	incf	___aodiv@quotient+2,f
  3709  049B  1D03               	skipz
  3710  049C  2CAA               	goto	u97lld
  3711  049D  0AF6               	incf	___aodiv@quotient+3,f
  3712  049E  1D03               	skipz
  3713  049F  2CAA               	goto	u97lld
  3714  04A0  0AF7               	incf	___aodiv@quotient+4,f
  3715  04A1  1D03               	skipz
  3716  04A2  2CAA               	goto	u97lld
  3717  04A3  0AF8               	incf	___aodiv@quotient+5,f
  3718  04A4  1D03               	skipz
  3719  04A5  2CAA               	goto	u97lld
  3720  04A6  0AF9               	incf	___aodiv@quotient+6,f
  3721  04A7  1D03               	skipz
  3722  04A8  2CAA               	goto	u97lld
  3723  04A9  0AFA               	incf	___aodiv@quotient+7,f
  3724  04AA                     u97lld:
  3725  04AA                     l290:
  3726  04AA  0873               	movf	___aodiv@quotient,w
  3727  04AB  0140               	movlb	0	; select bank0
  3728  04AC  00A0               	movwf	?___aodiv
  3729  04AD  0874               	movf	___aodiv@quotient+1,w
  3730  04AE  00A1               	movwf	?___aodiv+1
  3731  04AF  0875               	movf	___aodiv@quotient+2,w
  3732  04B0  00A2               	movwf	?___aodiv+2
  3733  04B1  0876               	movf	___aodiv@quotient+3,w
  3734  04B2  00A3               	movwf	?___aodiv+3
  3735  04B3  0877               	movf	___aodiv@quotient+4,w
  3736  04B4  00A4               	movwf	?___aodiv+4
  3737  04B5  0878               	movf	___aodiv@quotient+5,w
  3738  04B6  00A5               	movwf	?___aodiv+5
  3739  04B7  0879               	movf	___aodiv@quotient+6,w
  3740  04B8  00A6               	movwf	?___aodiv+6
  3741  04B9  087A               	movf	___aodiv@quotient+7,w
  3742  04BA  00A7               	movwf	?___aodiv+7
  3743  04BB                     l291:
  3744  04BB  0008               	return
  3745  04BC                     __end_of___aodiv:
  3746                           
  3747                           	psect	text13
  3748  0EA5                     __ptext13:	
  3749 ;; *************** function _PIN_MANAGER_Initialize *****************
  3750 ;; Defined at:
  3751 ;;		line 63 in file "Proyecto.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3765 ;;      Params:         0       0       0       0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           
  3779                           ;psect for function _PIN_MANAGER_Initialize
  3780  0EA5                     _PIN_MANAGER_Initialize:
  3781  0EA5                     l1629:	
  3782                           ;incstack = 0
  3783                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3784                           
  3785                           
  3786                           ;Proyecto.c: 66:   LATA = 0x00;
  3787  0EA5  0140               	movlb	0	; select bank0
  3788  0EA6  0198               	clrf	24	;volatile
  3789                           
  3790                           ;Proyecto.c: 67:   LATB = 0x00;
  3791  0EA7  0199               	clrf	25	;volatile
  3792                           
  3793                           ;Proyecto.c: 68:   LATC = 0x00;
  3794  0EA8  019A               	clrf	26	;volatile
  3795  0EA9                     l1631:
  3796                           
  3797                           ;Proyecto.c: 71:   TRISA = 0b00010000;
  3798  0EA9  3010               	movlw	16
  3799  0EAA  0092               	movwf	18	;volatile
  3800  0EAB                     l1633:
  3801                           
  3802                           ;Proyecto.c: 72:   TRISB = 0b10100000;
  3803  0EAB  30A0               	movlw	160
  3804  0EAC  0093               	movwf	19	;volatile
  3805  0EAD                     l1635:
  3806                           
  3807                           ;Proyecto.c: 73:   TRISC = 0b00000100;
  3808  0EAD  3004               	movlw	4
  3809  0EAE  0094               	movwf	20	;volatile
  3810  0EAF                     l1637:
  3811                           
  3812                           ;Proyecto.c: 76:   ANSELC = 0;
  3813  0EAF  017E               	movlb	62	; select bank62
  3814  0EB0  01CE               	clrf	78	;volatile
  3815  0EB1                     l1639:
  3816                           
  3817                           ;Proyecto.c: 77:   ANSELB = 0;
  3818  0EB1  01C3               	clrf	67	;volatile
  3819  0EB2                     l1641:
  3820                           
  3821                           ;Proyecto.c: 78:   ANSELA = 0;
  3822  0EB2  01B8               	clrf	56	;volatile
  3823                           
  3824                           ;Proyecto.c: 82:   WPUC = 0x04;
  3825  0EB3  3004               	movlw	4
  3826  0EB4  00CF               	movwf	79	;volatile
  3827                           
  3828                           ;Proyecto.c: 85:   ODCONA = 0x04;
  3829  0EB5  3004               	movlw	4
  3830  0EB6  00BA               	movwf	58	;volatile
  3831  0EB7                     l1643:
  3832                           
  3833                           ;Proyecto.c: 86:   ODCONB = 0x00;
  3834  0EB7  01C5               	clrf	69	;volatile
  3835  0EB8                     l1645:
  3836                           
  3837                           ;Proyecto.c: 87:   ODCONC = 0x00;
  3838  0EB8  01D0               	clrf	80	;volatile
  3839                           
  3840                           ;Proyecto.c: 90:   SLRCONA = 0x37;
  3841  0EB9  3037               	movlw	55
  3842  0EBA  00BB               	movwf	59	;volatile
  3843                           
  3844                           ;Proyecto.c: 91:   SLRCONB = 0xFF;
  3845  0EBB  30FF               	movlw	255
  3846  0EBC  00C6               	movwf	70	;volatile
  3847                           
  3848                           ;Proyecto.c: 92:   SLRCONC = 0xFF;
  3849  0EBD  30FF               	movlw	255
  3850  0EBE  00D1               	movwf	81	;volatile
  3851                           
  3852                           ;Proyecto.c: 95:   INLVLA = 0x3F;
  3853  0EBF  303F               	movlw	63
  3854  0EC0  00BC               	movwf	60	;volatile
  3855                           
  3856                           ;Proyecto.c: 96:   INLVLB = 0xFF;
  3857  0EC1  30FF               	movlw	255
  3858  0EC2  00C7               	movwf	71	;volatile
  3859                           
  3860                           ;Proyecto.c: 97:   INLVLC = 0xFF;
  3861  0EC3  30FF               	movlw	255
  3862  0EC4  00D2               	movwf	82	;volatile
  3863  0EC5                     l96:
  3864  0EC5  0008               	return
  3865  0EC6                     __end_of_PIN_MANAGER_Initialize:
  3866                           
  3867                           	psect	text14
  3868  0F12                     __ptext14:	
  3869 ;; *************** function _Lcd_Out2 *****************
  3870 ;; Defined at:
  3871 ;;		line 116 in file "./flex_lcd.h"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  y               1    wreg     unsigned char 
  3874 ;;  x               1    3[COMMON] unsigned char 
  3875 ;;  buffer          1    4[COMMON] PTR unsigned char 
  3876 ;;		 -> CONT(20), 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  y               1    7[COMMON] unsigned char 
  3879 ;;  data            1    8[COMMON] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3889 ;;      Params:         2       0       0       0       0       0       0       0
  3890 ;;      Locals:         2       0       0       0       0       0       0       0
  3891 ;;      Temps:          2       0       0       0       0       0       0       0
  3892 ;;      Totals:         6       0       0       0       0       0       0       0
  3893 ;;Total ram usage:        6 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    1
  3896 ;; This function calls:
  3897 ;;		_Lcd_Chr_CP
  3898 ;;		_Lcd_Cmd
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _Lcd_Out2
  3906  0F12                     _Lcd_Out2:
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3910                           ;Lcd_Out2@y stored from wreg
  3911  0F12  00F7               	movwf	Lcd_Out2@y
  3912  0F13                     l1603:
  3913                           
  3914                           ;./flex_lcd.h: 116: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 117: {;./flex_lcd.h: 118: unsigned char data;;./flex_lcd.h: 119: switch (y)
  3915  0F13  2F2C               	goto	l1615
  3916  0F14                     l1605:
  3917  0F14  0873               	movf	Lcd_Out2@x,w
  3918  0F15  3E80               	addlw	128
  3919  0F16  00F5               	movwf	??_Lcd_Out2
  3920  0F17  0875               	movf	??_Lcd_Out2,w
  3921  0F18  00F8               	movwf	Lcd_Out2@data
  3922  0F19  2F42               	goto	l1617
  3923  0F1A                     l1607:
  3924  0F1A  0873               	movf	Lcd_Out2@x,w
  3925  0F1B  3EC0               	addlw	192
  3926  0F1C  00F5               	movwf	??_Lcd_Out2
  3927  0F1D  0875               	movf	??_Lcd_Out2,w
  3928  0F1E  00F8               	movwf	Lcd_Out2@data
  3929  0F1F  2F42               	goto	l1617
  3930  0F20                     l1609:
  3931  0F20  0873               	movf	Lcd_Out2@x,w
  3932  0F21  3E94               	addlw	148
  3933  0F22  00F5               	movwf	??_Lcd_Out2
  3934  0F23  0875               	movf	??_Lcd_Out2,w
  3935  0F24  00F8               	movwf	Lcd_Out2@data
  3936  0F25  2F42               	goto	l1617
  3937  0F26                     l1611:
  3938  0F26  0873               	movf	Lcd_Out2@x,w
  3939  0F27  3ED4               	addlw	212
  3940  0F28  00F5               	movwf	??_Lcd_Out2
  3941  0F29  0875               	movf	??_Lcd_Out2,w
  3942  0F2A  00F8               	movwf	Lcd_Out2@data
  3943  0F2B  2F42               	goto	l1617
  3944  0F2C                     l1615:
  3945  0F2C  0877               	movf	Lcd_Out2@y,w
  3946  0F2D  00F5               	movwf	??_Lcd_Out2
  3947  0F2E  01F6               	clrf	??_Lcd_Out2+1
  3948                           
  3949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 1, Range of values is 0 to 0
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte            4     3 (average)
  3955                           ; direct_byte            8     6 (fixed)
  3956                           ; jumptable            260     6 (fixed)
  3957                           ;	Chosen strategy is simple_byte
  3958  0F2F  0876               	movf	??_Lcd_Out2+1,w
  3959  0F30  3A00               	xorlw	0	; case 0
  3960  0F31  1903               	skipnz
  3961  0F32  2F34               	goto	l1783
  3962  0F33  2F42               	goto	l1617
  3963  0F34                     l1783:
  3964                           
  3965                           ; Switch size 1, requested type "simple"
  3966                           ; Number of cases is 4, Range of values is 1 to 4
  3967                           ; switch strategies available:
  3968                           ; Name         Instructions Cycles
  3969                           ; simple_byte           13     7 (average)
  3970                           ; direct_byte           17     9 (fixed)
  3971                           ; jumptable            263     9 (fixed)
  3972                           ;	Chosen strategy is simple_byte
  3973  0F34  0875               	movf	??_Lcd_Out2,w
  3974  0F35  3A01               	xorlw	1	; case 1
  3975  0F36  1903               	skipnz
  3976  0F37  2F14               	goto	l1605
  3977  0F38  3A03               	xorlw	3	; case 2
  3978  0F39  1903               	skipnz
  3979  0F3A  2F1A               	goto	l1607
  3980  0F3B  3A01               	xorlw	1	; case 3
  3981  0F3C  1903               	skipnz
  3982  0F3D  2F20               	goto	l1609
  3983  0F3E  3A07               	xorlw	7	; case 4
  3984  0F3F  1903               	skipnz
  3985  0F40  2F26               	goto	l1611
  3986  0F41  2F42               	goto	l1617
  3987  0F42                     l1617:
  3988                           
  3989                           ;./flex_lcd.h: 127: Lcd_Cmd(data);
  3990  0F42  0878               	movf	Lcd_Out2@data,w
  3991  0F43  3180  20CF  318F   	fcall	_Lcd_Cmd
  3992                           
  3993                           ;./flex_lcd.h: 128: while(*buffer)
  3994  0F46  2F52               	goto	l1623
  3995  0F47                     l1619:
  3996                           
  3997                           ;./flex_lcd.h: 129: {;./flex_lcd.h: 130:     Lcd_Chr_CP(*buffer);
  3998  0F47  0874               	movf	Lcd_Out2@buffer,w
  3999  0F48  0086               	movwf	6
  4000  0F49  0187               	clrf	7
  4001  0F4A  0801               	movf	1,w
  4002  0F4B  3181  2161  318F   	fcall	_Lcd_Chr_CP
  4003  0F4E                     l1621:
  4004                           
  4005                           ;./flex_lcd.h: 131:     buffer++;
  4006  0F4E  3001               	movlw	1
  4007  0F4F  00F5               	movwf	??_Lcd_Out2
  4008  0F50  0875               	movf	??_Lcd_Out2,w
  4009  0F51  07F4               	addwf	Lcd_Out2@buffer,f
  4010  0F52                     l1623:
  4011                           
  4012                           ;./flex_lcd.h: 128: while(*buffer)
  4013  0F52  0874               	movf	Lcd_Out2@buffer,w
  4014  0F53  0086               	movwf	6
  4015  0F54  0187               	clrf	7
  4016  0F55  0801               	movf	1,w
  4017  0F56  1D03               	btfss	3,2
  4018  0F57  2F59               	goto	u1471
  4019  0F58  2F5A               	goto	u1470
  4020  0F59                     u1471:
  4021  0F59  2F47               	goto	l1619
  4022  0F5A                     u1470:
  4023  0F5A                     l87:
  4024  0F5A  0008               	return
  4025  0F5B                     __end_of_Lcd_Out2:
  4026                           
  4027                           	psect	text15
  4028  0161                     __ptext15:	
  4029 ;; *************** function _Lcd_Chr_CP *****************
  4030 ;; Defined at:
  4031 ;;		line 137 in file "./flex_lcd.h"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  data            1    wreg     unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  data            1    2[COMMON] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4045 ;;      Params:         0       0       0       0       0       0       0       0
  4046 ;;      Locals:         1       0       0       0       0       0       0       0
  4047 ;;      Temps:          2       0       0       0       0       0       0       0
  4048 ;;      Totals:         3       0       0       0       0       0       0       0
  4049 ;;Total ram usage:        3 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_Lcd_Out2
  4055 ;;		_Lcd_Out
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function _Lcd_Chr_CP
  4061  0161                     _Lcd_Chr_CP:
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  4065                           ;Lcd_Chr_CP@data stored from wreg
  4066  0161  00F2               	movwf	Lcd_Chr_CP@data
  4067  0162                     l1533:
  4068                           
  4069                           ;./flex_lcd.h: 138: PORTBbits.RB6 = 0; PORTBbits.RB4 = 1;
  4070  0162  0140               	movlb	0	; select bank0
  4071  0163  130D               	bcf	13,6	;volatile
  4072  0164  160D               	bsf	13,4	;volatile
  4073  0165                     l1535:
  4074                           
  4075                           ;./flex_lcd.h: 139: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  4076  0165  0872               	movf	Lcd_Chr_CP@data,w
  4077  0166  00F0               	movwf	??_Lcd_Chr_CP
  4078  0167  3007               	movlw	7
  4079  0168                     u1395:
  4080  0168  36F0               	lsrf	??_Lcd_Chr_CP,f
  4081  0169  0B89               	decfsz	9,f
  4082  016A  2968               	goto	u1395
  4083  016B  0870               	movf	??_Lcd_Chr_CP,w
  4084  016C  3901               	andlw	1
  4085  016D  00F1               	movwf	??_Lcd_Chr_CP+1
  4086  016E  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4087  016F  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4088  0170  080E               	movf	14,w	;volatile
  4089  0171  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4090  0172  397F               	andlw	-129
  4091  0173  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4092  0174  008E               	movwf	14	;volatile
  4093  0175  0872               	movf	Lcd_Chr_CP@data,w
  4094  0176  00F0               	movwf	??_Lcd_Chr_CP
  4095  0177  3006               	movlw	6
  4096  0178                     u1405:
  4097  0178  36F0               	lsrf	??_Lcd_Chr_CP,f
  4098  0179  0B89               	decfsz	9,f
  4099  017A  2978               	goto	u1405
  4100  017B  0870               	movf	??_Lcd_Chr_CP,w
  4101  017C  3901               	andlw	1
  4102  017D  00F1               	movwf	??_Lcd_Chr_CP+1
  4103  017E  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4104  017F  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4105  0180  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4106  0181  080E               	movf	14,w	;volatile
  4107  0182  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4108  0183  39BF               	andlw	-65
  4109  0184  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4110  0185  008E               	movwf	14	;volatile
  4111                           
  4112                           ;./flex_lcd.h: 140: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  4113  0186  0872               	movf	Lcd_Chr_CP@data,w
  4114  0187  00F0               	movwf	??_Lcd_Chr_CP
  4115  0188  3005               	movlw	5
  4116  0189                     u1415:
  4117  0189  36F0               	lsrf	??_Lcd_Chr_CP,f
  4118  018A  0B89               	decfsz	9,f
  4119  018B  2989               	goto	u1415
  4120  018C  0870               	movf	??_Lcd_Chr_CP,w
  4121  018D  3901               	andlw	1
  4122  018E  00F1               	movwf	??_Lcd_Chr_CP+1
  4123  018F  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4124  0190  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4125  0191  080E               	movf	14,w	;volatile
  4126  0192  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4127  0193  39DF               	andlw	-33
  4128  0194  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4129  0195  008E               	movwf	14	;volatile
  4130  0196  0872               	movf	Lcd_Chr_CP@data,w
  4131  0197  00F0               	movwf	??_Lcd_Chr_CP
  4132  0198  3004               	movlw	4
  4133  0199                     u1425:
  4134  0199  36F0               	lsrf	??_Lcd_Chr_CP,f
  4135  019A  0B89               	decfsz	9,f
  4136  019B  2999               	goto	u1425
  4137  019C  0870               	movf	??_Lcd_Chr_CP,w
  4138  019D  3901               	andlw	1
  4139  019E  00F1               	movwf	??_Lcd_Chr_CP+1
  4140  019F  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4141  01A0  080E               	movf	14,w	;volatile
  4142  01A1  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4143  01A2  39EF               	andlw	-17
  4144  01A3  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4145  01A4  008E               	movwf	14	;volatile
  4146  01A5                     l1537:
  4147                           
  4148                           ;./flex_lcd.h: 141: _delay(10);
  4149  01A5  3003               	movlw	3
  4150  01A6                     u1747:
  4151  01A6  0B89               	decfsz	9,f
  4152  01A7  29A6               	goto	u1747
  4153  01A8  0000               	nop
  4154  01A9                     l1539:
  4155                           
  4156                           ;./flex_lcd.h: 142: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4157  01A9  0140               	movlb	0	; select bank0
  4158  01AA  170D               	bsf	13,6	;volatile
  4159  01AB                     l1541:
  4160  01AB  0000               	nop
  4161  01AC                     l1543:
  4162  01AC  0140               	movlb	0	; select bank0
  4163  01AD  130D               	bcf	13,6	;volatile
  4164  01AE                     l1545:
  4165                           
  4166                           ;./flex_lcd.h: 143: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  4167  01AE  0872               	movf	Lcd_Chr_CP@data,w
  4168  01AF  00F0               	movwf	??_Lcd_Chr_CP
  4169  01B0  3003               	movlw	3
  4170  01B1                     u1435:
  4171  01B1  36F0               	lsrf	??_Lcd_Chr_CP,f
  4172  01B2  0B89               	decfsz	9,f
  4173  01B3  29B1               	goto	u1435
  4174  01B4  0870               	movf	??_Lcd_Chr_CP,w
  4175  01B5  3901               	andlw	1
  4176  01B6  00F1               	movwf	??_Lcd_Chr_CP+1
  4177  01B7  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4178  01B8  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4179  01B9  080E               	movf	14,w	;volatile
  4180  01BA  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4181  01BB  397F               	andlw	-129
  4182  01BC  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4183  01BD  008E               	movwf	14	;volatile
  4184  01BE                     l1547:
  4185  01BE  0872               	movf	Lcd_Chr_CP@data,w
  4186  01BF  00F0               	movwf	??_Lcd_Chr_CP
  4187  01C0  3002               	movlw	2
  4188  01C1                     u1445:
  4189  01C1  36F0               	lsrf	??_Lcd_Chr_CP,f
  4190  01C2  0B89               	decfsz	9,f
  4191  01C3  29C1               	goto	u1445
  4192  01C4  0870               	movf	??_Lcd_Chr_CP,w
  4193  01C5  3901               	andlw	1
  4194  01C6  00F1               	movwf	??_Lcd_Chr_CP+1
  4195  01C7  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4196  01C8  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4197  01C9  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4198  01CA  080E               	movf	14,w	;volatile
  4199  01CB  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4200  01CC  39BF               	andlw	-65
  4201  01CD  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4202  01CE  008E               	movwf	14	;volatile
  4203  01CF                     l1549:
  4204                           
  4205                           ;./flex_lcd.h: 144: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  4206  01CF  3672               	lsrf	Lcd_Chr_CP@data,w
  4207  01D0  3901               	andlw	1
  4208  01D1  00F0               	movwf	??_Lcd_Chr_CP
  4209  01D2  0EF0               	swapf	??_Lcd_Chr_CP,f
  4210  01D3  0DF0               	rlf	??_Lcd_Chr_CP,f
  4211  01D4  080E               	movf	14,w	;volatile
  4212  01D5  0670               	xorwf	??_Lcd_Chr_CP,w
  4213  01D6  39DF               	andlw	-33
  4214  01D7  0670               	xorwf	??_Lcd_Chr_CP,w
  4215  01D8  008E               	movwf	14	;volatile
  4216  01D9                     l1551:
  4217  01D9  0872               	movf	Lcd_Chr_CP@data,w
  4218  01DA  3901               	andlw	1
  4219  01DB  00F0               	movwf	??_Lcd_Chr_CP
  4220  01DC  0EF0               	swapf	??_Lcd_Chr_CP,f
  4221  01DD  080E               	movf	14,w	;volatile
  4222  01DE  0670               	xorwf	??_Lcd_Chr_CP,w
  4223  01DF  39EF               	andlw	-17
  4224  01E0  0670               	xorwf	??_Lcd_Chr_CP,w
  4225  01E1  008E               	movwf	14	;volatile
  4226  01E2                     l1553:
  4227                           
  4228                           ;./flex_lcd.h: 145: _delay(10);
  4229  01E2  3003               	movlw	3
  4230  01E3                     u1757:
  4231  01E3  0B89               	decfsz	9,f
  4232  01E4  29E3               	goto	u1757
  4233  01E5  0000               	nop
  4234  01E6                     l1555:
  4235                           
  4236                           ;./flex_lcd.h: 146: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4237  01E6  0140               	movlb	0	; select bank0
  4238  01E7  170D               	bsf	13,6	;volatile
  4239  01E8                     l1557:
  4240  01E8  0000               	nop
  4241  01E9                     l1559:
  4242  01E9  0140               	movlb	0	; select bank0
  4243  01EA  130D               	bcf	13,6	;volatile
  4244  01EB                     l1561:
  4245                           
  4246                           ;./flex_lcd.h: 147: _delay((unsigned long)((5)*(1000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(1000000/4000000.0)));
  4247  01EB  0000               	nop
  4248  01EC                     l1563:
  4249  01EC  30C4               	movlw	196
  4250  01ED                     u1767:
  4251  01ED  3200               	nop2
  4252  01EE  3200               	nop2
  4253  01EF  0B89               	decfsz	9,f
  4254  01F0  29ED               	goto	u1767
  4255  01F1  3200               	nop2
  4256  01F2  0000               	nop
  4257  01F3                     l90:
  4258  01F3  0008               	return
  4259  01F4                     __end_of_Lcd_Chr_CP:
  4260                           
  4261                           	psect	text16
  4262  0043                     __ptext16:	
  4263 ;; *************** function _Lcd_Init *****************
  4264 ;; Defined at:
  4265 ;;		line 53 in file "./flex_lcd.h"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  data            1    4[COMMON] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4279 ;;      Params:         0       0       0       0       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0       0       0       0
  4281 ;;      Temps:          1       0       0       0       0       0       0       0
  4282 ;;      Totals:         2       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        2 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    1
  4286 ;; This function calls:
  4287 ;;		_Lcd_Cmd
  4288 ;; This function is called by:
  4289 ;;		_main
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           
  4294                           ;psect for function _Lcd_Init
  4295  0043                     _Lcd_Init:
  4296  0043                     l1577:	
  4297                           ;incstack = 0
  4298                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4299                           
  4300                           
  4301                           ;./flex_lcd.h: 54: unsigned char data;;./flex_lcd.h: 55: TRISCbits.TRISC7 = 0;
  4302  0043  0140               	movlb	0	; select bank0
  4303  0044  1394               	bcf	20,7	;volatile
  4304                           
  4305                           ;./flex_lcd.h: 56: TRISCbits.TRISC6 = 0;
  4306  0045  1314               	bcf	20,6	;volatile
  4307                           
  4308                           ;./flex_lcd.h: 57: TRISCbits.TRISC5 = 0;
  4309  0046  1294               	bcf	20,5	;volatile
  4310                           
  4311                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  4312  0047  1214               	bcf	20,4	;volatile
  4313                           
  4314                           ;./flex_lcd.h: 59: TRISBbits.TRISB6 = 0;
  4315  0048  1313               	bcf	19,6	;volatile
  4316                           
  4317                           ;./flex_lcd.h: 60: TRISBbits.TRISB4 = 0;
  4318  0049  1213               	bcf	19,4	;volatile
  4319                           
  4320                           ;./flex_lcd.h: 61: PORTCbits.RC7 = 0;
  4321  004A  138E               	bcf	14,7	;volatile
  4322                           
  4323                           ;./flex_lcd.h: 62: PORTCbits.RC6 = 0;
  4324  004B  130E               	bcf	14,6	;volatile
  4325                           
  4326                           ;./flex_lcd.h: 63: PORTCbits.RC5 = 0;
  4327  004C  128E               	bcf	14,5	;volatile
  4328                           
  4329                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  4330  004D  120E               	bcf	14,4	;volatile
  4331                           
  4332                           ;./flex_lcd.h: 65: PORTBbits.RB6 = 0;
  4333  004E  130D               	bcf	13,6	;volatile
  4334                           
  4335                           ;./flex_lcd.h: 66: PORTBbits.RB4 = 0;
  4336  004F  120D               	bcf	13,4	;volatile
  4337  0050                     l1579:
  4338                           
  4339                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4340  0050  30C4               	movlw	196
  4341  0051                     u1777:
  4342  0051  3200               	nop2
  4343  0052  3200               	nop2
  4344  0053  0B89               	decfsz	9,f
  4345  0054  2851               	goto	u1777
  4346  0055  3200               	nop2
  4347  0056  0000               	nop
  4348                           
  4349                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4350  0057  30C4               	movlw	196
  4351  0058                     u1787:
  4352  0058  3200               	nop2
  4353  0059  3200               	nop2
  4354  005A  0B89               	decfsz	9,f
  4355  005B  2858               	goto	u1787
  4356  005C  3200               	nop2
  4357  005D  0000               	nop
  4358                           
  4359                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4360  005E  30C4               	movlw	196
  4361  005F                     u1797:
  4362  005F  3200               	nop2
  4363  0060  3200               	nop2
  4364  0061  0B89               	decfsz	9,f
  4365  0062  285F               	goto	u1797
  4366  0063  3200               	nop2
  4367  0064  0000               	nop
  4368                           
  4369                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4370  0065  30C4               	movlw	196
  4371  0066                     u1807:
  4372  0066  3200               	nop2
  4373  0067  3200               	nop2
  4374  0068  0B89               	decfsz	9,f
  4375  0069  2866               	goto	u1807
  4376  006A  3200               	nop2
  4377  006B  0000               	nop
  4378                           
  4379                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4380  006C  30C4               	movlw	196
  4381  006D                     u1817:
  4382  006D  3200               	nop2
  4383  006E  3200               	nop2
  4384  006F  0B89               	decfsz	9,f
  4385  0070  286D               	goto	u1817
  4386  0071  3200               	nop2
  4387  0072  0000               	nop
  4388                           
  4389                           ;./flex_lcd.h: 72: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4390  0073  30C4               	movlw	196
  4391  0074                     u1827:
  4392  0074  3200               	nop2
  4393  0075  3200               	nop2
  4394  0076  0B89               	decfsz	9,f
  4395  0077  2874               	goto	u1827
  4396  0078  3200               	nop2
  4397  0079  0000               	nop
  4398  007A                     l1581:
  4399                           
  4400                           ;./flex_lcd.h: 73: for(data = 1; data < 4; data ++)
  4401  007A  01F4               	clrf	Lcd_Init@data
  4402  007B  0AF4               	incf	Lcd_Init@data,f
  4403  007C                     l59:
  4404                           
  4405                           ;./flex_lcd.h: 74: {;./flex_lcd.h: 75:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbi
      +                          ts.RC5 = 1; PORTCbits.RC4 = 1; PORTBbits.RB6 = 0;
  4406  007C  0140               	movlb	0	; select bank0
  4407  007D  138E               	bcf	14,7	;volatile
  4408  007E  130E               	bcf	14,6	;volatile
  4409  007F  168E               	bsf	14,5	;volatile
  4410  0080  160E               	bsf	14,4	;volatile
  4411  0081  130D               	bcf	13,6	;volatile
  4412                           
  4413                           ;./flex_lcd.h: 76:     PORTBbits.RB4 = 0; PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbit
      +                          s.RC5 = 1; PORTCbits.RC4 = 1;
  4414  0082  120D               	bcf	13,4	;volatile
  4415  0083  138E               	bcf	14,7	;volatile
  4416  0084  130E               	bcf	14,6	;volatile
  4417  0085  168E               	bsf	14,5	;volatile
  4418  0086  160E               	bsf	14,4	;volatile
  4419                           
  4420                           ;./flex_lcd.h: 77:     PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  4421  0087  170D               	bsf	13,6	;volatile
  4422  0088  120D               	bcf	13,4	;volatile
  4423                           
  4424                           ;./flex_lcd.h: 78:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  4425  0089  0000               	nop
  4426                           
  4427                           ;./flex_lcd.h: 79:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbit
      +                          s.RC4 = 1; PORTBbits.RB6 = 0;
  4428  008A  0140               	movlb	0	; select bank0
  4429  008B  138E               	bcf	14,7	;volatile
  4430  008C  130E               	bcf	14,6	;volatile
  4431  008D  168E               	bsf	14,5	;volatile
  4432  008E  160E               	bsf	14,4	;volatile
  4433  008F  130D               	bcf	13,6	;volatile
  4434                           
  4435                           ;./flex_lcd.h: 80:     PORTBbits.RB4 = 0;
  4436  0090  120D               	bcf	13,4	;volatile
  4437  0091                     l1585:
  4438                           
  4439                           ;./flex_lcd.h: 81:     _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4440  0091  30C4               	movlw	196
  4441  0092                     u1837:
  4442  0092  3200               	nop2
  4443  0093  3200               	nop2
  4444  0094  0B89               	decfsz	9,f
  4445  0095  2892               	goto	u1837
  4446  0096  3200               	nop2
  4447  0097  0000               	nop
  4448  0098                     l1587:
  4449                           
  4450                           ;./flex_lcd.h: 82: }
  4451  0098  3001               	movlw	1
  4452  0099  00F3               	movwf	??_Lcd_Init
  4453  009A  0873               	movf	??_Lcd_Init,w
  4454  009B  07F4               	addwf	Lcd_Init@data,f
  4455  009C                     l1589:
  4456  009C  3004               	movlw	4
  4457  009D  0274               	subwf	Lcd_Init@data,w
  4458  009E  1C03               	skipc
  4459  009F  28A1               	goto	u1461
  4460  00A0  28A2               	goto	u1460
  4461  00A1                     u1461:
  4462  00A1  287C               	goto	l59
  4463  00A2                     u1460:
  4464  00A2                     l60:
  4465                           
  4466                           ;./flex_lcd.h: 83: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4467  00A2  0140               	movlb	0	; select bank0
  4468  00A3  138E               	bcf	14,7	;volatile
  4469  00A4  130E               	bcf	14,6	;volatile
  4470  00A5  168E               	bsf	14,5	;volatile
  4471  00A6  120E               	bcf	14,4	;volatile
  4472  00A7  130D               	bcf	13,6	;volatile
  4473  00A8  120D               	bcf	13,4	;volatile
  4474                           
  4475                           ;./flex_lcd.h: 84: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  4476  00A9  138E               	bcf	14,7	;volatile
  4477  00AA  130E               	bcf	14,6	;volatile
  4478  00AB  168E               	bsf	14,5	;volatile
  4479  00AC  120E               	bcf	14,4	;volatile
  4480  00AD  170D               	bsf	13,6	;volatile
  4481  00AE  120D               	bcf	13,4	;volatile
  4482                           
  4483                           ;./flex_lcd.h: 85: _delay((unsigned long)((5)*(1000000/4000000.0)));
  4484  00AF  0000               	nop
  4485                           
  4486                           ;./flex_lcd.h: 86: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4487  00B0  0140               	movlb	0	; select bank0
  4488  00B1  138E               	bcf	14,7	;volatile
  4489  00B2  130E               	bcf	14,6	;volatile
  4490  00B3  168E               	bsf	14,5	;volatile
  4491  00B4  120E               	bcf	14,4	;volatile
  4492  00B5  130D               	bcf	13,6	;volatile
  4493  00B6  120D               	bcf	13,4	;volatile
  4494  00B7                     l1591:
  4495                           
  4496                           ;./flex_lcd.h: 87: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4497  00B7  30C4               	movlw	196
  4498  00B8                     u1847:
  4499  00B8  3200               	nop2
  4500  00B9  3200               	nop2
  4501  00BA  0B89               	decfsz	9,f
  4502  00BB  28B8               	goto	u1847
  4503  00BC  3200               	nop2
  4504  00BD  0000               	nop
  4505  00BE                     l1593:
  4506  00BE  3028               	movlw	40
  4507  00BF  3180  20CF  3180   	fcall	_Lcd_Cmd
  4508  00C2                     l1595:
  4509  00C2  3010               	movlw	16
  4510  00C3  3180  20CF  3180   	fcall	_Lcd_Cmd
  4511  00C6                     l1597:
  4512  00C6  3001               	movlw	1
  4513  00C7  3180  20CF  3180   	fcall	_Lcd_Cmd
  4514  00CA                     l1599:
  4515  00CA                     l1601:
  4516  00CA  300F               	movlw	15
  4517  00CB  3180  20CF  3180   	fcall	_Lcd_Cmd
  4518  00CE                     l61:
  4519  00CE  0008               	return
  4520  00CF                     __end_of_Lcd_Init:
  4521                           
  4522                           	psect	text17
  4523  00CF                     __ptext17:	
  4524 ;; *************** function _Lcd_Cmd *****************
  4525 ;; Defined at:
  4526 ;;		line 151 in file "./flex_lcd.h"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  data            1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  data            1    2[COMMON] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4540 ;;      Params:         0       0       0       0       0       0       0       0
  4541 ;;      Locals:         1       0       0       0       0       0       0       0
  4542 ;;      Temps:          2       0       0       0       0       0       0       0
  4543 ;;      Totals:         3       0       0       0       0       0       0       0
  4544 ;;Total ram usage:        3 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_Lcd_Init
  4550 ;;		_Lcd_Out2
  4551 ;;		_main
  4552 ;;		_Lcd_Out
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _Lcd_Cmd
  4558  00CF                     _Lcd_Cmd:
  4559                           
  4560                           ;incstack = 0
  4561                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  4562                           ;Lcd_Cmd@data stored from wreg
  4563  00CF  00F2               	movwf	Lcd_Cmd@data
  4564  00D0                     l1503:
  4565                           
  4566                           ;./flex_lcd.h: 152: PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4567  00D0  0140               	movlb	0	; select bank0
  4568  00D1  130D               	bcf	13,6	;volatile
  4569  00D2  120D               	bcf	13,4	;volatile
  4570  00D3                     l1505:
  4571                           
  4572                           ;./flex_lcd.h: 153: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  4573  00D3  0872               	movf	Lcd_Cmd@data,w
  4574  00D4  00F0               	movwf	??_Lcd_Cmd
  4575  00D5  3007               	movlw	7
  4576  00D6                     u1335:
  4577  00D6  36F0               	lsrf	??_Lcd_Cmd,f
  4578  00D7  0B89               	decfsz	9,f
  4579  00D8  28D6               	goto	u1335
  4580  00D9  0870               	movf	??_Lcd_Cmd,w
  4581  00DA  3901               	andlw	1
  4582  00DB  00F1               	movwf	??_Lcd_Cmd+1
  4583  00DC  0CF1               	rrf	??_Lcd_Cmd+1,f
  4584  00DD  0CF1               	rrf	??_Lcd_Cmd+1,f
  4585  00DE  080E               	movf	14,w	;volatile
  4586  00DF  0671               	xorwf	??_Lcd_Cmd+1,w
  4587  00E0  397F               	andlw	-129
  4588  00E1  0671               	xorwf	??_Lcd_Cmd+1,w
  4589  00E2  008E               	movwf	14	;volatile
  4590  00E3  0872               	movf	Lcd_Cmd@data,w
  4591  00E4  00F0               	movwf	??_Lcd_Cmd
  4592  00E5  3006               	movlw	6
  4593  00E6                     u1345:
  4594  00E6  36F0               	lsrf	??_Lcd_Cmd,f
  4595  00E7  0B89               	decfsz	9,f
  4596  00E8  28E6               	goto	u1345
  4597  00E9  0870               	movf	??_Lcd_Cmd,w
  4598  00EA  3901               	andlw	1
  4599  00EB  00F1               	movwf	??_Lcd_Cmd+1
  4600  00EC  0EF1               	swapf	??_Lcd_Cmd+1,f
  4601  00ED  0DF1               	rlf	??_Lcd_Cmd+1,f
  4602  00EE  0DF1               	rlf	??_Lcd_Cmd+1,f
  4603  00EF  080E               	movf	14,w	;volatile
  4604  00F0  0671               	xorwf	??_Lcd_Cmd+1,w
  4605  00F1  39BF               	andlw	-65
  4606  00F2  0671               	xorwf	??_Lcd_Cmd+1,w
  4607  00F3  008E               	movwf	14	;volatile
  4608                           
  4609                           ;./flex_lcd.h: 154: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  4610  00F4  0872               	movf	Lcd_Cmd@data,w
  4611  00F5  00F0               	movwf	??_Lcd_Cmd
  4612  00F6  3005               	movlw	5
  4613  00F7                     u1355:
  4614  00F7  36F0               	lsrf	??_Lcd_Cmd,f
  4615  00F8  0B89               	decfsz	9,f
  4616  00F9  28F7               	goto	u1355
  4617  00FA  0870               	movf	??_Lcd_Cmd,w
  4618  00FB  3901               	andlw	1
  4619  00FC  00F1               	movwf	??_Lcd_Cmd+1
  4620  00FD  0EF1               	swapf	??_Lcd_Cmd+1,f
  4621  00FE  0DF1               	rlf	??_Lcd_Cmd+1,f
  4622  00FF  080E               	movf	14,w	;volatile
  4623  0100  0671               	xorwf	??_Lcd_Cmd+1,w
  4624  0101  39DF               	andlw	-33
  4625  0102  0671               	xorwf	??_Lcd_Cmd+1,w
  4626  0103  008E               	movwf	14	;volatile
  4627  0104  0872               	movf	Lcd_Cmd@data,w
  4628  0105  00F0               	movwf	??_Lcd_Cmd
  4629  0106  3004               	movlw	4
  4630  0107                     u1365:
  4631  0107  36F0               	lsrf	??_Lcd_Cmd,f
  4632  0108  0B89               	decfsz	9,f
  4633  0109  2907               	goto	u1365
  4634  010A  0870               	movf	??_Lcd_Cmd,w
  4635  010B  3901               	andlw	1
  4636  010C  00F1               	movwf	??_Lcd_Cmd+1
  4637  010D  0EF1               	swapf	??_Lcd_Cmd+1,f
  4638  010E  080E               	movf	14,w	;volatile
  4639  010F  0671               	xorwf	??_Lcd_Cmd+1,w
  4640  0110  39EF               	andlw	-17
  4641  0111  0671               	xorwf	??_Lcd_Cmd+1,w
  4642  0112  008E               	movwf	14	;volatile
  4643  0113                     l1507:
  4644                           
  4645                           ;./flex_lcd.h: 155: _delay(10);
  4646  0113  3003               	movlw	3
  4647  0114                     u1857:
  4648  0114  0B89               	decfsz	9,f
  4649  0115  2914               	goto	u1857
  4650  0116  0000               	nop
  4651  0117                     l1509:
  4652                           
  4653                           ;./flex_lcd.h: 156: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4654  0117  0140               	movlb	0	; select bank0
  4655  0118  170D               	bsf	13,6	;volatile
  4656  0119                     l1511:
  4657  0119  0000               	nop
  4658  011A                     l1513:
  4659  011A  0140               	movlb	0	; select bank0
  4660  011B  130D               	bcf	13,6	;volatile
  4661  011C                     l1515:
  4662                           
  4663                           ;./flex_lcd.h: 157: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  4664  011C  0872               	movf	Lcd_Cmd@data,w
  4665  011D  00F0               	movwf	??_Lcd_Cmd
  4666  011E  3003               	movlw	3
  4667  011F                     u1375:
  4668  011F  36F0               	lsrf	??_Lcd_Cmd,f
  4669  0120  0B89               	decfsz	9,f
  4670  0121  291F               	goto	u1375
  4671  0122  0870               	movf	??_Lcd_Cmd,w
  4672  0123  3901               	andlw	1
  4673  0124  00F1               	movwf	??_Lcd_Cmd+1
  4674  0125  0CF1               	rrf	??_Lcd_Cmd+1,f
  4675  0126  0CF1               	rrf	??_Lcd_Cmd+1,f
  4676  0127  080E               	movf	14,w	;volatile
  4677  0128  0671               	xorwf	??_Lcd_Cmd+1,w
  4678  0129  397F               	andlw	-129
  4679  012A  0671               	xorwf	??_Lcd_Cmd+1,w
  4680  012B  008E               	movwf	14	;volatile
  4681  012C                     l1517:
  4682  012C  0872               	movf	Lcd_Cmd@data,w
  4683  012D  00F0               	movwf	??_Lcd_Cmd
  4684  012E  3002               	movlw	2
  4685  012F                     u1385:
  4686  012F  36F0               	lsrf	??_Lcd_Cmd,f
  4687  0130  0B89               	decfsz	9,f
  4688  0131  292F               	goto	u1385
  4689  0132  0870               	movf	??_Lcd_Cmd,w
  4690  0133  3901               	andlw	1
  4691  0134  00F1               	movwf	??_Lcd_Cmd+1
  4692  0135  0EF1               	swapf	??_Lcd_Cmd+1,f
  4693  0136  0DF1               	rlf	??_Lcd_Cmd+1,f
  4694  0137  0DF1               	rlf	??_Lcd_Cmd+1,f
  4695  0138  080E               	movf	14,w	;volatile
  4696  0139  0671               	xorwf	??_Lcd_Cmd+1,w
  4697  013A  39BF               	andlw	-65
  4698  013B  0671               	xorwf	??_Lcd_Cmd+1,w
  4699  013C  008E               	movwf	14	;volatile
  4700  013D                     l1519:
  4701                           
  4702                           ;./flex_lcd.h: 158: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  4703  013D  3672               	lsrf	Lcd_Cmd@data,w
  4704  013E  3901               	andlw	1
  4705  013F  00F0               	movwf	??_Lcd_Cmd
  4706  0140  0EF0               	swapf	??_Lcd_Cmd,f
  4707  0141  0DF0               	rlf	??_Lcd_Cmd,f
  4708  0142  080E               	movf	14,w	;volatile
  4709  0143  0670               	xorwf	??_Lcd_Cmd,w
  4710  0144  39DF               	andlw	-33
  4711  0145  0670               	xorwf	??_Lcd_Cmd,w
  4712  0146  008E               	movwf	14	;volatile
  4713  0147                     l1521:
  4714  0147  0872               	movf	Lcd_Cmd@data,w
  4715  0148  3901               	andlw	1
  4716  0149  00F0               	movwf	??_Lcd_Cmd
  4717  014A  0EF0               	swapf	??_Lcd_Cmd,f
  4718  014B  080E               	movf	14,w	;volatile
  4719  014C  0670               	xorwf	??_Lcd_Cmd,w
  4720  014D  39EF               	andlw	-17
  4721  014E  0670               	xorwf	??_Lcd_Cmd,w
  4722  014F  008E               	movwf	14	;volatile
  4723  0150                     l1523:
  4724                           
  4725                           ;./flex_lcd.h: 159: _delay(10);
  4726  0150  3003               	movlw	3
  4727  0151                     u1867:
  4728  0151  0B89               	decfsz	9,f
  4729  0152  2951               	goto	u1867
  4730  0153  0000               	nop
  4731  0154                     l1525:
  4732                           
  4733                           ;./flex_lcd.h: 160: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4734  0154  0140               	movlb	0	; select bank0
  4735  0155  170D               	bsf	13,6	;volatile
  4736  0156                     l1527:
  4737  0156  0000               	nop
  4738  0157                     l1529:
  4739  0157  0140               	movlb	0	; select bank0
  4740  0158  130D               	bcf	13,6	;volatile
  4741  0159                     l1531:
  4742                           
  4743                           ;./flex_lcd.h: 161: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4744  0159  30C4               	movlw	196
  4745  015A                     u1877:
  4746  015A  3200               	nop2
  4747  015B  3200               	nop2
  4748  015C  0B89               	decfsz	9,f
  4749  015D  295A               	goto	u1877
  4750  015E  3200               	nop2
  4751  015F  0000               	nop
  4752  0160                     l93:
  4753  0160  0008               	return
  4754  0161                     __end_of_Lcd_Cmd:
  4755  007E                     btemp	set	126	;btemp
  4756  007E                     wtemp0	set	126
  4757                           
  4758                           	psect	config
  4759                           
  4760                           ;Config register CONFIG1 @ 0x8007
  4761                           ;	External Oscillator Mode Selection bits
  4762                           ;	FEXTOSC = OFF, Oscillator not enabled
  4763                           ;	Power-up Default Value for COSC bits
  4764                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  4765                           ;	Clock Out Enable bit
  4766                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4767                           ;	VDD Range Analog Calibration Selection bit
  4768                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4769  8007                     	org	32775
  4770  8007  3FED               	dw	16365
  4771                           
  4772                           ;Config register CONFIG2 @ 0x8008
  4773                           ;	Master Clear Enable bit
  4774                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4775                           ;	Power-up Timer Selection bits
  4776                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4777                           ;	WDT Operating Mode bits
  4778                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4779                           ;	Brown-out Reset Enable bits
  4780                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4781                           ;	Brown-out Reset Voltage Selection bit
  4782                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4783                           ;	PPSLOCKED One-Way Set Enable bit
  4784                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  4785                           ;	Stack Overflow/Underflow Reset Enable bit
  4786                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4787  8008                     	org	32776
  4788  8008  3FE7               	dw	16359
  4789                           
  4790                           ;Config register CONFIG4 @ 0x800A
  4791                           ;	Boot Block Size Selection bits
  4792                           ;	BBSIZE = BB512, 512 words boot block size
  4793                           ;	Boot Block Enable bit
  4794                           ;	BBEN = OFF, Boot Block is disabled
  4795                           ;	SAF Enable bit
  4796                           ;	SAFEN = OFF, SAF is disabled
  4797                           ;	Application Block Write Protection bit
  4798                           ;	WRTAPP = OFF, Application Block is not write-protected
  4799                           ;	Boot Block Write Protection bit
  4800                           ;	WRTB = OFF, Boot Block is not write-protected
  4801                           ;	Configuration Registers Write Protection bit
  4802                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4803                           ;	Storage Area Flash (SAF) Write Protection bit
  4804                           ;	WRTSAF = OFF, SAF is not write-protected
  4805                           ;	Low Voltage Programming Enable bit
  4806                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  4807  800A                     	org	32778
  4808  800A  3FFF               	dw	16383
  4809                           
  4810                           ;Config register CONFIG5 @ 0x800B
  4811                           ;	User Program Flash Memory Code Protection bit
  4812                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4813  800B                     	org	32779
  4814  800B  3FFF               	dw	16383

Data Sizes:
    Strings     95
    Constant    0
    Data        0
    BSS         64
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80      9      69
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S535_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9897
                                             74 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
             _PIN_MANAGER_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    7202
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             6     4      2    2205
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PIN_MANAGER_Initialize
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      9      45       8       86.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A3      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 24 09:54:58 2021

                             l60 00A2                               l61 00CE                               l90 01F3  
                             l59 007C                               l93 0160                               l87 0F5A  
                             l96 0EC5                              l303 03A9                              l304 03BA  
                            l290 04AA                              l291 04BB                              l711 0625  
                            l732 0EA4                              l725 0042                              l653 0EE9  
                            l718 02D0                              l744 0FA9                              l752 0F11  
                            l680 0FC4                              l729 0EA4                              l761 0E8A  
                            l755 000B                              l683 0FE6                              l685 0FFF  
                            l693 052D                              l694 0543                              l688 0505  
                            l697 05B2                              l689 050F                              u810 0F60  
                            u811 0F5F                              u820 0F65                              u821 0F64  
                            u910 041B                              u830 0F74                              u831 0F73  
                            u920 042B                              u840 0F91                              u921 042A  
                            u841 0F90                              u930 043E                              u850 0F11  
                            u931 043D                              u851 0F10                              u940 0468  
                            u860 0E84                              u941 0467                              u845 0F8D  
                            u861 0E83                              u950 0487                              u870 03C6  
                            u951 0486                              u871 03C5                              u960 048C  
                            u961 048B                              u945 0464                              u890 03F1  
                            u891 03F0                              u980 02DC                              u981 02DB  
                            _abs 0E8B                              _pad 0FAA                              wreg 0009  
                           ?_abs 0073                             l1301 0E7C                             l1311 03C6  
                           l1303 0E84                             l1321 041E                             l1313 03E7  
                           l1401 04BE                             l1331 043E                             l1323 042B  
                           l1315 03F1                             l1307 03BB                             l1411 051F  
                           l1403 04CE                             l1333 0446                             l1325 042E  
                           l1341 0487                             l1317 0410                             l1309 03BC  
                           l1421 0547                             l1413 0525                             l1405 04E1  
                           l1511 0119                             l1503 00D0                             l1343 048C  
                           l1335 0468                             l1327 0436                             l1319 0414  
                           l1351 02FD                             l1431 0585                             l1423 054A  
                           l1415 0535                             l1407 04E7                             l1521 0147  
                           l1513 011A                             l1505 00D3                             l1601 00CA  
                           l1337 0478                             l1329 043A                             l1361 033E  
                           l1353 0307                             l1345 02D1                             l1281 0F74  
                           l1273 0F5B                             l1433 05C0                             l1441 05ED  
                           l1425 054F                             l1417 053B                             l1409 050A  
                           l1531 0159                             l1523 0150                             l1515 011C  
                           l1507 0113                             l1611 0F26                             l1603 0F13  
                           l1339 0479                             l1363 0342                             l1371 0386  
                           l1355 0326                             l1347 02D2                             l1283 0F91  
                           l1275 0F60                             l1291 0EEF                             l1451 0607  
                           l1443 05F4                             l1435 05CD                             l1427 057D  
                           l1419 053F                             l1525 0154                             l1517 012C  
                           l1509 0117                             l1541 01AB                             l1533 0162  
                           l1621 0F4E                             l1605 0F14                             l1373 038B  
                           l1365 0346                             l1357 0333                             l1349 02DC  
                           l1285 0FA1                             l1277 0F65                             l1293 0EFD  
                           l1381 0FBD                             l1453 060B                             l1445 05F8  
                           l1437 05DA                             l1429 0581                             l1461 0207  
                           l1701 0661                             l1527 0156                             l1519 013D  
                           l1551 01D9                             l1543 01AC                             l1535 0165  
                           l1623 0F52                             l1607 0F1A                             l1615 0F2C  
                           l1631 0EA9                             l1367 0368                             l1359 0336  
                           l1279 0F6A                             l1295 0F02                             l1391 0FEB  
                           l1383 0FC2                             l1375 0FAC                             l1447 05FC  
                           l1455 0613                             l1439 05E8                             l1471 023D  
                           l1463 020F                             l1711 06A8                             l1703 067B  
                           l1529 0157                             l1561 01EB                             l1553 01E2  
                           l1545 01AE                             l1537 01A5                             l1609 0F20  
                           l1617 0F42                             l1641 0EB2                             l1633 0EAB  
                           l1369 0378                             l1289 0EEC                             l1297 0E73  
                           l1393 0FF3                             l1385 0FC7                             l1377 0FB0  
                           l1449 0602                             l1481 0289                             l1473 0245  
                           l1465 0215                             l1721 06EA                             l1713 06BD  
                           l1705 0683                             l1563 01EC                             l1555 01E6  
                           l1547 01BE                             l1539 01A9                             l1619 0F47  
                           l1643 0EB7                             l1635 0EAD                             l1299 0E78  
                           l1387 0FD3                             l1379 0FB8                             l1491 02AA  
                           l1483 0291                             l1475 025E                             l1467 021A  
                           l1459 01F6                             l1571 0030                             l1651 0ED2  
                           l1731 072C                             l1723 06F2                             l1715 06C5  
                           l1707 0698                             l1581 007A                             l1557 01E8  
                           l1549 01CF                             l1645 0EB8                             l1637 0EAF  
                           l1629 0EA5                             l1397 0E8B                             l1389 0FD8  
                           l1485 029C                             l1469 022C                             l1573 003A  
                           l1565 0014                             l1653 0ED4                             l1741 0761  
                           l1733 0734                             l1725 0707                             l1717 06CD  
                           l1709 06A0                             l1591 00B7                             l1559 01E9  
                           l1639 0EB1                             l1399 0E98                             l1479 0278  
                           l1495 02AD                             l1567 0018                             l1655 0EE1  
                           l1647 0EC8                             l1751 07A3                             l1743 0776  
                           l1735 073C                             l1727 070F                             l1719 06E2  
                           l1593 00BE                             l1585 0091                             l1577 0043  
                           l1497 02C6                             l1489 02A2                             l1569 001C  
                           l1649 0ED0                             l1761 07E5                             l1753 07AB  
                           l1745 077E                             l1737 0751                             l1729 0717  
                           l1595 00C2                             l1587 0098                             l1579 0050  
                           l1755 07C0                             l1747 0786                             l1739 0759  
                           l1691 063F                             l1597 00C6                             l1589 009C  
                           l1757 07C8                             l1749 079B                             l1693 0644  
                           l1685 0626                             l1599 00CA                             l1783 0F34  
                           l1759 07D0                             l1695 064C                             l1687 0629  
                           l1697 0651                             l1689 0632                             l1699 0655  
                           ?_pad 0024                             STR_1 0800                             STR_2 0817  
                           STR_3 081F                             STR_4 0827                             STR_5 082F  
                           STR_6 0837                             STR_7 083F                             STR_8 0847  
                           STR_9 084F                             u1000 0307                             u1001 0306  
                           u1020 0333                             u1100 0FE6                             u1021 0332  
                           u1101 0FE5                             u1030 0346                             u1110 0FEB  
                           u1031 0345                             u1111 0FEA                             u1040 0368  
                           u1120 0E98                             u1200 053F                             u1041 0367  
                           u1121 0E97                             u1105 0FE2                             u1201 053E  
                           u1050 0386                             u1210 05C0                             u1130 04D9  
                           u1051 0385                             u1211 05BF                             u1131 04D7  
                           u1060 038B                             u1220 05CD                             u1140 04DA  
                           u1300 022C                             _CONT 00C8                             u1061 038A  
                           u1045 0364                             u1125 0E94                             u1221 05CC  
                           u1301 022B                             u1230 05DA                             u1150 04E7  
                           u1310 023D                             u1231 05D9                             u1215 05BC  
                           u1151 04E6                             u1311 023C                             u1080 0FB0  
                           u1240 05E8                             u1320 0289                             u1081 0FAF  
                           u1241 05E7                             u1321 0288                             u1090 0FBD  
                           u1250 05ED                             u1170 050A                             u1091 0FBC  
                           u1251 05EC                             u1235 05D6                             u1171 0509  
                           u1260 05F4                             u1180 051F                             u1500 0651  
                           u1405 0178                             u1261 05F3                             u1245 05E4  
                           u1181 051E                             u1501 0650                             _LATA 0018  
                           u1270 05F8                             u1190 053B                             u1510 0683  
                           _LATB 0019                             u1335 00D6                             u1415 0189  
                           u1271 05F7                             u1191 053A                             u1511 0682  
                           _LATC 001A                             u1280 0602                             u1600 07D0  
                           u1520 06A8                             u1345 00E6                             u1425 0199  
                           u1281 0601                             u1185 051B                             u1601 07CF  
                           u1521 06A7                             u1290 0207                             u1450 003A  
                           u1530 06CD                             u1355 00F7                             u1435 01B1  
                           u1291 0206                             u1451 0039                             u1531 06CC  
                           u1460 00A2                             u1540 06F2                             u1365 0107  
                           u1461 00A1                             u1445 01C1                             u1541 06F1  
                           u1470 0F5A                             u1550 0717                             u1375 011F  
                           u1471 0F59                             u1551 0716                             u1560 073C  
                           u1385 012F                             u1561 073B                             u1617 0638  
                           u1570 0761                             u1490 0644                             u1395 0168  
                           u1707 077A                             u1571 0760                             u1627 0648  
                           u1491 0643                             u1580 0786                             u1717 079F  
                           u1581 0785                             u1637 0674                             u1590 07AB  
                           u1807 0066                             u1727 07C4                             u1591 07AA  
                           u1647 069C                             u1817 006D                             u1737 07E9  
                           u1657 06C1                             u1827 0074                             u1747 01A6  
                           u1667 06E6                             u1837 0092                             u1757 01E3  
                           u1677 070B                             u1847 00B8                             u1767 01ED  
                           u1687 0730                             u1857 0114                             u1777 0051  
                           u1697 0755                             u1867 0151                             u1787 0058  
                           u1877 015A                             u1797 005F                             _WPUC 1F4F  
                           abs@a 0073                             _dbuf 00A8                             _paca 00A6  
                           _main 0626                             _dtoa 04BC                             _prec 00A4  
                           _nout 00A0                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             start 0002  
                __end_of_Lcd_Cmd 0161                       _Lcd_Chr_CP 0161                            ??_abs 0075  
                          ??_pad 007C                   Lcd_Out2@buffer 0074                  __end_of___aodiv 04BC  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 03BB  
                          STR_10 0857                            STR_11 080E                     vfpfcnvrt@fmt 004E  
                          _TRISA 0012                            _TRISB 0013                            _TRISC 0014  
                          u90lld 0410                            u88lld 03E5                            u97lld 04AA  
                          u99lld 02FB                            _flags 006C                            _fputc 0F5B  
                          _fputs 0EEA                            pad@fp 002B                            _width 00A2  
                          _putch 000B                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003E                            dtoa@s 0042  
                          dtoa@w 0040                            status 0003                            wtemp0 007E  
                __end_of_sprintf 0EEA                 __end_of_Lcd_Init 00CF                 __end_of_Lcd_Out2 0F5B  
                __initialization 07F0                     __end_of_main 07F0                     __end_of_dtoa 0626  
                         ??_main 006A                           ??_dtoa 0038                           ?_fputc 0070  
                         ?_fputs 0078                           _ANSELA 1F38                           ?_putch 0070  
                         _ANSELB 1F43                           _ANSELC 1F4E                           _ODCONA 1F3A  
                         _ODCONB 1F45                           _ODCONC 1F50                           _INLVLA 1F3C  
                         _INLVLB 1F47                           _INLVLC 1F52                           u101lld 0326  
                         u107lld 03A9                           u116lld 0505                        ??_Lcd_Cmd 0070  
                   vfprintf@cfmt 0064                      ?_Lcd_Chr_CP 0070                        ??___aodiv 0070  
                      ??___aomod 0070                           pad@buf 0024                           dtoa@fp 003D  
                         _strlen 0E72                           fputc@c 0070                           fputs@c 0020  
                         fputs@i 0021                           fputs@s 0023                           putch@c 0070  
               __end_of_vfprintf 0043                        ??_sprintf 007D          __end_of__initialization 07FD  
                 __pcstackCOMMON 0070                    __end_of_fputc 0FAA                    __end_of_fputs 0F12  
                  __end_of_putch 000C                        ?_Lcd_Init 0070                        ?_Lcd_Out2 0073  
                        ??_fputc 0073                          ??_fputs 0079              __size_of_Lcd_Chr_CP 0093  
                        ??_putch 0070                       __pbssBANK0 006C                       __pbssBANK1 00A0  
                     __pmaintext 0626                          ?_strlen 0070               __size_of_vfpfcnvrt 00DD  
                     ??_Lcd_Init 0073                       ??_Lcd_Out2 0075                          _SLRCONA 1F3B  
                        _SLRCONB 1F46                          _SLRCONC 1F51                          _Lcd_Cmd 00CF  
                        ___aodiv 03BB                          ___aomod 02D1                        ?_vfprintf 005E  
                        __ptext1 0EC6                          __ptext2 0012                          __ptext3 01F4  
                        __ptext4 04BC                          __ptext5 0FAA                          __ptext6 0E72  
                        __ptext7 0EEA                          __ptext8 0F5B                          __ptext9 000B  
                __size_of_strlen 0019                     __size_of_abs 001A                     __size_of_pad 0056  
       ??_PIN_MANAGER_Initialize 0070                          _sprintf 0EC6                          clrloop0 000D  
           end_of_initialization 07FD                          fputc@fp 0072                          fputs@fp 0078  
              __end_of_vfpfcnvrt 02D1                     ??_Lcd_Chr_CP 0070                        Lcd_Out2@x 0073  
                      Lcd_Out2@y 0077                       ??_vfprintf 0061                          strlen@a 0073  
                        strlen@s 0074                        _PORTBbits 000D                        _PORTCbits 000E  
                      _TRISBbits 0013                        _TRISCbits 0014               __end_of_Lcd_Chr_CP 01F4  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005D                      vfpfcnvrt@ll 0055  
                 __end_of_strlen 0E8B              start_initialization 07F0  __size_of_PIN_MANAGER_Initialize 0021  
                    __end_of_abs 0EA5                      __end_of_pad 1000                __size_of_Lcd_Init 008C  
              __size_of_Lcd_Out2 0049                      vfprintf@fmt 005E                         ??_strlen 0072  
                      ___latbits 0001                    __pcstackBANK0 0020                    __pcstackBANK1 00DC  
               ___aodiv@dividend 0028                         ?_Lcd_Cmd 0070           _PIN_MANAGER_Initialize 0EA5  
                       ?___aodiv 0020                         ?___aomod 0020                 ___aodiv@quotient 0073  
              __size_of_vfprintf 0031                         ?_sprintf 0066                   __size_of_fputc 004F  
                 __size_of_fputs 0028                   __size_of_putch 0001                         _LATAbits 0018  
                      clear_ram0 000C                        _vfpfcnvrt 01F4                     Lcd_Init@data 0074  
                   Lcd_Out2@data 0078                         _Lcd_Init 0043                         _Lcd_Out2 0F12  
               __size_of_Lcd_Cmd 0092                       vfprintf@ap 0060                       vfprintf@fp 0063  
               __size_of___aodiv 0101                 __size_of___aomod 00EA                       ?_vfpfcnvrt 004E  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                       sprintf@fmt 0066  
                 Lcd_Chr_CP@data 0072                         _dtoa$608 003B                         __ptext10 0E8B  
                       __ptext11 02D1                         __ptext12 03BB                         __ptext13 0EA5  
                       __ptext14 0F12                         __ptext15 0161                         __ptext16 0043  
                       __ptext17 00CF                         _contador 006E                 __size_of_sprintf 0024  
                    Lcd_Cmd@data 0072                    __size_of_main 01CA                    __size_of_dtoa 016A  
                       _vfprintf 0012                 ___aomod@dividend 0028                   __pstringtext10 084F  
                 __pstringtext11 0857                   __pstringtext12 0000                        sprintf@ap 00DE  
        ?_PIN_MANAGER_Initialize 0070                  ___aomod@divisor 0020                      ??_vfpfcnvrt 0050  
                ___aomod@counter 0071                    __pstringtext1 0800                    __pstringtext2 080E  
                  __pstringtext3 0817                    __pstringtext4 081F                    __pstringtext5 0827  
                  __pstringtext6 082F                    __pstringtext7 0837                    __pstringtext8 083F  
                  __pstringtext9 0847                         sprintf@f 00E0                         sprintf@s 00DF  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0EC6                     ___aomod@sign 0072  
